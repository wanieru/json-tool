{"version":3,"file":"lib/json-tool.js","mappings":"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","sources":["webpack://@wanieru/json-tool/./js/JsonTool.js","webpack://@wanieru/json-tool/webpack/bootstrap","webpack://@wanieru/json-tool/./js/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonTool = void 0;\nclass JsonTool {\n    constructor(element, validator = null) {\n        var _a, _b;\n        this.elementState = {};\n        this.containerElement = element;\n        this.validator = validator !== null && validator !== void 0 ? validator : (() => { return { valid: true }; });\n        this.schema = null;\n        this.root = document.createElement(\"div\");\n        this.root.style.fontFamily = \"monospace\";\n        this.root.style.marginLeft = \"30px\";\n        this.root.classList.add(\"json-tool\");\n        this.rootObject = null;\n        this.rootElement = null;\n        this.errorMessages = document.createElement(\"div\");\n        this.errorMessages.classList.add(\"json-tool-errors\");\n        const iframe = document.createElement(\"iframe\");\n        iframe.style.width = \"100%\";\n        iframe.style.height = \"100%\";\n        iframe.style.overflow = \"scroll\";\n        iframe.style.border = \"0\";\n        element.innerHTML = \"\";\n        element.appendChild(iframe);\n        this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n        this.iframeBody.append(this.root);\n        this.createCss(this.iframeBody);\n        iframe.onload = () => {\n            var _a, _b;\n            this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n            this.iframeBody.append(this.root);\n            this.createCss(this.iframeBody);\n            this.iframeBody.appendChild(this.errorMessages);\n        };\n    }\n    deleteChild(key) {\n    }\n    getState() {\n        return this.elementState;\n    }\n    load(schema, value, validator) {\n        this.validator = validator !== null && validator !== void 0 ? validator : this.validator;\n        this.schema = schema;\n        this.root.innerHTML = \"\";\n        if (schema.title) {\n            const title = document.createElement(\"h3\");\n            title.textContent = schema.title;\n            JsonElement.addDescription(title, schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n            this.root.appendChild(title);\n        }\n        this.rootObject = document.createElement(\"div\");\n        this.root.appendChild(this.rootObject);\n        this.rootElement = new JsonElement(\"\", \"root\", this.rootObject, schema, value, this);\n        this.validate();\n    }\n    hide() {\n        this.containerElement.innerHTML = \"\";\n    }\n    setValidator(validator) {\n        this.validator = validator;\n    }\n    getValue() {\n        var _a;\n        return (_a = this.rootElement) === null || _a === void 0 ? void 0 : _a.getValue();\n    }\n    update() {\n        var _a;\n        if (!this.rootObject)\n            return;\n        let number = 1;\n        (_a = this.rootObject) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\".line-number\").forEach(e => {\n            e.innerText = number.toString();\n            number++;\n        });\n        this.validate();\n    }\n    validate() {\n        window.setTimeout(() => {\n            var _a;\n            if (this.schema && this.errorMessages) {\n                const valid = this.validator(this.getValue(), this.schema);\n                this.errorMessages.innerHTML = \"\";\n                if (!valid.valid) {\n                    this.errorMessages.innerHTML = ((_a = valid.errors) !== null && _a !== void 0 ? _a : []).map(e => typeof e === \"string\" ? e : e.message).join(\"\\n\");\n                }\n            }\n        }, 1);\n    }\n    createCss(parent) {\n        const style = document.createElement(\"style\");\n        parent.appendChild(style);\n        style.innerHTML =\n            `\n            .json-tool-btn\n             {\n                border: 1px black solid;\n                cursor: pointer;\n                display: block;\n             }\n              .json-tool-block > .json-tool-btn {\n                margin-top: -17px;\n                margin-left: -40px;\n                position: absolute;\n                opacity: 0;\n              }\n              .json-tool-block:hover > .json-tool-btn\n              {\n                opacity: 1;\n              }\n              .json-tool-value > .json-tool-btn {\n                margin-left: 10px;\n                display: inline-block;\n                position: absolute;\n                opacity :0;\n              }\n              .json-tool-value:hover > .json-tool-btn\n              {\n                opacity :1;\n              }\n              .json-tool-key > .json-tool-btns {\n                margin-left: -36px;\n                display: inline-block;\n                position: absolute;\n                width: 32px;\n                text-align: right;\n                opacity: 0;\n              }\n              .json-tool-key:hover > .json-tool-btns\n              {\n                opacity: 1;\n              }\n\n              .json-tool-key > .json-tool-btns > .json-tool-btn {\n                display: inline-block;\n                margin-right: 2px;\n              }\n              .json-tool-types > .json-tool-type\n              {\n                padding:0;\n                margin:0;\n                border:0;\n              }\n              .json-tool-value > .json-tool-types\n              {\n                float:right;\n                opacity: 0;\n              }\n              .json-tool-value.json-tool-object > .json-tool-types\n              {\n                float:none;\n                position: absolute;\n                margin-left: 15px;\n              }\n              .json-tool-value:hover > .json-tool-types\n              {\n                opacity: 1;\n              }\n\n              .json-tool-block.opened > .json-tool-key {display: block}\n              .json-tool-block.closed > .json-tool-key {display: none}\n\n              .line-number\n              {\n                position: absolute;\n                left: 0;\n                text-align: right;\n                width: 20px;\n              }\n              .json-tool-value.json-tool-object > .line-number\n              {\n                margin-top: -15px;\n              }\n              .json-tool input, .json-tool select, .json-tool textarea\n              {\n                border: 0;\n                background-color: #ece9e9;\n                padding: 0;\n                margin: 1px;\n              }\n\n                .json-tool-errors {\n                    color: red;\n                    white-space: pre;\n                    font-family: monospace;\n                    line-height: 2em;\n                    font-weight: bold;\n                    font-size: 1.2em;\n                }\n`;\n    }\n}\nexports.JsonTool = JsonTool;\nclass JsonElement {\n    constructor(key, path, element, schema, value, parent) {\n        this.arrayElements = [];\n        this.objectElements = {};\n        this.element = element;\n        this.setStyle();\n        this.schema = schema;\n        this.parent = parent;\n        this.key = key;\n        this.path = path;\n        this.currentValues = {};\n        this.types = schema ? JsonElement.getDefaultAvailableTypes(schema) : [];\n        const actualType = JsonElement.getType(value);\n        this.currentType = \"\";\n        if (actualType !== \"undefined\") {\n            this.currentType = actualType;\n            this.types.push(actualType);\n            this.setCurrentTypeValue(value);\n        }\n        else if (this.schema) {\n            const def = JsonElement.getDefaultValue(this.schema);\n            this.currentType = def.type;\n            this.setCurrentTypeValue(def.value);\n        }\n        this.types = [...new Set(this.types)];\n        this.updateElement();\n    }\n    update() {\n        this.parent.update();\n    }\n    validate() {\n        this.parent.validate();\n    }\n    getPath(element) {\n        for (let i = 0; i < this.arrayElements.length; i++) {\n            if (this.arrayElements[i] === element)\n                return `${this.path}.${i}`;\n        }\n        for (const key in this.objectElements) {\n            if (this.objectElements[key] === element)\n                return `${this.path}.${key}`;\n        }\n        return `${this.path}.?`;\n    }\n    getState() {\n        return this.parent.getState();\n    }\n    deleteChild(key) {\n        if (typeof key === \"string\") {\n            const val = this.getValue();\n            delete val[key];\n            this.setCurrentTypeValue(val);\n            this.updateElement();\n        }\n        else if (typeof key === \"number\") {\n            const arr = [...this.getValue()];\n            arr.splice(key, 1);\n            this.setCurrentTypeValue(arr);\n            this.updateElement();\n        }\n    }\n    setCurrentTypeValue(value) {\n        this.currentValues[this.currentType] = typeof value !== \"undefined\" ? JSON.parse(JSON.stringify(value)) : undefined;\n        if (this.validate)\n            this.validate();\n    }\n    static addDescription(element, description, examples) {\n        if (examples) {\n            description = `${description ? `${description}\\n` : \"\"}Examples:\\n${examples.map(e => JSON.stringify(e)).join(\",\\n\")}`;\n        }\n        if (description) {\n            element.title = description;\n            element.style.textDecoration = \"underline dotted\";\n            element.style.cursor = \"help\";\n        }\n    }\n    static getType(value) {\n        if (typeof value === \"undefined\")\n            return \"undefined\";\n        if (Array.isArray(value)) {\n            return \"array\";\n        }\n        else if (value === null) {\n            return \"null\";\n        }\n        else {\n            return typeof value;\n        }\n    }\n    static isInteger(schema) {\n        if (!schema)\n            return false;\n        const arr = Array.isArray(schema.type) ? schema.type : [schema.type];\n        return arr.includes(\"integer\") && !arr.includes(\"number\");\n    }\n    static getDefaultAvailableTypes(schema) {\n        let types = Array.isArray(schema.type) ? [...schema.type] : [schema.type];\n        types = types.map(t => {\n            if (t === \"integer\")\n                return \"number\";\n            return t;\n        });\n        return types;\n    }\n    static getDefaultValue(schema) {\n        const availableTypes = this.getDefaultAvailableTypes(schema);\n        if (typeof schema.default !== \"undefined\") {\n            return { type: this.getType(schema.default), value: schema.default };\n        }\n        else if (schema.examples && schema.examples.length > 0) {\n            return { type: this.getType(schema.examples[0]), value: schema.examples[0] };\n        }\n        else {\n            return { type: availableTypes[0], value: this.getDefaultValueForType(schema, availableTypes[0]) };\n        }\n    }\n    static getDefaultValueForType(schema, type) {\n        var _a, _b, _c;\n        if (type === \"null\") {\n            return null;\n        }\n        else if (type === \"number\") {\n            return this.isInteger(schema) ? Math.ceil((_a = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _a !== void 0 ? _a : 0) : (_b = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _b !== void 0 ? _b : 0;\n        }\n        else if (type === \"string\") {\n            if (schema === null || schema === void 0 ? void 0 : schema.enum)\n                return schema.enum[0];\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"color\")\n                return \"#000000\";\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"date\")\n                return new Date().toDateString();\n            return \"\";\n        }\n        else if (type === \"boolean\") {\n            return false;\n        }\n        else if (type === \"array\") {\n            return [];\n        }\n        else if (type === \"object\") {\n            const obj = {};\n            if (schema === null || schema === void 0 ? void 0 : schema.properties) {\n                for (const required of (_c = schema.required) !== null && _c !== void 0 ? _c : []) {\n                    if (!schema.properties.hasOwnProperty(required))\n                        continue;\n                    const def = this.getDefaultValue(schema.properties[required]);\n                    obj[required] = def.value;\n                }\n            }\n            return obj;\n        }\n    }\n    updateElement() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;\n        this.objectElements = {};\n        this.arrayElements = [];\n        this.element.innerHTML = \"\";\n        this.element.style.display = \"inline-block\";\n        this.element.classList.remove(\"json-tool-object\");\n        this.element.append(this.createLineNumber());\n        const type = this.currentType;\n        const val = (_a = this.currentValues[type]) !== null && _a !== void 0 ? _a : (this.currentValues[type] = JsonElement.getDefaultValueForType(this.schema, type));\n        const typeDiv = document.createElement(\"div\");\n        typeDiv.classList.add(\"json-tool-types\");\n        this.element.append(typeDiv);\n        if (this.types.length > 1 || type !== this.types[0]) {\n            const select = document.createElement(\"select\");\n            select.classList.add(\"json-tool-type\");\n            for (const t of this.types) {\n                const option = document.createElement(\"option\");\n                option.innerText = t;\n                option.value = t;\n                select.append(option);\n            }\n            select.value = this.currentType;\n            select.onchange = () => {\n                this.changeType(select.value);\n            };\n            typeDiv.append(select);\n        }\n        const changeTypeButton = document.createElement(\"div\");\n        changeTypeButton.classList.add(\"json-tool-btn\");\n        changeTypeButton.style.display = \"inline-block\";\n        changeTypeButton.style.marginLeft = \"5px\";\n        changeTypeButton.innerText = \"*\";\n        changeTypeButton.onclick = () => {\n            var _a;\n            const validTypes = [\"object\", \"array\", \"boolean\", \"string\", \"number\", \"null\", \"undefined\"];\n            const newType = (_a = window.prompt(`Enter new type:\\n${validTypes.join(\", \")}`)) !== null && _a !== void 0 ? _a : \"\";\n            if (validTypes.includes(newType)) {\n                if (newType === \"undefined\") {\n                    this.parent.deleteChild(this.key);\n                }\n                else {\n                    this.changeType(newType);\n                }\n            }\n        };\n        typeDiv.append(changeTypeButton);\n        if (type === \"object\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"{\");\n            const object = this.createBlock();\n            this.element.append(object);\n            const add = document.createElement(\"div\");\n            add.classList.add(\"json-tool-btn\");\n            add.innerText = \"+\";\n            this.element.append(add);\n            add.onclick = () => {\n                const key = prompt(\"Add new key?\");\n                if (!!key) {\n                    const val = this.getValue();\n                    val[key] = null;\n                    this.setCurrentTypeValue(val);\n                    this.updateElement();\n                }\n            };\n            this.element.append(\"}\");\n            this.element.append(this.createLineNumber());\n            for (const key in val !== null && val !== void 0 ? val : {}) {\n                const obj = this.createObjectKeyValuePair(key, ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.properties) ? this.schema.properties[key] : null, val[key]);\n                object.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                if (((_c = this.schema) === null || _c === void 0 ? void 0 : _c.properties) && !this.schema.properties.hasOwnProperty(key)) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"X\";\n                    remove.onclick = () => {\n                        const val = this.getValue();\n                        delete val[key];\n                        this.setCurrentTypeValue(val);\n                        this.updateElement();\n                    };\n                    buttons.append(remove);\n                }\n                else if (!((_e = (_d = this.schema) === null || _d === void 0 ? void 0 : _d.required) === null || _e === void 0 ? void 0 : _e.includes(key))) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"∽\";\n                    remove.onclick = () => {\n                        this.deleteChild(key);\n                    };\n                    buttons.append(remove);\n                }\n            }\n            if ((_f = this.schema) === null || _f === void 0 ? void 0 : _f.properties) {\n                for (const key in this.schema.properties) {\n                    if (val === null || val === void 0 ? void 0 : val.hasOwnProperty(key))\n                        continue;\n                    const obj = this.createObjectKeyValuePair(key, this.schema.properties[key], undefined, true);\n                    object.append(obj);\n                    obj.style.textDecoration = \"line-through 2px\";\n                    const buttons = document.createElement(\"div\");\n                    obj.prepend(buttons);\n                    buttons.classList.add(\"json-tool-btns\");\n                    const add = document.createElement(\"div\");\n                    add.classList.add(\"json-tool-btn\");\n                    add.innerText = \"≁\";\n                    add.onclick = () => {\n                        var _a;\n                        if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.properties) {\n                            const val = this.getValue();\n                            val[key] = JsonElement.getDefaultValue(this.schema.properties[key]).value;\n                            this.setCurrentTypeValue(val);\n                            this.updateElement();\n                        }\n                    };\n                    buttons.append(add);\n                }\n            }\n        }\n        else if (type === \"array\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"[\");\n            const array = this.createBlock();\n            this.element.append(array);\n            const add = document.createElement(\"div\");\n            add.classList.add(\"json-tool-btn\");\n            add.innerText = \"+\";\n            this.element.append(add);\n            add.onclick = () => {\n                var _a, _b;\n                const val = [...this.getValue()];\n                if (val.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.maxItems) && !confirm(`This array is at max capacity - really add more?`))\n                    return;\n                const defaultValue = ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.items) ? JsonElement.getDefaultValue(this.schema.items).value : null;\n                val.push(defaultValue);\n                this.currentType = type;\n                this.setCurrentTypeValue(val);\n                this.setIsOpened(true);\n                this.updateElement();\n            };\n            this.element.append(\"]\");\n            this.element.append(this.createLineNumber());\n            const arr = val !== null && val !== void 0 ? val : [];\n            for (let i = 0; i < arr.length; i++) {\n                const idx = i;\n                const obj = this.createObjectKeyValuePair(i, ((_g = this.schema) === null || _g === void 0 ? void 0 : _g.items) ? this.schema.items : null, val[i]);\n                array.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                const remove = document.createElement(\"div\");\n                remove.classList.add(\"json-tool-btn\");\n                remove.innerText = \"X\";\n                remove.onclick = () => {\n                    var _a;\n                    const arr = [...this.getValue()];\n                    if (arr.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.minItems))\n                        return;\n                    this.deleteChild(idx);\n                };\n                buttons.append(remove);\n                const up = document.createElement(\"div\");\n                up.classList.add(\"json-tool-btn\");\n                up.innerText = \"ᐃ\";\n                up.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx - 1).concat(element).concat(arr.slice(idx - 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(up);\n                const down = document.createElement(\"div\");\n                down.classList.add(\"json-tool-btn\");\n                down.innerText = \"ᐁ\";\n                down.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx + 1).concat(element).concat(arr.slice(idx + 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(down);\n            }\n        }\n        else if (type === \"boolean\") {\n            const checkbox = document.createElement(\"input\");\n            checkbox.type = \"checkbox\";\n            checkbox.checked = val;\n            checkbox.onchange = () => {\n                this.setCurrentTypeValue(checkbox.checked);\n            };\n            this.element.append(checkbox);\n        }\n        else if (type === \"string\") {\n            if ((_h = this.schema) === null || _h === void 0 ? void 0 : _h.enum) {\n                const select = document.createElement(\"select\");\n                for (const value of [...new Set(this.schema.enum.concat(val))]) {\n                    const option = document.createElement(\"option\");\n                    option.innerText = value;\n                    option.value = value;\n                    select.append(option);\n                }\n                select.value = val;\n                select.onchange = () => {\n                    this.setCurrentTypeValue(select.value);\n                };\n                this.element.append(select);\n            }\n            else if (((_j = this.schema) === null || _j === void 0 ? void 0 : _j.format) === \"textarea\") {\n                const input = document.createElement(\"textarea\");\n                input.value = val;\n                input.minLength = (_l = (_k = this.schema) === null || _k === void 0 ? void 0 : _k.minLength) !== null && _l !== void 0 ? _l : 0;\n                input.maxLength = (_o = (_m = this.schema) === null || _m === void 0 ? void 0 : _m.maxLength) !== null && _o !== void 0 ? _o : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n            else if (((_p = this.schema) === null || _p === void 0 ? void 0 : _p.format) === \"date\") {\n                const input = document.createElement(\"input\");\n                input.type = \"date\";\n                input.onchange = () => {\n                    var _a, _b;\n                    this.setCurrentTypeValue((_b = (_a = input.valueAsDate) === null || _a === void 0 ? void 0 : _a.toDateString()) !== null && _b !== void 0 ? _b : \"\");\n                };\n                this.element.append(input);\n                input.valueAsDate = new Date(val);\n            }\n            else {\n                const input = document.createElement(\"input\");\n                input.type = \"text\";\n                if (((_q = this.schema) === null || _q === void 0 ? void 0 : _q.format) && [\"password\", \"email\", \"color\", \"url\"].includes(this.schema.format))\n                    input.type = this.schema.format;\n                input.value = val;\n                input.minLength = (_s = (_r = this.schema) === null || _r === void 0 ? void 0 : _r.minLength) !== null && _s !== void 0 ? _s : 0;\n                input.maxLength = (_u = (_t = this.schema) === null || _t === void 0 ? void 0 : _t.maxLength) !== null && _u !== void 0 ? _u : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n        }\n        else if (type === \"null\") {\n            this.element.append(\"null\");\n        }\n        else if (type === \"number\") {\n            const input = document.createElement(\"input\");\n            input.type = \"number\";\n            input.value = val.toString();\n            input.min = (_x = (_w = (_v = this.schema) === null || _v === void 0 ? void 0 : _v.minimum) === null || _w === void 0 ? void 0 : _w.toString()) !== null && _x !== void 0 ? _x : \"\";\n            input.max = (_0 = (_z = (_y = this.schema) === null || _y === void 0 ? void 0 : _y.maximum) === null || _z === void 0 ? void 0 : _z.toString()) !== null && _0 !== void 0 ? _0 : \"\";\n            if (JsonElement.isInteger(this.schema))\n                input.step = \"1\";\n            input.onchange = () => {\n                this.setCurrentTypeValue(parseFloat(input.value));\n            };\n            this.element.append(input);\n        }\n        else {\n            this.element.append(`[${type}] : ${val}`);\n        }\n        this.update();\n    }\n    createLineNumber(overrideMargin = false) {\n        const lineNumber = document.createElement(\"div\");\n        lineNumber.classList.add(\"line-number\");\n        if (overrideMargin)\n            lineNumber.style.marginTop = \"0\";\n        return lineNumber;\n    }\n    isOpened() {\n        var _a;\n        return (_a = this.parent.getState()[`${this.path}_opened`]) !== null && _a !== void 0 ? _a : true;\n    }\n    setIsOpened(state) {\n        this.parent.getState()[`${this.path}_opened`] = state;\n    }\n    createBlock() {\n        const block = document.createElement(\"div\");\n        block.classList.add(\"json-tool-block\");\n        block.style.paddingLeft = \"25px\";\n        block.style.borderLeft = \"1px dashed black\";\n        block.style.marginLeft = \"3px\";\n        const collapse = document.createElement(\"div\");\n        if (this.path !== \"root\")\n            block.append(collapse);\n        collapse.classList.add(\"json-tool-btn\");\n        const updateOpened = (opened) => {\n            collapse.innerText = opened ? \"ᐯ\" : \"ᐳ\";\n            block.classList.remove(\"opened\", \"closed\");\n            block.classList.add(opened ? \"opened\" : \"closed\");\n        };\n        const toggle = () => {\n            const opened = !this.isOpened();\n            this.setIsOpened(opened);\n            updateOpened(opened);\n        };\n        collapse.onclick = toggle;\n        updateOpened(this.isOpened());\n        return block;\n    }\n    createObjectKeyValuePair(key, schema, value, noValue = false) {\n        var _a;\n        const parent = document.createElement(\"div\");\n        const originalKey = key;\n        if (typeof key === \"number\") {\n            key = (schema === null || schema === void 0 ? void 0 : schema.title) ? `${schema.title} ${key}` : key;\n        }\n        else {\n            key = (_a = schema === null || schema === void 0 ? void 0 : schema.title) !== null && _a !== void 0 ? _a : key;\n        }\n        const title = document.createElement(\"span\");\n        title.innerText = key.toString();\n        JsonElement.addDescription(title, schema === null || schema === void 0 ? void 0 : schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n        parent.append(title);\n        parent.classList.add(\"json-tool-key\");\n        parent.append(\": \");\n        if (!noValue) {\n            const valueElement = document.createElement(\"div\");\n            const element = new JsonElement(originalKey, `${this.path}.${originalKey}`, valueElement, schema, value, this);\n            if (this.currentType === \"array\")\n                this.arrayElements.push(element);\n            else if (this.currentType === \"object\")\n                this.objectElements[originalKey] = element;\n            parent.append(valueElement);\n        }\n        return parent;\n    }\n    changeType(type) {\n        var _a;\n        this.currentType = type;\n        if (!this.currentValues.hasOwnProperty(type)) {\n            if (typeof ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.default) !== \"undefined\" && JsonElement.getType(this.schema.default) === type)\n                this.setCurrentTypeValue(this.schema.default);\n            else\n                this.setCurrentTypeValue(JsonElement.getDefaultValueForType(this.schema, type));\n        }\n        this.updateElement();\n    }\n    setStyle() {\n        this.element.style.whiteSpace = \"pre\";\n        this.element.classList.add(\"json-tool-value\");\n    }\n    getValue() {\n        var _a;\n        let val;\n        if (this.currentType === \"array\") {\n            val = this.arrayElements.map(e => e.getValue());\n        }\n        else if (this.currentType === \"object\") {\n            const obj = {};\n            for (const key in this.objectElements) {\n                obj[key] = this.objectElements[key].getValue();\n            }\n            val = obj;\n        }\n        else {\n            val = (_a = this.currentValues[this.currentType]) !== null && _a !== void 0 ? _a : JsonElement.getDefaultValueForType(this.schema, this.currentType);\n        }\n        this.currentValues[this.currentType] = val;\n        return val;\n    }\n}\n//# sourceMappingURL=JsonTool.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JsonTool_1 = require(\"./JsonTool\");\nwindow.JsonTool = JsonTool_1.JsonTool;\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","exports","value","JsonTool","constructor","element","validator","_a","_b","this","elementState","containerElement","valid","schema","root","document","createElement","style","fontFamily","marginLeft","classList","add","rootObject","rootElement","errorMessages","iframe","width","height","overflow","border","innerHTML","appendChild","iframeBody","contentDocument","contentWindow","querySelector","append","createCss","onload","deleteChild","key","getState","load","title","textContent","JsonElement","addDescription","description","examples","validate","hide","setValidator","getValue","update","number","querySelectorAll","forEach","e","innerText","toString","window","setTimeout","errors","map","message","join","parent","path","arrayElements","objectElements","setStyle","currentValues","types","getDefaultAvailableTypes","actualType","getType","currentType","push","setCurrentTypeValue","def","getDefaultValue","type","Set","updateElement","getPath","i","length","val","arr","splice","JSON","parse","stringify","undefined","static","textDecoration","cursor","Array","isArray","includes","t","availableTypes","default","getDefaultValueForType","_c","isInteger","Math","ceil","minimum","enum","format","Date","toDateString","obj","properties","required","hasOwnProperty","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","display","remove","createLineNumber","typeDiv","select","option","onchange","changeType","changeTypeButton","onclick","validTypes","newType","prompt","object","createBlock","createObjectKeyValuePair","buttons","prepend","array","maxItems","confirm","defaultValue","items","setIsOpened","idx","minItems","up","slice","concat","down","checkbox","checked","input","minLength","maxLength","valueAsDate","min","max","maximum","step","parseFloat","overrideMargin","lineNumber","marginTop","isOpened","state","block","paddingLeft","borderLeft","collapse","updateOpened","opened","noValue","originalKey","valueElement","whiteSpace","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","JsonTool_1"],"sourceRoot":""}