{"version":3,"file":"lib/json-tool.js","mappings":"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","sources":["webpack://@wanieru/json-tool/./js/JsonTool.js","webpack://@wanieru/json-tool/webpack/bootstrap","webpack://@wanieru/json-tool/./js/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonTool = void 0;\nclass JsonTool {\n    constructor(element, validator = null) {\n        var _a, _b;\n        this.elementState = {};\n        this.undoStack = [];\n        this.redoStack = [];\n        this.undoing = false;\n        this.loadState();\n        this.containerElement = element;\n        this.validator = validator !== null && validator !== void 0 ? validator : (() => { return { valid: true }; });\n        this.schema = null;\n        this.root = document.createElement(\"div\");\n        this.root.style.fontFamily = \"monospace\";\n        this.root.style.marginLeft = \"30px\";\n        this.root.classList.add(\"json-tool\");\n        this.rootObject = null;\n        this.rootElement = null;\n        this.errorMessages = document.createElement(\"div\");\n        this.errorMessages.classList.add(\"json-tool-errors\");\n        const controlButtons = document.createElement(\"div\");\n        this.undoButton = document.createElement(\"button\");\n        this.undoButton.innerText = \"⤶ Undo\";\n        this.undoButton.onclick = () => this.undo();\n        controlButtons.appendChild(this.undoButton);\n        this.redoButton = document.createElement(\"button\");\n        this.redoButton.innerText = \"⤷ Redo\";\n        this.redoButton.style.marginLeft = \"5px\";\n        this.redoButton.onclick = () => this.redo();\n        controlButtons.appendChild(this.redoButton);\n        const collapseExpandAll = document.createElement(\"button\");\n        let collapse = true;\n        collapseExpandAll.innerText = \"Collapse all\";\n        collapseExpandAll.onclick = () => {\n            var _a, _b;\n            ((_b = (_a = this.rootObject) === null || _a === void 0 ? void 0 : _a.querySelectorAll(`.json-tool-block.${collapse ? \"opened\" : \"closed\"} .json-tool-btn.collapse`)) !== null && _b !== void 0 ? _b : []).forEach(e => e.click());\n            collapse = !collapse;\n            collapseExpandAll.innerText = collapse ? \"Collapse all\" : \"Expand all\";\n        };\n        collapseExpandAll.style.marginLeft = \"5px\";\n        controlButtons.appendChild(collapseExpandAll);\n        const iframe = document.createElement(\"iframe\");\n        iframe.style.width = \"100%\";\n        iframe.style.height = \"100%\";\n        iframe.style.overflow = \"scroll\";\n        iframe.style.border = \"0\";\n        element.innerHTML = \"\";\n        element.appendChild(iframe);\n        this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n        this.iframeBody.append(this.root);\n        this.createCss(this.iframeBody);\n        iframe.onload = () => {\n            var _a, _b;\n            this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n            this.iframeBody.append(controlButtons);\n            this.iframeBody.append(this.root);\n            this.createCss(this.iframeBody);\n            this.iframeBody.appendChild(this.errorMessages);\n        };\n    }\n    deleteChild(key) {\n    }\n    getState() {\n        return this.elementState;\n    }\n    saveState() {\n        if (!(window === null || window === void 0 ? void 0 : window.localStorage))\n            return;\n        window.localStorage.setItem(`saved_json_tool_state`, JSON.stringify(this.elementState));\n    }\n    loadState() {\n        var _a;\n        if (!(window === null || window === void 0 ? void 0 : window.localStorage))\n            return;\n        this.elementState = JSON.parse((_a = window.localStorage.getItem(`saved_json_tool_state`)) !== null && _a !== void 0 ? _a : \"{}\");\n    }\n    load(schema, value, validator) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validator = validator !== null && validator !== void 0 ? validator : this.validator;\n            this.schema = schema;\n            this.root.innerHTML = \"\";\n            if (schema.title) {\n                const title = document.createElement(\"h3\");\n                title.textContent = schema.title;\n                JsonElement.addDescription(title, schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n                this.root.appendChild(title);\n            }\n            this.rootObject = document.createElement(\"div\");\n            this.root.appendChild(this.rootObject);\n            this.rootElement = new JsonElement(\"\", \"root\", this.rootObject, this.schema, value, this);\n            yield this.validate();\n        });\n    }\n    hide() {\n        this.containerElement.innerHTML = \"\";\n    }\n    setValidator(validator) {\n        this.validator = validator;\n    }\n    getValue() {\n        var _a;\n        return (_a = this.rootElement) === null || _a === void 0 ? void 0 : _a.getValue();\n    }\n    update() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.rootObject)\n                return;\n            let number = 1;\n            (_a = this.rootObject) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\".line-number\").forEach(e => {\n                e.innerText = number.toString();\n                number++;\n            });\n            yield this.validate();\n        });\n    }\n    validate() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield new Promise(resolve => window.setTimeout(resolve, 1));\n            if (!this.schema || !this.errorMessages)\n                return;\n            const valid = this.validator(this.getValue(), this.schema);\n            this.errorMessages.innerHTML = \"\";\n            if (!valid.valid) {\n                this.errorMessages.innerHTML = ((_a = valid.errors) !== null && _a !== void 0 ? _a : []).map(e => typeof e === \"string\" ? e : e.message).join(\"\\n\");\n            }\n            yield this.pushUndoState();\n        });\n    }\n    pushUndoState() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.undoing)\n                return;\n            this.undoing = true;\n            yield new Promise(resolve => window.setTimeout(resolve, 1));\n            const value = this.getValue();\n            if (this.undoStack.length > 0 && JSON.stringify(value) === JSON.stringify(this.undoStack[0])) {\n                this.undoing = false;\n                return;\n            }\n            this.undoStack.unshift(value);\n            this.redoStack = [];\n            this.undoing = false;\n            this.updateUndoRedoButtons();\n        });\n    }\n    undo() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.undoStack.length < 2 || this.undoing || !this.schema)\n                return;\n            this.undoing = true;\n            this.redoStack.unshift(this.getValue());\n            this.undoStack.splice(0, 1);\n            const value = this.undoStack[0];\n            yield this.load(this.schema, value, this.validator);\n            this.undoing = false;\n            this.updateUndoRedoButtons();\n        });\n    }\n    redo() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.redoStack.length < 1 || this.undoing || !this.schema)\n                return;\n            this.undoing = true;\n            const value = this.redoStack.splice(0, 1)[0];\n            this.undoStack.unshift(value);\n            yield this.load(this.schema, value, this.validator);\n            this.undoing = false;\n            this.updateUndoRedoButtons();\n        });\n    }\n    updateUndoRedoButtons() {\n        this.undoButton.disabled = this.undoStack.length < 2;\n        this.redoButton.disabled = this.redoStack.length < 1;\n    }\n    createCss(parent) {\n        const style = document.createElement(\"style\");\n        parent.appendChild(style);\n        style.innerHTML =\n            `\n            .json-tool-btn\n             {\n                border: 1px black solid;\n                cursor: pointer;\n                display: block;\n             }\n              .json-tool-block > .json-tool-btn {\n                margin-top: -17px;\n                margin-left: -40px;\n                position: absolute;\n                opacity: 0;\n              }\n              .json-tool-block:hover > .json-tool-btn\n              {\n                opacity: 1;\n              }\n              .json-tool-value > .json-tool-btn {\n                margin-left: 10px;\n                display: inline-block;\n                position: absolute;\n                opacity :0;\n              }\n              .json-tool-value:hover > .json-tool-btn\n              {\n                opacity :1;\n              }\n              .json-tool-key > .json-tool-btns {\n                margin-left: -36px;\n                display: inline-block;\n                position: absolute;\n                width: 32px;\n                text-align: right;\n                opacity: 0;\n              }\n              .json-tool-key:hover > .json-tool-btns\n              {\n                opacity: 1;\n              }\n\n              .json-tool-key > .json-tool-btns > .json-tool-btn {\n                display: inline-block;\n                margin-right: 2px;\n              }\n              .json-tool-types > .json-tool-type\n              {\n                padding:0;\n                margin:0;\n                border:0;\n              }\n              .json-tool-value > .json-tool-types\n              {\n                float:right;\n                opacity: 0;\n              }\n              .json-tool-value.json-tool-object > .json-tool-types\n              {\n                float:none;\n                position: absolute;\n                margin-left: 15px;\n              }\n              .json-tool-value:hover > .json-tool-types\n              {\n                opacity: 1;\n              }\n\n              .json-tool-block.opened > .json-tool-key {display: block}\n              .json-tool-block.closed > .json-tool-key {display: none}\n\n              .line-number\n              {\n                position: absolute;\n                left: 0;\n                text-align: right;\n                width: 20px;\n              }\n              .json-tool-value.json-tool-object > .line-number\n              {\n                margin-top: -15px;\n              }\n              .json-tool input, .json-tool select, .json-tool textarea\n              {\n                border: 0;\n                background-color: #ece9e9;\n                padding: 0;\n                margin: 1px;\n              }\n\n                .json-tool-errors {\n                    color: red;\n                    white-space: pre;\n                    font-family: monospace;\n                    line-height: 2em;\n                    font-weight: bold;\n                    font-size: 1.2em;\n                }\n`;\n    }\n}\nexports.JsonTool = JsonTool;\nclass JsonElement {\n    constructor(key, path, element, schema, value, parent) {\n        this.arrayElements = [];\n        this.objectElements = {};\n        this.element = element;\n        this.setStyle();\n        this.schema = schema;\n        this.parent = parent;\n        this.key = key;\n        this.path = path;\n        this.currentValues = {};\n        this.types = schema ? JsonElement.getDefaultAvailableTypes(schema) : [];\n        const actualType = JsonElement.getType(value);\n        this.currentType = \"\";\n        if (actualType !== \"undefined\") {\n            this.currentType = actualType;\n            this.types.push(actualType);\n            this.setCurrentTypeValue(value);\n        }\n        else if (this.schema) {\n            const def = JsonElement.getDefaultValue(this.schema);\n            this.currentType = def.type;\n            this.setCurrentTypeValue(def.value);\n        }\n        this.types = [...new Set(this.types)];\n        this.updateElement();\n    }\n    update() {\n        this.parent.update();\n    }\n    validate() {\n        this.parent.validate();\n    }\n    getPath(element) {\n        for (let i = 0; i < this.arrayElements.length; i++) {\n            if (this.arrayElements[i] === element)\n                return `${this.path}.${i}`;\n        }\n        for (const key in this.objectElements) {\n            if (this.objectElements[key] === element)\n                return `${this.path}.${key}`;\n        }\n        return `${this.path}.?`;\n    }\n    getState() {\n        return this.parent.getState();\n    }\n    saveState() {\n        this.parent.saveState();\n    }\n    deleteChild(key) {\n        if (typeof key === \"string\") {\n            const val = this.getValue();\n            delete val[key];\n            this.setCurrentTypeValue(val);\n            this.updateElement();\n        }\n        else if (typeof key === \"number\") {\n            const arr = [...this.getValue()];\n            arr.splice(key, 1);\n            this.setCurrentTypeValue(arr);\n            this.updateElement();\n        }\n    }\n    setCurrentTypeValue(value) {\n        this.currentValues[this.currentType] = typeof value !== \"undefined\" ? JSON.parse(JSON.stringify(value)) : undefined;\n        if (this.validate)\n            this.validate();\n    }\n    static addDescription(element, description, examples) {\n        if (examples) {\n            description = `${description ? `${description}\\n` : \"\"}Examples:\\n${examples.map(e => JSON.stringify(e)).join(\",\\n\")}`;\n        }\n        if (description) {\n            element.title = description;\n            element.style.textDecoration = \"underline dotted\";\n            element.style.cursor = \"help\";\n        }\n    }\n    static getType(value) {\n        if (typeof value === \"undefined\")\n            return \"undefined\";\n        if (Array.isArray(value)) {\n            return \"array\";\n        }\n        else if (value === null) {\n            return \"null\";\n        }\n        else {\n            return typeof value;\n        }\n    }\n    static isInteger(schema) {\n        if (!schema)\n            return false;\n        const arr = Array.isArray(schema.type) ? schema.type : [schema.type];\n        return arr.includes(\"integer\") && !arr.includes(\"number\");\n    }\n    static getDefaultAvailableTypes(schema) {\n        let types = Array.isArray(schema.type) ? [...schema.type] : [schema.type];\n        types = types.map(t => {\n            if (t === \"integer\")\n                return \"number\";\n            return t;\n        });\n        return types;\n    }\n    static getDefaultValue(schema) {\n        const availableTypes = this.getDefaultAvailableTypes(schema);\n        if (typeof schema.default !== \"undefined\") {\n            return { type: this.getType(schema.default), value: schema.default };\n        }\n        else if (schema.examples && schema.examples.length > 0) {\n            return { type: this.getType(schema.examples[0]), value: schema.examples[0] };\n        }\n        else if (availableTypes.length > 0) {\n            return { type: availableTypes[0], value: this.getDefaultValueForType(schema, availableTypes[0]) };\n        }\n        else {\n            return { type: \"null\", value: this.getDefaultValueForType(schema, \"null\") };\n        }\n    }\n    static getDefaultValueForType(schema, type) {\n        var _a, _b, _c;\n        if (type === \"json\") {\n            return null;\n        }\n        else if (type === \"null\") {\n            return null;\n        }\n        else if (type === \"number\") {\n            return this.isInteger(schema) ? Math.ceil((_a = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _a !== void 0 ? _a : 0) : (_b = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _b !== void 0 ? _b : 0;\n        }\n        else if (type === \"string\") {\n            if (schema === null || schema === void 0 ? void 0 : schema.enum)\n                return schema.enum[0];\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"color\")\n                return \"#000000\";\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"date\")\n                return new Date().toDateString();\n            return \"\";\n        }\n        else if (type === \"boolean\") {\n            return false;\n        }\n        else if (type === \"array\") {\n            return [];\n        }\n        else if (type === \"object\") {\n            const obj = {};\n            if (schema === null || schema === void 0 ? void 0 : schema.properties) {\n                for (const required of (_c = schema.required) !== null && _c !== void 0 ? _c : []) {\n                    if (!schema.properties.hasOwnProperty(required))\n                        continue;\n                    const def = this.getDefaultValue(schema.properties[required]);\n                    obj[required] = def.value;\n                }\n            }\n            return obj;\n        }\n    }\n    updateElement() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6;\n        this.objectElements = {};\n        this.arrayElements = [];\n        this.element.innerHTML = \"\";\n        this.element.style.display = \"inline-block\";\n        this.element.classList.remove(\"json-tool-object\");\n        if (this.path !== \"root\")\n            this.element.append(this.createLineNumber());\n        const type = this.currentType;\n        const val = (_a = this.currentValues[type]) !== null && _a !== void 0 ? _a : (this.currentValues[type] = JsonElement.getDefaultValueForType(this.schema, type));\n        const typeDiv = document.createElement(\"div\");\n        typeDiv.classList.add(\"json-tool-types\");\n        this.element.append(typeDiv);\n        if (this.types.length > 1 || type !== this.types[0]) {\n            const select = document.createElement(\"select\");\n            select.classList.add(\"json-tool-type\");\n            for (const t of this.types) {\n                const option = document.createElement(\"option\");\n                option.innerText = t;\n                option.value = t;\n                select.append(option);\n            }\n            select.value = this.currentType;\n            select.onchange = () => {\n                this.changeType(select.value);\n            };\n            typeDiv.append(select);\n        }\n        const changeTypeButton = document.createElement(\"div\");\n        changeTypeButton.classList.add(\"json-tool-btn\");\n        changeTypeButton.style.display = \"inline-block\";\n        changeTypeButton.style.marginLeft = \"5px\";\n        changeTypeButton.innerText = \"*\";\n        changeTypeButton.onclick = () => {\n            var _a;\n            const validTypes = [\"object\", \"array\", \"boolean\", \"string\", \"number\", \"null\", \"undefined\", \"json\"];\n            const newType = (_a = window.prompt(`Enter new type:\\n${validTypes.join(\", \")}`)) !== null && _a !== void 0 ? _a : \"\";\n            if (validTypes.includes(newType)) {\n                if (newType === \"undefined\") {\n                    this.parent.deleteChild(this.key);\n                }\n                else {\n                    this.changeType(newType);\n                }\n            }\n        };\n        typeDiv.append(changeTypeButton);\n        if (type === \"object\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"{\");\n            const object = this.createBlock();\n            this.element.append(object);\n            const add = document.createElement(\"div\");\n            add.classList.add(\"json-tool-btn\");\n            add.innerText = \"+\";\n            this.element.append(add);\n            add.onclick = () => {\n                const key = prompt(\"Add new key?\");\n                if (!!key) {\n                    const val = this.getValue();\n                    val[key] = null;\n                    this.setCurrentTypeValue(val);\n                    this.updateElement();\n                }\n            };\n            this.element.append(\"}\");\n            this.element.append(this.createLineNumber());\n            const keyOrder = [];\n            for (const key in (_c = (_b = this.schema) === null || _b === void 0 ? void 0 : _b.properties) !== null && _c !== void 0 ? _c : {}) {\n                if (val.hasOwnProperty(key))\n                    keyOrder.push(key);\n            }\n            ;\n            for (const key in val !== null && val !== void 0 ? val : {}) {\n                if (!keyOrder.includes(key))\n                    keyOrder.push(key);\n            }\n            ;\n            for (const key of keyOrder) {\n                const obj = this.createObjectKeyValuePair(key, ((_d = this.schema) === null || _d === void 0 ? void 0 : _d.properties) ? this.schema.properties[key] : null, val[key]);\n                object.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                if (((_e = this.schema) === null || _e === void 0 ? void 0 : _e.properties) && !this.schema.properties.hasOwnProperty(key)) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"X\";\n                    remove.onclick = () => {\n                        if (!confirm(`Are you sure you want to delete the key ${key}?`))\n                            return;\n                        this.deleteChild(key);\n                    };\n                    buttons.append(remove);\n                }\n                else if (!((_g = (_f = this.schema) === null || _f === void 0 ? void 0 : _f.required) === null || _g === void 0 ? void 0 : _g.includes(key))) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"∽\";\n                    remove.onclick = () => {\n                        if (!confirm(`Are you sure you want to delete the key ${key}?`))\n                            return;\n                        this.deleteChild(key);\n                    };\n                    buttons.append(remove);\n                }\n            }\n            if ((_h = this.schema) === null || _h === void 0 ? void 0 : _h.properties) {\n                for (const key in this.schema.properties) {\n                    if (val === null || val === void 0 ? void 0 : val.hasOwnProperty(key))\n                        continue;\n                    const obj = this.createObjectKeyValuePair(key, this.schema.properties[key], undefined, true);\n                    object.append(obj);\n                    obj.style.textDecoration = \"line-through 2px\";\n                    const buttons = document.createElement(\"div\");\n                    obj.prepend(buttons);\n                    buttons.classList.add(\"json-tool-btns\");\n                    const add = document.createElement(\"div\");\n                    add.classList.add(\"json-tool-btn\");\n                    add.innerText = \"≁\";\n                    add.onclick = () => {\n                        var _a;\n                        if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.properties) {\n                            const val = this.getValue();\n                            val[key] = JsonElement.getDefaultValue(this.schema.properties[key]).value;\n                            this.setCurrentTypeValue(val);\n                            this.updateElement();\n                        }\n                    };\n                    buttons.append(add);\n                }\n            }\n        }\n        else if (type === \"array\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"[\");\n            const array = this.createBlock();\n            this.element.append(array);\n            const add = document.createElement(\"div\");\n            add.classList.add(\"json-tool-btn\");\n            add.innerText = \"+\";\n            this.element.append(add);\n            add.onclick = () => {\n                var _a, _b;\n                const val = [...this.getValue()];\n                if (val.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.maxItems) && !confirm(`This array is at max capacity - really add more?`))\n                    return;\n                const defaultValue = ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.items) ? JsonElement.getDefaultValue(this.schema.items).value : null;\n                val.push(defaultValue);\n                this.currentType = type;\n                this.setCurrentTypeValue(val);\n                this.setIsOpened(true);\n                this.updateElement();\n            };\n            this.element.append(\"]\");\n            this.element.append(this.createLineNumber());\n            const arr = val !== null && val !== void 0 ? val : [];\n            for (let i = 0; i < arr.length; i++) {\n                const idx = i;\n                const obj = this.createObjectKeyValuePair(i, ((_j = this.schema) === null || _j === void 0 ? void 0 : _j.items) ? this.schema.items : null, val[i]);\n                array.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                const remove = document.createElement(\"div\");\n                remove.classList.add(\"json-tool-btn\");\n                remove.innerText = \"X\";\n                remove.onclick = () => {\n                    var _a;\n                    const arr = [...this.getValue()];\n                    if (arr.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.minItems)) {\n                        alert(`${this.path} needs at least ${arr.length} elements.`);\n                        return;\n                    }\n                    if (!confirm(`Are you sure you want to delete element ${idx}?`))\n                        return;\n                    this.deleteChild(idx);\n                };\n                buttons.append(remove);\n                const up = document.createElement(\"div\");\n                up.classList.add(\"json-tool-btn\");\n                up.innerText = \"ᐃ\";\n                up.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx - 1).concat(element).concat(arr.slice(idx - 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(up);\n                const down = document.createElement(\"div\");\n                down.classList.add(\"json-tool-btn\");\n                down.innerText = \"ᐁ\";\n                down.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx + 1).concat(element).concat(arr.slice(idx + 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(down);\n            }\n        }\n        else if (type === \"boolean\") {\n            const checkbox = document.createElement(\"input\");\n            checkbox.type = \"checkbox\";\n            checkbox.checked = val;\n            checkbox.onchange = () => {\n                this.setCurrentTypeValue(checkbox.checked);\n            };\n            this.element.append(checkbox);\n        }\n        else if (type === \"string\") {\n            if ((_k = this.schema) === null || _k === void 0 ? void 0 : _k.enum) {\n                const select = document.createElement(\"select\");\n                for (const value of [...new Set(this.schema.enum.concat(val))]) {\n                    const option = document.createElement(\"option\");\n                    option.innerText = value;\n                    option.value = value;\n                    select.append(option);\n                }\n                select.value = val;\n                select.onchange = () => {\n                    this.setCurrentTypeValue(select.value);\n                };\n                this.element.append(select);\n            }\n            else if (((_l = this.schema) === null || _l === void 0 ? void 0 : _l.format) === \"textarea\") {\n                const input = document.createElement(\"textarea\");\n                input.value = val;\n                input.minLength = (_o = (_m = this.schema) === null || _m === void 0 ? void 0 : _m.minLength) !== null && _o !== void 0 ? _o : 0;\n                input.maxLength = (_q = (_p = this.schema) === null || _p === void 0 ? void 0 : _p.maxLength) !== null && _q !== void 0 ? _q : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n            else if (((_r = this.schema) === null || _r === void 0 ? void 0 : _r.format) === \"date\") {\n                const input = document.createElement(\"input\");\n                input.type = \"date\";\n                input.onchange = () => {\n                    var _a, _b;\n                    this.setCurrentTypeValue((_b = (_a = input.valueAsDate) === null || _a === void 0 ? void 0 : _a.toDateString()) !== null && _b !== void 0 ? _b : \"\");\n                };\n                this.element.append(input);\n                input.valueAsDate = new Date(val);\n            }\n            else {\n                const input = document.createElement(\"input\");\n                input.type = \"text\";\n                if (((_s = this.schema) === null || _s === void 0 ? void 0 : _s.format) && [\"password\", \"email\", \"color\", \"url\"].includes(this.schema.format))\n                    input.type = this.schema.format;\n                input.value = val;\n                input.minLength = (_u = (_t = this.schema) === null || _t === void 0 ? void 0 : _t.minLength) !== null && _u !== void 0 ? _u : 0;\n                input.maxLength = (_w = (_v = this.schema) === null || _v === void 0 ? void 0 : _v.maxLength) !== null && _w !== void 0 ? _w : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n        }\n        else if (type === \"null\") {\n            this.element.append(\"null\");\n        }\n        else if (type === \"number\") {\n            const input = document.createElement(\"input\");\n            input.type = \"number\";\n            input.value = val.toString();\n            input.min = (_z = (_y = (_x = this.schema) === null || _x === void 0 ? void 0 : _x.minimum) === null || _y === void 0 ? void 0 : _y.toString()) !== null && _z !== void 0 ? _z : \"\";\n            input.max = (_2 = (_1 = (_0 = this.schema) === null || _0 === void 0 ? void 0 : _0.maximum) === null || _1 === void 0 ? void 0 : _1.toString()) !== null && _2 !== void 0 ? _2 : \"\";\n            if (JsonElement.isInteger(this.schema))\n                input.step = \"1\";\n            input.onchange = () => {\n                this.setCurrentTypeValue(parseFloat(input.value));\n            };\n            this.element.append(input);\n        }\n        else if (type === \"json\") {\n            const input = document.createElement(\"textarea\");\n            input.value = JSON.stringify(val, null, 3);\n            input.minLength = (_4 = (_3 = this.schema) === null || _3 === void 0 ? void 0 : _3.minLength) !== null && _4 !== void 0 ? _4 : 0;\n            input.maxLength = (_6 = (_5 = this.schema) === null || _5 === void 0 ? void 0 : _5.maxLength) !== null && _6 !== void 0 ? _6 : 99999999999999;\n            input.onchange = () => {\n                const json = input.value;\n                let value = null;\n                try {\n                    value = JSON.parse(json);\n                    this.setCurrentTypeValue(value);\n                    const actualType = JsonElement.getType(value);\n                    this.currentValues[actualType] = value;\n                }\n                catch (e) {\n                    alert(\"Couldn't parse JSON: \" + e);\n                }\n            };\n            this.element.append(input);\n        }\n        else {\n            this.element.append(`[${type}] : ${val}`);\n        }\n        this.update();\n    }\n    createLineNumber(overrideMargin = false) {\n        const lineNumber = document.createElement(\"div\");\n        lineNumber.classList.add(\"line-number\");\n        if (overrideMargin)\n            lineNumber.style.marginTop = \"0\";\n        return lineNumber;\n    }\n    isOpened() {\n        var _a;\n        return (_a = this.parent.getState()[`${this.path}_opened`]) !== null && _a !== void 0 ? _a : true;\n    }\n    setIsOpened(state) {\n        this.parent.getState()[`${this.path}_opened`] = state;\n        this.parent.saveState();\n    }\n    recursiveSetOpened(state) {\n        this.setIsOpened(state);\n        for (const child of [...this.arrayElements, ...Object.values(this.objectElements)])\n            child.recursiveSetOpened(state);\n    }\n    createBlock() {\n        const block = document.createElement(\"div\");\n        block.classList.add(\"json-tool-block\");\n        block.style.paddingLeft = \"25px\";\n        block.style.borderLeft = \"1px dashed black\";\n        block.style.marginLeft = \"3px\";\n        const collapse = document.createElement(\"div\");\n        if (this.path !== \"root\")\n            block.append(collapse);\n        collapse.classList.add(\"json-tool-btn\");\n        collapse.classList.add(\"collapse\");\n        const updateOpened = (opened) => {\n            collapse.innerText = opened ? \"ᐯ\" : \"ᐳ\";\n            block.classList.remove(\"opened\", \"closed\");\n            block.classList.add(opened ? \"opened\" : \"closed\");\n        };\n        const toggle = () => {\n            const opened = !this.isOpened();\n            this.setIsOpened(opened);\n            updateOpened(opened);\n        };\n        collapse.onclick = toggle;\n        updateOpened(this.isOpened());\n        return block;\n    }\n    createObjectKeyValuePair(key, schema, value, noValue = false) {\n        var _a;\n        const parent = document.createElement(\"div\");\n        const originalKey = key;\n        if (typeof key === \"number\") {\n            key = (schema === null || schema === void 0 ? void 0 : schema.title) ? `${schema.title} ${key}` : key;\n        }\n        else {\n            key = (_a = schema === null || schema === void 0 ? void 0 : schema.title) !== null && _a !== void 0 ? _a : key;\n        }\n        const title = document.createElement(\"span\");\n        title.innerText = key.toString();\n        JsonElement.addDescription(title, schema === null || schema === void 0 ? void 0 : schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n        parent.append(title);\n        parent.classList.add(\"json-tool-key\");\n        parent.append(\": \");\n        if (!noValue) {\n            const valueElement = document.createElement(\"div\");\n            const element = new JsonElement(originalKey, `${this.path}.${originalKey}`, valueElement, schema, value, this);\n            if (this.currentType === \"array\")\n                this.arrayElements.push(element);\n            else if (this.currentType === \"object\")\n                this.objectElements[originalKey] = element;\n            parent.append(valueElement);\n        }\n        return parent;\n    }\n    changeType(type) {\n        var _a;\n        const prevValue = this.getValue();\n        this.currentType = type;\n        if (type === \"json\") {\n            this.setCurrentTypeValue(prevValue);\n        }\n        else if (!this.currentValues.hasOwnProperty(type)) {\n            if (typeof ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.default) !== \"undefined\" && JsonElement.getType(this.schema.default) === type)\n                this.setCurrentTypeValue(this.schema.default);\n            else\n                this.setCurrentTypeValue(JsonElement.getDefaultValueForType(this.schema, type));\n        }\n        this.updateElement();\n    }\n    setStyle() {\n        this.element.style.whiteSpace = \"pre\";\n        this.element.classList.add(\"json-tool-value\");\n    }\n    getValue() {\n        var _a;\n        let val;\n        if (this.currentType === \"array\") {\n            val = this.arrayElements.map(e => e.getValue());\n        }\n        else if (this.currentType === \"object\") {\n            const obj = {};\n            for (const key in this.objectElements) {\n                obj[key] = this.objectElements[key].getValue();\n            }\n            val = obj;\n        }\n        else {\n            val = (_a = this.currentValues[this.currentType]) !== null && _a !== void 0 ? _a : JsonElement.getDefaultValueForType(this.schema, this.currentType);\n        }\n        this.currentValues[this.currentType] = val;\n        return val;\n    }\n}\n//# sourceMappingURL=JsonTool.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JsonTool_1 = require(\"./JsonTool\");\nwindow.JsonTool = JsonTool_1.JsonTool;\n//# sourceMappingURL=index.js.map"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","JsonTool","constructor","element","validator","_a","_b","elementState","undoStack","redoStack","undoing","loadState","containerElement","valid","schema","root","document","createElement","style","fontFamily","marginLeft","classList","add","rootObject","rootElement","errorMessages","controlButtons","undoButton","innerText","onclick","undo","appendChild","redoButton","redo","collapseExpandAll","collapse","querySelectorAll","forEach","click","iframe","width","height","overflow","border","innerHTML","iframeBody","contentDocument","contentWindow","querySelector","append","createCss","onload","deleteChild","key","getState","saveState","window","localStorage","setItem","JSON","stringify","parse","getItem","load","title","textContent","JsonElement","addDescription","description","examples","validate","hide","setValidator","getValue","update","number","toString","setTimeout","errors","map","message","join","pushUndoState","length","unshift","updateUndoRedoButtons","splice","disabled","parent","path","arrayElements","objectElements","setStyle","currentValues","types","getDefaultAvailableTypes","actualType","getType","currentType","push","setCurrentTypeValue","def","getDefaultValue","type","Set","updateElement","getPath","i","val","arr","undefined","static","textDecoration","cursor","Array","isArray","includes","t","availableTypes","default","getDefaultValueForType","_c","isInteger","Math","ceil","minimum","enum","format","Date","toDateString","obj","properties","required","hasOwnProperty","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","_1","_2","_3","_4","_5","_6","display","remove","createLineNumber","typeDiv","select","option","onchange","changeType","changeTypeButton","validTypes","newType","prompt","object","createBlock","keyOrder","createObjectKeyValuePair","buttons","prepend","confirm","array","maxItems","defaultValue","items","setIsOpened","idx","minItems","alert","up","slice","concat","down","checkbox","checked","input","minLength","maxLength","valueAsDate","min","max","maximum","parseFloat","json","overrideMargin","lineNumber","marginTop","isOpened","state","recursiveSetOpened","child","values","block","paddingLeft","borderLeft","updateOpened","opened","noValue","originalKey","valueElement","prevValue","whiteSpace","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","call","JsonTool_1"],"sourceRoot":""}