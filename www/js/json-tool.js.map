{"version":3,"file":"www/js/json-tool.js","mappings":"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","sources":["webpack://@wanieru/json-tool/./js/JsonTool.js","webpack://@wanieru/json-tool/webpack/bootstrap","webpack://@wanieru/json-tool/./js/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonTool = void 0;\nclass JsonTool {\n    constructor(element, validator = null) {\n        var _a, _b;\n        this.validator = validator !== null && validator !== void 0 ? validator : (() => { return { valid: true }; });\n        this.schema = null;\n        this.root = document.createElement(\"div\");\n        this.root.style.fontFamily = \"monospace\";\n        this.root.style.marginLeft = \"30px\";\n        this.root.classList.add(\"json-tool\");\n        this.rootObject = null;\n        this.rootElement = null;\n        this.errorMessages = document.createElement(\"div\");\n        this.errorMessages.classList.add(\"json-tool-errors\");\n        const iframe = document.createElement(\"iframe\");\n        iframe.style.width = \"100%\";\n        iframe.style.height = \"100%\";\n        iframe.style.overflow = \"scroll\";\n        iframe.style.border = \"0\";\n        element.appendChild(iframe);\n        this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n        this.iframeBody.append(this.root);\n        this.createCss(this.iframeBody);\n        iframe.onload = () => {\n            var _a, _b;\n            this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n            this.iframeBody.append(this.root);\n            this.createCss(this.iframeBody);\n            this.iframeBody.appendChild(this.errorMessages);\n        };\n    }\n    load(schema, value, validator) {\n        this.validator = validator !== null && validator !== void 0 ? validator : this.validator;\n        this.schema = schema;\n        this.root.innerHTML = \"\";\n        if (schema.title) {\n            const title = document.createElement(\"h3\");\n            title.textContent = schema.title;\n            JsonElement.addDescription(title, schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n            this.root.appendChild(title);\n        }\n        this.rootObject = document.createElement(\"div\");\n        this.root.appendChild(this.rootObject);\n        this.rootElement = new JsonElement(this.rootObject, schema, value, () => this.onUpdate(), () => this.validate());\n        this.validate();\n    }\n    setValidator(validator) {\n        this.validator = validator;\n    }\n    getValue() {\n        var _a;\n        return (_a = this.rootElement) === null || _a === void 0 ? void 0 : _a.getValue();\n    }\n    onUpdate() {\n        var _a;\n        if (!this.rootObject)\n            return;\n        let number = 1;\n        (_a = this.rootObject) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\".line-number\").forEach(e => {\n            e.innerText = number.toString();\n            number++;\n        });\n        this.validate();\n    }\n    validate() {\n        window.setTimeout(() => {\n            var _a;\n            if (this.schema && this.errorMessages) {\n                const valid = this.validator(this.getValue(), this.schema);\n                this.errorMessages.innerHTML = \"\";\n                if (!valid.valid) {\n                    this.errorMessages.innerHTML = ((_a = valid.errors) !== null && _a !== void 0 ? _a : []).map(e => typeof e === \"string\" ? e : e.message).join(\"\\n\");\n                }\n            }\n        }, 1);\n    }\n    createCss(parent) {\n        const style = document.createElement(\"style\");\n        parent.appendChild(style);\n        style.innerHTML =\n            `\n            .json-tool-btn\n             {\n                border: 1px black solid;\n                cursor: pointer;\n                display: block;\n             }\n              .json-tool-block > .json-tool-btn {\n                margin-top: -17px;\n                margin-left: -40px;\n                position: absolute;\n                opacity: 0;\n              }\n              .json-tool-block:hover > .json-tool-btn\n              {\n                opacity: 1;\n              }\n              .json-tool-value > .json-tool-btn {\n                margin-left: 10px;\n                display: inline-block;\n                position: absolute;\n                opacity :0;\n              }\n              .json-tool-value:hover > .json-tool-btn\n              {\n                opacity :1;\n              }\n              .json-tool-key > .json-tool-btns {\n                margin-left: -32px;\n                display: inline-block;\n                position: absolute;\n                width: 32px;\n                text-align: right;\n                opacity: 0;\n              }\n              .json-tool-key:hover > .json-tool-btns\n              {\n                opacity: 1;\n              }\n\n              .json-tool-key > .json-tool-btns > .json-tool-btn {\n                display: inline-block;\n                margin-right: 2px;\n              }\n              .json-tool-value > .json-tool-type\n              {\n                float:right;\n                opacity: 0;\n                padding:0;\n                margin:0;\n                border:0;\n              }\n              .json-tool-value.json-tool-object > .json-tool-type\n              {\n                float:none;\n                position: absolute;\n                margin-left: 15px;\n              }\n              .json-tool-value:hover > .json-tool-type\n              {\n                opacity: 1;\n              }\n\n              .json-tool-block.opened > .json-tool-key {display: block}\n              .json-tool-block.closed > .json-tool-key {display: none}\n\n              .line-number\n              {\n                position: absolute;\n                left: 0;\n                text-align: right;\n                width: 20px;\n              }\n              .json-tool-value.json-tool-object > .line-number\n              {\n                margin-top: -15px;\n              }\n              .json-tool input, .json-tool select, .json-tool textarea\n              {\n                border: 0;\n                background-color: #ece9e9;\n                padding: 0;\n                margin: 1px;\n              }\n\n                .json-tool-errors {\n                    color: red;\n                    white-space: pre;\n                    font-family: monospace;\n                    line-height: 2em;\n                    font-weight: bold;\n                    font-size: 1.2em;\n                }\n`;\n    }\n}\nexports.JsonTool = JsonTool;\nclass JsonElement {\n    constructor(element, schema, value, onUpdate, validate) {\n        this.arrayElements = [];\n        this.objectElements = {};\n        this.element = element;\n        this.setStyle();\n        this.schema = schema;\n        this.onUpdate = onUpdate;\n        this.validate = validate;\n        this.currentValues = {};\n        this.types = schema ? JsonElement.getDefaultAvailableTypes(schema) : [];\n        const actualType = JsonElement.getType(value);\n        this.currentType = \"\";\n        if (actualType !== \"undefined\") {\n            this.currentType = actualType;\n            this.types.push(actualType);\n            this.setCurrentTypeValue(value);\n        }\n        else if (this.schema) {\n            const def = JsonElement.getDefaultValue(this.schema);\n            this.currentType = def.type;\n            this.setCurrentTypeValue(def.value);\n        }\n        this.types = [...new Set(this.types)];\n        this.updateElement();\n    }\n    setCurrentTypeValue(value) {\n        this.currentValues[this.currentType] = typeof value !== \"undefined\" ? JSON.parse(JSON.stringify(value)) : undefined;\n        if (this.validate)\n            this.validate();\n    }\n    static addDescription(element, description, examples) {\n        if (examples) {\n            description = `${description ? `${description}\\n` : \"\"}Examples:\\n${examples.map(e => JSON.stringify(e)).join(\",\\n\")}`;\n        }\n        if (description) {\n            element.title = description;\n            element.style.textDecoration = \"underline dotted\";\n            element.style.cursor = \"help\";\n        }\n    }\n    static getType(value) {\n        if (typeof value === \"undefined\")\n            return \"undefined\";\n        if (Array.isArray(value)) {\n            return \"array\";\n        }\n        else if (value === null) {\n            return \"null\";\n        }\n        else {\n            return typeof value;\n        }\n    }\n    static isInteger(schema) {\n        if (!schema)\n            return false;\n        const arr = Array.isArray(schema.type) ? schema.type : [schema.type];\n        return arr.includes(\"integer\") && !arr.includes(\"number\");\n    }\n    static getDefaultAvailableTypes(schema) {\n        let types = Array.isArray(schema.type) ? [...schema.type] : [schema.type];\n        types = types.map(t => {\n            if (t === \"integer\")\n                return \"number\";\n            return t;\n        });\n        return types;\n    }\n    static getDefaultValue(schema) {\n        const availableTypes = this.getDefaultAvailableTypes(schema);\n        if (typeof schema.default !== \"undefined\") {\n            return { type: this.getType(schema.default), value: schema.default };\n        }\n        else if (schema.examples && schema.examples.length > 0) {\n            return { type: this.getType(schema.examples[0]), value: schema.examples[0] };\n        }\n        else {\n            return { type: availableTypes[0], value: this.getDefaultValueForType(schema, availableTypes[0]) };\n        }\n    }\n    static getDefaultValueForType(schema, type) {\n        var _a, _b, _c;\n        if (type === \"null\") {\n            return null;\n        }\n        else if (type === \"number\") {\n            return this.isInteger(schema) ? Math.ceil((_a = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _a !== void 0 ? _a : 0) : (_b = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _b !== void 0 ? _b : 0;\n        }\n        else if (type === \"string\") {\n            if (schema === null || schema === void 0 ? void 0 : schema.enum)\n                return schema.enum[0];\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"color\")\n                return \"#000000\";\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"date\")\n                return new Date().toDateString();\n            return \"\";\n        }\n        else if (type === \"boolean\") {\n            return false;\n        }\n        else if (type === \"array\") {\n            return [];\n        }\n        else if (type === \"object\") {\n            const obj = {};\n            if (schema === null || schema === void 0 ? void 0 : schema.properties) {\n                for (const required of (_c = schema.required) !== null && _c !== void 0 ? _c : []) {\n                    if (!schema.properties.hasOwnProperty(required))\n                        continue;\n                    const def = this.getDefaultValue(schema.properties[required]);\n                    obj[required] = def.value;\n                }\n            }\n            return obj;\n        }\n    }\n    updateElement() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\n        this.objectElements = {};\n        this.arrayElements = [];\n        this.element.innerHTML = \"\";\n        this.element.style.display = \"inline-block\";\n        this.element.classList.remove(\"json-tool-object\");\n        this.element.append(this.createLineNumber());\n        const type = this.currentType;\n        const val = (_a = this.currentValues[type]) !== null && _a !== void 0 ? _a : (this.currentValues[type] = JsonElement.getDefaultValueForType(this.schema, type));\n        if (this.types.length > 1) {\n            const select = document.createElement(\"select\");\n            select.classList.add(\"json-tool-type\");\n            for (const t of this.types) {\n                const option = document.createElement(\"option\");\n                option.innerText = t;\n                option.value = t;\n                select.append(option);\n            }\n            select.value = this.currentType;\n            select.onchange = () => {\n                this.changeType(select.value);\n            };\n            this.element.append(select);\n        }\n        if (type === \"object\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"{\");\n            const object = this.createBlock();\n            this.element.append(object);\n            this.element.append(\"}\");\n            this.element.append(this.createLineNumber());\n            for (const key in val !== null && val !== void 0 ? val : {}) {\n                const obj = this.createObjectKeyValuePair(key, ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.properties) ? this.schema.properties[key] : null, val[key]);\n                object.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                if (((_c = this.schema) === null || _c === void 0 ? void 0 : _c.properties) && !this.schema.properties.hasOwnProperty(key)) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"X\";\n                    remove.onclick = () => {\n                        const val = this.getValue();\n                        delete val[key];\n                        this.setCurrentTypeValue(val);\n                        this.updateElement();\n                    };\n                    buttons.append(remove);\n                }\n                else if (!((_e = (_d = this.schema) === null || _d === void 0 ? void 0 : _d.required) === null || _e === void 0 ? void 0 : _e.includes(key))) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"∽\";\n                    remove.onclick = () => {\n                        const val = this.getValue();\n                        delete val[key];\n                        this.setCurrentTypeValue(val);\n                        this.updateElement();\n                    };\n                    buttons.append(remove);\n                }\n            }\n            if ((_f = this.schema) === null || _f === void 0 ? void 0 : _f.properties) {\n                for (const key in this.schema.properties) {\n                    if (val === null || val === void 0 ? void 0 : val.hasOwnProperty(key))\n                        continue;\n                    if ((_h = (_g = this.schema) === null || _g === void 0 ? void 0 : _g.required) === null || _h === void 0 ? void 0 : _h.includes(key)) {\n                        const obj = this.createObjectKeyValuePair(key, this.schema.properties[key]);\n                        object.append(obj);\n                    }\n                    else {\n                        const obj = this.createObjectKeyValuePair(key, this.schema.properties[key], undefined, true);\n                        object.append(obj);\n                        obj.style.textDecoration = \"line-through 2px\";\n                        const buttons = document.createElement(\"div\");\n                        obj.prepend(buttons);\n                        buttons.classList.add(\"json-tool-btns\");\n                        const add = document.createElement(\"div\");\n                        add.classList.add(\"json-tool-btn\");\n                        add.innerText = \"≁\";\n                        add.onclick = () => {\n                            var _a;\n                            if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.properties) {\n                                const val = this.getValue();\n                                val[key] = JsonElement.getDefaultValue(this.schema.properties[key]).value;\n                                this.setCurrentTypeValue(val);\n                                this.updateElement();\n                            }\n                        };\n                        buttons.append(add);\n                    }\n                }\n            }\n        }\n        else if (type === \"array\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"[\");\n            const array = this.createBlock();\n            this.element.append(array);\n            const add = document.createElement(\"div\");\n            add.classList.add(\"json-tool-btn\");\n            add.innerText = \"+\";\n            this.element.append(add);\n            add.onclick = () => {\n                var _a, _b;\n                const val = [...this.getValue()];\n                if (val.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.maxItems))\n                    return;\n                if ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.items) {\n                    const defaultValue = JsonElement.getDefaultValue(this.schema.items).value;\n                    val.push(defaultValue);\n                    this.currentType = type;\n                    this.setCurrentTypeValue(val);\n                    this.updateElement();\n                }\n            };\n            this.element.append(\"]\");\n            this.element.append(this.createLineNumber());\n            const arr = val !== null && val !== void 0 ? val : [];\n            for (let i = 0; i < arr.length; i++) {\n                const idx = i;\n                const obj = this.createObjectKeyValuePair(i, ((_j = this.schema) === null || _j === void 0 ? void 0 : _j.items) ? this.schema.items : null, val[i]);\n                array.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                const remove = document.createElement(\"div\");\n                remove.classList.add(\"json-tool-btn\");\n                remove.innerText = \"X\";\n                remove.onclick = () => {\n                    var _a;\n                    const arr = [...this.getValue()];\n                    if (arr.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.minItems))\n                        return;\n                    arr.splice(idx, 1);\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(remove);\n                const up = document.createElement(\"div\");\n                up.classList.add(\"json-tool-btn\");\n                up.innerText = \"ᐃ\";\n                up.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx - 1).concat(element).concat(arr.slice(idx - 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(up);\n                const down = document.createElement(\"div\");\n                down.classList.add(\"json-tool-btn\");\n                down.innerText = \"ᐁ\";\n                down.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx + 1).concat(element).concat(arr.slice(idx + 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(down);\n            }\n        }\n        else if (type === \"boolean\") {\n            const checkbox = document.createElement(\"input\");\n            checkbox.type = \"checkbox\";\n            checkbox.checked = val;\n            checkbox.onchange = () => {\n                this.setCurrentTypeValue(checkbox.checked);\n            };\n            this.element.append(checkbox);\n        }\n        else if (type === \"string\") {\n            if ((_k = this.schema) === null || _k === void 0 ? void 0 : _k.enum) {\n                const select = document.createElement(\"select\");\n                for (const value of [...new Set(this.schema.enum.concat(val))]) {\n                    const option = document.createElement(\"option\");\n                    option.innerText = value;\n                    option.value = value;\n                    select.append(option);\n                }\n                select.value = val;\n                select.onchange = () => {\n                    this.setCurrentTypeValue(select.value);\n                };\n                this.element.append(select);\n            }\n            else if (((_l = this.schema) === null || _l === void 0 ? void 0 : _l.format) === \"textarea\") {\n                const input = document.createElement(\"textarea\");\n                input.value = val;\n                input.minLength = (_o = (_m = this.schema) === null || _m === void 0 ? void 0 : _m.minLength) !== null && _o !== void 0 ? _o : 0;\n                input.maxLength = (_q = (_p = this.schema) === null || _p === void 0 ? void 0 : _p.maxLength) !== null && _q !== void 0 ? _q : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n            else if (((_r = this.schema) === null || _r === void 0 ? void 0 : _r.format) === \"date\") {\n                const input = document.createElement(\"input\");\n                input.type = \"date\";\n                input.onchange = () => {\n                    var _a, _b;\n                    this.setCurrentTypeValue((_b = (_a = input.valueAsDate) === null || _a === void 0 ? void 0 : _a.toDateString()) !== null && _b !== void 0 ? _b : \"\");\n                };\n                this.element.append(input);\n                input.valueAsDate = new Date(val);\n            }\n            else {\n                const input = document.createElement(\"input\");\n                input.type = \"text\";\n                if (((_s = this.schema) === null || _s === void 0 ? void 0 : _s.format) && [\"password\", \"email\", \"color\", \"url\"].includes(this.schema.format))\n                    input.type = this.schema.format;\n                input.value = val;\n                input.minLength = (_u = (_t = this.schema) === null || _t === void 0 ? void 0 : _t.minLength) !== null && _u !== void 0 ? _u : 0;\n                input.maxLength = (_w = (_v = this.schema) === null || _v === void 0 ? void 0 : _v.maxLength) !== null && _w !== void 0 ? _w : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n        }\n        else if (type === \"null\") {\n            this.element.append(\"null\");\n        }\n        else if (type === \"number\") {\n            const input = document.createElement(\"input\");\n            input.type = \"number\";\n            input.value = val.toString();\n            input.min = (_z = (_y = (_x = this.schema) === null || _x === void 0 ? void 0 : _x.minimum) === null || _y === void 0 ? void 0 : _y.toString()) !== null && _z !== void 0 ? _z : \"\";\n            input.max = (_2 = (_1 = (_0 = this.schema) === null || _0 === void 0 ? void 0 : _0.maximum) === null || _1 === void 0 ? void 0 : _1.toString()) !== null && _2 !== void 0 ? _2 : \"\";\n            if (JsonElement.isInteger(this.schema))\n                input.step = \"1\";\n            input.onchange = () => {\n                this.setCurrentTypeValue(parseFloat(input.value));\n            };\n            this.element.append(input);\n        }\n        else {\n            this.element.append(`[${type}] : ${val}`);\n        }\n        if (this.onUpdate)\n            this.onUpdate();\n    }\n    createLineNumber(overrideMargin = false) {\n        const lineNumber = document.createElement(\"div\");\n        lineNumber.classList.add(\"line-number\");\n        if (overrideMargin)\n            lineNumber.style.marginTop = \"0\";\n        return lineNumber;\n    }\n    createBlock() {\n        const block = document.createElement(\"div\");\n        block.classList.add(\"json-tool-block\");\n        block.style.paddingLeft = \"25px\";\n        block.style.borderLeft = \"1px dashed black\";\n        block.style.marginLeft = \"3px\";\n        let opened = false;\n        const collapse = document.createElement(\"div\");\n        block.append(collapse);\n        collapse.classList.add(\"json-tool-btn\");\n        const toggle = () => {\n            opened = !opened;\n            collapse.innerText = opened ? \"ᐯ\" : \"ᐳ\";\n            block.classList.remove(\"opened\", \"closed\");\n            block.classList.add(opened ? \"opened\" : \"closed\");\n        };\n        collapse.onclick = toggle;\n        toggle();\n        return block;\n    }\n    createObjectKeyValuePair(key, schema, value, noValue = false) {\n        var _a;\n        const parent = document.createElement(\"div\");\n        const originalKey = key;\n        if (typeof key === \"number\") {\n            key = (schema === null || schema === void 0 ? void 0 : schema.title) ? `${schema.title} ${key}` : key;\n        }\n        else {\n            key = (_a = schema === null || schema === void 0 ? void 0 : schema.title) !== null && _a !== void 0 ? _a : key;\n        }\n        const title = document.createElement(\"span\");\n        title.innerText = key.toString();\n        JsonElement.addDescription(title, schema === null || schema === void 0 ? void 0 : schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n        parent.append(title);\n        parent.classList.add(\"json-tool-key\");\n        parent.append(\": \");\n        if (!noValue) {\n            const valueElement = document.createElement(\"div\");\n            const element = new JsonElement(valueElement, schema, value, () => this.onUpdate && this.onUpdate(), () => this.validate && this.validate());\n            if (this.currentType === \"array\")\n                this.arrayElements.push(element);\n            else if (this.currentType === \"object\")\n                this.objectElements[originalKey] = element;\n            parent.append(valueElement);\n        }\n        return parent;\n    }\n    changeType(type) {\n        var _a;\n        this.currentType = type;\n        if (!this.currentValues.hasOwnProperty(type)) {\n            if (typeof ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.default) !== \"undefined\" && JsonElement.getType(this.schema.default) === type)\n                this.setCurrentTypeValue(this.schema.default);\n            else\n                this.setCurrentTypeValue(JsonElement.getDefaultValueForType(this.schema, type));\n        }\n        this.updateElement();\n    }\n    setStyle() {\n        this.element.style.whiteSpace = \"pre\";\n        this.element.classList.add(\"json-tool-value\");\n    }\n    getValue() {\n        var _a;\n        let val;\n        if (this.currentType === \"array\") {\n            val = this.arrayElements.map(e => e.getValue());\n        }\n        else if (this.currentType === \"object\") {\n            const obj = {};\n            for (const key in this.objectElements) {\n                obj[key] = this.objectElements[key].getValue();\n            }\n            val = obj;\n        }\n        else {\n            val = (_a = this.currentValues[this.currentType]) !== null && _a !== void 0 ? _a : JsonElement.getDefaultValueForType(this.schema, this.currentType);\n        }\n        this.currentValues[this.currentType] = val;\n        return val;\n    }\n}\n//# sourceMappingURL=JsonTool.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JsonTool_1 = require(\"./JsonTool\");\nwindow.JsonTool = JsonTool_1.JsonTool;\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","exports","value","JsonTool","constructor","element","validator","_a","_b","this","valid","schema","root","document","createElement","style","fontFamily","marginLeft","classList","add","rootObject","rootElement","errorMessages","iframe","width","height","overflow","border","appendChild","iframeBody","contentDocument","contentWindow","querySelector","append","createCss","onload","load","innerHTML","title","textContent","JsonElement","addDescription","description","examples","onUpdate","validate","setValidator","getValue","number","querySelectorAll","forEach","e","innerText","toString","window","setTimeout","errors","map","message","join","parent","arrayElements","objectElements","setStyle","currentValues","types","getDefaultAvailableTypes","actualType","getType","currentType","push","setCurrentTypeValue","def","getDefaultValue","type","Set","updateElement","JSON","parse","stringify","undefined","static","textDecoration","cursor","Array","isArray","arr","includes","t","availableTypes","default","length","getDefaultValueForType","_c","isInteger","Math","ceil","minimum","enum","format","Date","toDateString","obj","properties","required","hasOwnProperty","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","_1","_2","display","remove","createLineNumber","val","select","option","onchange","changeType","object","createBlock","key","createObjectKeyValuePair","buttons","prepend","onclick","array","maxItems","items","defaultValue","i","idx","minItems","splice","up","slice","concat","down","checkbox","checked","input","minLength","maxLength","valueAsDate","min","max","maximum","step","parseFloat","overrideMargin","lineNumber","marginTop","block","paddingLeft","borderLeft","opened","collapse","toggle","noValue","originalKey","valueElement","whiteSpace","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","JsonTool_1"],"sourceRoot":""}