{"version":3,"file":"www/js/json-tool.js","mappings":"sCACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,cAAW,EA6LnBF,EAAQE,SA5LR,MACIC,YAAYC,EAASC,EAAY,MAC7B,IAAIC,EAAIC,EACRC,KAAKC,aAAe,CAAC,EACrBD,KAAKE,iBAAmBN,EACxBI,KAAKH,UAAYA,QAA6CA,EAAY,KAAgB,CAAEM,OAAO,IACnGH,KAAKI,OAAS,KACdJ,KAAKK,KAAOC,SAASC,cAAc,OACnCP,KAAKK,KAAKG,MAAMC,WAAa,YAC7BT,KAAKK,KAAKG,MAAME,WAAa,OAC7BV,KAAKK,KAAKM,UAAUC,IAAI,aACxBZ,KAAKa,WAAa,KAClBb,KAAKc,YAAc,KACnBd,KAAKe,cAAgBT,SAASC,cAAc,OAC5CP,KAAKe,cAAcJ,UAAUC,IAAI,oBACjC,MAAMI,EAASV,SAASC,cAAc,UACtCS,EAAOR,MAAMS,MAAQ,OACrBD,EAAOR,MAAMU,OAAS,OACtBF,EAAOR,MAAMW,SAAW,SACxBH,EAAOR,MAAMY,OAAS,IACtBxB,EAAQyB,UAAY,GACpBzB,EAAQ0B,YAAYN,GACpBhB,KAAKuB,WAAmI,QAArHxB,EAAMiB,EAAOQ,kBAAoD,QAA/B1B,EAAKkB,EAAOS,qBAAkC,IAAP3B,OAAgB,EAASA,EAAGQ,iBAA+B,IAAPP,OAAgB,EAASA,EAAG2B,cAAc,QAC1L1B,KAAKuB,WAAWI,OAAO3B,KAAKK,MAC5BL,KAAK4B,UAAU5B,KAAKuB,YACpBP,EAAOa,OAAS,KACZ,IAAI/B,EAAIC,EACRC,KAAKuB,WAAmI,QAArHxB,EAAMiB,EAAOQ,kBAAoD,QAA/B1B,EAAKkB,EAAOS,qBAAkC,IAAP3B,OAAgB,EAASA,EAAGQ,iBAA+B,IAAPP,OAAgB,EAASA,EAAG2B,cAAc,QAC1L1B,KAAKuB,WAAWI,OAAO3B,KAAKK,MAC5BL,KAAK4B,UAAU5B,KAAKuB,YACpBvB,KAAKuB,WAAWD,YAAYtB,KAAKe,cAAc,CAEvD,CACAe,QAAQlC,GACJ,MAAO,MACX,CACAmC,WAEI,OADAC,QAAQC,IAAIjC,KAAKC,cACVD,KAAKC,YAChB,CACAiC,KAAK9B,EAAQX,EAAOI,GAIhB,GAHAG,KAAKH,UAAYA,QAA6CA,EAAYG,KAAKH,UAC/EG,KAAKI,OAASA,EACdJ,KAAKK,KAAKgB,UAAY,GAClBjB,EAAO+B,MAAO,CACd,MAAMA,EAAQ7B,SAASC,cAAc,MACrC4B,EAAMC,YAAchC,EAAO+B,MAC3BE,EAAYC,eAAeH,EAAO/B,EAAOmC,YAAanC,aAAuC,EAASA,EAAOoC,UAC7GxC,KAAKK,KAAKiB,YAAYa,EAC1B,CACAnC,KAAKa,WAAaP,SAASC,cAAc,OACzCP,KAAKK,KAAKiB,YAAYtB,KAAKa,YAC3Bb,KAAKc,YAAc,IAAIuB,EAAY,OAAQrC,KAAKa,WAAYT,EAAQX,EAAOO,MAC3EA,KAAKyC,UACT,CACAC,OACI1C,KAAKE,iBAAiBmB,UAAY,EACtC,CACAsB,aAAa9C,GACTG,KAAKH,UAAYA,CACrB,CACA+C,WACI,IAAI9C,EACJ,OAAmC,QAA3BA,EAAKE,KAAKc,mBAAgC,IAAPhB,OAAgB,EAASA,EAAG8C,UAC3E,CACAC,SACI,IAAI/C,EACJ,IAAKE,KAAKa,WACN,OACJ,IAAIiC,EAAS,EACc,QAA1BhD,EAAKE,KAAKa,kBAA+B,IAAPf,GAAyBA,EAAGiD,iBAAiB,gBAAgBC,SAAQC,IACpGA,EAAEC,UAAYJ,EAAOK,WACrBL,GAAQ,IAEZ9C,KAAKyC,UACT,CACAA,WACIW,OAAOC,YAAW,KACd,IAAIvD,EACJ,GAAIE,KAAKI,QAAUJ,KAAKe,cAAe,CACnC,MAAMZ,EAAQH,KAAKH,UAAUG,KAAK4C,WAAY5C,KAAKI,QACnDJ,KAAKe,cAAcM,UAAY,GAC1BlB,EAAMA,QACPH,KAAKe,cAAcM,WAAqC,QAAvBvB,EAAKK,EAAMmD,cAA2B,IAAPxD,EAAgBA,EAAK,IAAIyD,KAAIN,GAAkB,iBAANA,EAAiBA,EAAIA,EAAEO,UAASC,KAAK,MAEtJ,IACD,EACP,CACA7B,UAAU8B,GACN,MAAMlD,EAAQF,SAASC,cAAc,SACrCmD,EAAOpC,YAAYd,GACnBA,EAAMa,UACF,o3FA8FR,GAGJ,MAAMgB,EACF1C,YAAYgE,EAAM/D,EAASQ,EAAQX,EAAOiE,GACtC1D,KAAK4D,cAAgB,GACrB5D,KAAK6D,eAAiB,CAAC,EACvB7D,KAAKJ,QAAUA,EACfI,KAAK8D,WACL9D,KAAKI,OAASA,EACdJ,KAAK0D,OAASA,EACd1D,KAAK2D,KAAOA,EACZ3D,KAAK+D,cAAgB,CAAC,EACtB/D,KAAKgE,MAAQ5D,EAASiC,EAAY4B,yBAAyB7D,GAAU,GACrE,MAAM8D,EAAa7B,EAAY8B,QAAQ1E,GAEvC,GADAO,KAAKoE,YAAc,GACA,cAAfF,EACAlE,KAAKoE,YAAcF,EACnBlE,KAAKgE,MAAMK,KAAKH,GAChBlE,KAAKsE,oBAAoB7E,QAExB,GAAIO,KAAKI,OAAQ,CAClB,MAAMmE,EAAMlC,EAAYmC,gBAAgBxE,KAAKI,QAC7CJ,KAAKoE,YAAcG,EAAIE,KACvBzE,KAAKsE,oBAAoBC,EAAI9E,MACjC,CACAO,KAAKgE,MAAQ,IAAI,IAAIU,IAAI1E,KAAKgE,QAC9BhE,KAAK2E,eACT,CACA9B,SACI7C,KAAK0D,OAAOb,QAChB,CACAJ,WACIzC,KAAK0D,OAAOjB,UAChB,CACAX,QAAQlC,GACJ,IAAK,IAAIgF,EAAI,EAAGA,EAAI5E,KAAK4D,cAAciB,OAAQD,IAC3C,GAAI5E,KAAK4D,cAAcgB,KAAOhF,EAC1B,MAAO,GAAGI,KAAK2D,QAAQiB,IAE/B,IAAK,MAAME,KAAO9E,KAAK6D,eACnB,GAAI7D,KAAK6D,eAAeiB,KAASlF,EAC7B,MAAO,GAAGI,KAAK2D,QAAQmB,IAE/B,MAAO,GAAG9E,KAAK2D,QACnB,CACA5B,WACI,OAAO/B,KAAK0D,OAAO3B,UACvB,CACAuC,oBAAoB7E,GAChBO,KAAK+D,cAAc/D,KAAKoE,kBAAgC,IAAV3E,EAAwBsF,KAAKC,MAAMD,KAAKE,UAAUxF,SAAUyF,EACtGlF,KAAKyC,UACLzC,KAAKyC,UACb,CACA0C,sBAAsBvF,EAAS2C,EAAaC,GACpCA,IACAD,EAAc,GAAGA,EAAc,GAAGA,MAAkB,gBAAgBC,EAASe,KAAIN,GAAK8B,KAAKE,UAAUhC,KAAIQ,KAAK,UAE9GlB,IACA3C,EAAQuC,MAAQI,EAChB3C,EAAQY,MAAM4E,eAAiB,mBAC/BxF,EAAQY,MAAM6E,OAAS,OAE/B,CACAF,eAAe1F,GACX,YAAqB,IAAVA,EACA,YACP6F,MAAMC,QAAQ9F,GACP,QAEQ,OAAVA,EACE,cAGOA,CAEtB,CACA0F,iBAAiB/E,GACb,IAAKA,EACD,OAAO,EACX,MAAMoF,EAAMF,MAAMC,QAAQnF,EAAOqE,MAAQrE,EAAOqE,KAAO,CAACrE,EAAOqE,MAC/D,OAAOe,EAAIC,SAAS,aAAeD,EAAIC,SAAS,SACpD,CACAN,gCAAgC/E,GAC5B,IAAI4D,EAAQsB,MAAMC,QAAQnF,EAAOqE,MAAQ,IAAIrE,EAAOqE,MAAQ,CAACrE,EAAOqE,MAMpE,OALAT,EAAQA,EAAMT,KAAImC,GACJ,YAANA,EACO,SACJA,IAEJ1B,CACX,CACAmB,uBAAuB/E,GACnB,MAAMuF,EAAiB3F,KAAKiE,yBAAyB7D,GACrD,YAA8B,IAAnBA,EAAOwF,QACP,CAAEnB,KAAMzE,KAAKmE,QAAQ/D,EAAOwF,SAAUnG,MAAOW,EAAOwF,SAEtDxF,EAAOoC,UAAYpC,EAAOoC,SAASqC,OAAS,EAC1C,CAAEJ,KAAMzE,KAAKmE,QAAQ/D,EAAOoC,SAAS,IAAK/C,MAAOW,EAAOoC,SAAS,IAGjE,CAAEiC,KAAMkB,EAAe,GAAIlG,MAAOO,KAAK6F,uBAAuBzF,EAAQuF,EAAe,IAEpG,CACAR,8BAA8B/E,EAAQqE,GAClC,IAAI3E,EAAIC,EAAI+F,EACZ,GAAa,SAATrB,EACA,OAAO,KAEN,GAAa,WAATA,EACL,OAAOzE,KAAK+F,UAAU3F,GAAU4F,KAAKC,KAA+E,QAAzEnG,EAAKM,aAAuC,EAASA,EAAO8F,eAA4B,IAAPpG,EAAgBA,EAAK,GAA+E,QAAzEC,EAAKK,aAAuC,EAASA,EAAO8F,eAA4B,IAAPnG,EAAgBA,EAAK,EAE5P,GAAa,WAAT0E,EACL,OAAIrE,aAAuC,EAASA,EAAO+F,MAChD/F,EAAO+F,KAAK,GACiD,WAAnE/F,aAAuC,EAASA,EAAOgG,QACjD,UAC6D,UAAnEhG,aAAuC,EAASA,EAAOgG,SACjD,IAAIC,MAAOC,eACf,GAEN,GAAa,YAAT7B,EACL,OAAO,EAEN,GAAa,UAATA,EACL,MAAO,GAEN,GAAa,WAATA,EAAmB,CACxB,MAAM8B,EAAM,CAAC,EACb,GAAInG,aAAuC,EAASA,EAAOoG,WACvD,IAAK,MAAMC,KAAuC,QAA1BX,EAAK1F,EAAOqG,gBAA6B,IAAPX,EAAgBA,EAAK,GAAI,CAC/E,IAAK1F,EAAOoG,WAAWE,eAAeD,GAClC,SACJ,MAAMlC,EAAMvE,KAAKwE,gBAAgBpE,EAAOoG,WAAWC,IACnDF,EAAIE,GAAYlC,EAAI9E,KACxB,CAEJ,OAAO8G,CACX,CACJ,CACA5B,gBACI,IAAI7E,EAAIC,EAAI+F,EAAIa,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC5GlI,KAAK6D,eAAiB,CAAC,EACvB7D,KAAK4D,cAAgB,GACrB5D,KAAKJ,QAAQyB,UAAY,GACzBrB,KAAKJ,QAAQY,MAAM2H,QAAU,eAC7BnI,KAAKJ,QAAQe,UAAUyH,OAAO,oBAC9BpI,KAAKJ,QAAQ+B,OAAO3B,KAAKqI,oBACzB,MAAM5D,EAAOzE,KAAKoE,YACZkE,EAA0C,QAAnCxI,EAAKE,KAAK+D,cAAcU,UAA0B,IAAP3E,EAAgBA,EAAME,KAAK+D,cAAcU,GAAQpC,EAAYwD,uBAAuB7F,KAAKI,OAAQqE,GACzJ,GAAIzE,KAAKgE,MAAMa,OAAS,EAAG,CACvB,MAAM0D,EAASjI,SAASC,cAAc,UACtCgI,EAAO5H,UAAUC,IAAI,kBACrB,IAAK,MAAM8E,KAAK1F,KAAKgE,MAAO,CACxB,MAAMwE,EAASlI,SAASC,cAAc,UACtCiI,EAAOtF,UAAYwC,EACnB8C,EAAO/I,MAAQiG,EACf6C,EAAO5G,OAAO6G,EAClB,CACAD,EAAO9I,MAAQO,KAAKoE,YACpBmE,EAAOE,SAAW,KACdzI,KAAK0I,WAAWH,EAAO9I,MAAM,EAEjCO,KAAKJ,QAAQ+B,OAAO4G,EACxB,CACA,GAAa,WAAT9D,EAAmB,CACnBzE,KAAKJ,QAAQ+B,OAAO3B,KAAKqI,kBAAiB,IAC1CrI,KAAKJ,QAAQY,MAAM2H,QAAU,QAC7BnI,KAAKJ,QAAQe,UAAUC,IAAI,oBAC3BZ,KAAKJ,QAAQ+B,OAAO,KACpB,MAAMgH,EAAS3I,KAAK4I,cACpB5I,KAAKJ,QAAQ+B,OAAOgH,GACpB3I,KAAKJ,QAAQ+B,OAAO,KACpB3B,KAAKJ,QAAQ+B,OAAO3B,KAAKqI,oBACzB,IAAK,MAAMvD,KAAOwD,QAAiCA,EAAM,CAAC,EAAG,CACzD,MAAM/B,EAAMvG,KAAK6I,yBAAyB/D,GAA6B,QAAtB/E,EAAKC,KAAKI,cAA2B,IAAPL,OAAgB,EAASA,EAAGyG,YAAcxG,KAAKI,OAAOoG,WAAW1B,GAAO,KAAMwD,EAAIxD,IACjK6D,EAAOhH,OAAO4E,GACd,MAAMuC,EAAUxI,SAASC,cAAc,OAGvC,GAFAgG,EAAIwC,QAAQD,GACZA,EAAQnI,UAAUC,IAAI,mBACM,QAAtBkF,EAAK9F,KAAKI,cAA2B,IAAP0F,OAAgB,EAASA,EAAGU,cAAgBxG,KAAKI,OAAOoG,WAAWE,eAAe5B,GAAM,CACxH,MAAMsD,EAAS9H,SAASC,cAAc,OACtC6H,EAAOzH,UAAUC,IAAI,iBACrBwH,EAAOlF,UAAY,IACnBkF,EAAOY,QAAU,KACb,MAAMV,EAAMtI,KAAK4C,kBACV0F,EAAIxD,GACX9E,KAAKsE,oBAAoBgE,GACzBtI,KAAK2E,eAAe,EAExBmE,EAAQnH,OAAOyG,EACnB,MACK,KAAqF,QAA9ExB,EAA4B,QAAtBD,EAAK3G,KAAKI,cAA2B,IAAPuG,OAAgB,EAASA,EAAGF,gBAA6B,IAAPG,OAAgB,EAASA,EAAGnB,SAASX,IAAO,CAC1I,MAAMsD,EAAS9H,SAASC,cAAc,OACtC6H,EAAOzH,UAAUC,IAAI,iBACrBwH,EAAOlF,UAAY,IACnBkF,EAAOY,QAAU,KACb,MAAMV,EAAMtI,KAAK4C,kBACV0F,EAAIxD,GACX9E,KAAKsE,oBAAoBgE,GACzBtI,KAAK2E,eAAe,EAExBmE,EAAQnH,OAAOyG,EACnB,CACJ,CACA,GAA2B,QAAtBvB,EAAK7G,KAAKI,cAA2B,IAAPyG,OAAgB,EAASA,EAAGL,WAC3D,IAAK,MAAM1B,KAAO9E,KAAKI,OAAOoG,WAC1B,KAAI8B,aAAiC,EAASA,EAAI5B,eAAe5B,IAEjE,GAAmF,QAA9EiC,EAA4B,QAAtBD,EAAK9G,KAAKI,cAA2B,IAAP0G,OAAgB,EAASA,EAAGL,gBAA6B,IAAPM,OAAgB,EAASA,EAAGtB,SAASX,GAAM,CAClI,MAAMyB,EAAMvG,KAAK6I,yBAAyB/D,EAAK9E,KAAKI,OAAOoG,WAAW1B,IACtE6D,EAAOhH,OAAO4E,EAClB,KACK,CACD,MAAMA,EAAMvG,KAAK6I,yBAAyB/D,EAAK9E,KAAKI,OAAOoG,WAAW1B,QAAMI,GAAW,GACvFyD,EAAOhH,OAAO4E,GACdA,EAAI/F,MAAM4E,eAAiB,mBAC3B,MAAM0D,EAAUxI,SAASC,cAAc,OACvCgG,EAAIwC,QAAQD,GACZA,EAAQnI,UAAUC,IAAI,kBACtB,MAAMA,EAAMN,SAASC,cAAc,OACnCK,EAAID,UAAUC,IAAI,iBAClBA,EAAIsC,UAAY,IAChBtC,EAAIoI,QAAU,KACV,IAAIlJ,EACJ,GAA2B,QAAtBA,EAAKE,KAAKI,cAA2B,IAAPN,OAAgB,EAASA,EAAG0G,WAAY,CACvE,MAAM8B,EAAMtI,KAAK4C,WACjB0F,EAAIxD,GAAOzC,EAAYmC,gBAAgBxE,KAAKI,OAAOoG,WAAW1B,IAAMrF,MACpEO,KAAKsE,oBAAoBgE,GACzBtI,KAAK2E,eACT,GAEJmE,EAAQnH,OAAOf,EACnB,CAGZ,MACK,GAAa,UAAT6D,EAAkB,CACvBzE,KAAKJ,QAAQ+B,OAAO3B,KAAKqI,kBAAiB,IAC1CrI,KAAKJ,QAAQY,MAAM2H,QAAU,QAC7BnI,KAAKJ,QAAQe,UAAUC,IAAI,oBAC3BZ,KAAKJ,QAAQ+B,OAAO,KACpB,MAAMsH,EAAQjJ,KAAK4I,cACnB5I,KAAKJ,QAAQ+B,OAAOsH,GACpB,MAAMrI,EAAMN,SAASC,cAAc,OACnCK,EAAID,UAAUC,IAAI,iBAClBA,EAAIsC,UAAY,IAChBlD,KAAKJ,QAAQ+B,OAAOf,GACpBA,EAAIoI,QAAU,KACV,IAAIlJ,EAAIC,EACR,MAAMuI,EAAM,IAAItI,KAAK4C,YACrB,GAAI0F,EAAIzD,UAAmC,QAAtB/E,EAAKE,KAAKI,cAA2B,IAAPN,OAAgB,EAASA,EAAGoJ,YAEpD,QAAtBnJ,EAAKC,KAAKI,cAA2B,IAAPL,OAAgB,EAASA,EAAGoJ,OAAO,CAClE,MAAMC,EAAe/G,EAAYmC,gBAAgBxE,KAAKI,OAAO+I,OAAO1J,MACpE6I,EAAIjE,KAAK+E,GACTpJ,KAAKoE,YAAcK,EACnBzE,KAAKsE,oBAAoBgE,GACzBtI,KAAKqJ,aAAY,GACjBrJ,KAAK2E,eACT,GAEJ3E,KAAKJ,QAAQ+B,OAAO,KACpB3B,KAAKJ,QAAQ+B,OAAO3B,KAAKqI,oBACzB,MAAM7C,EAAM8C,QAAiCA,EAAM,GACnD,IAAK,IAAI1D,EAAI,EAAGA,EAAIY,EAAIX,OAAQD,IAAK,CACjC,MAAM0E,EAAM1E,EACN2B,EAAMvG,KAAK6I,yBAAyBjE,GAA2B,QAAtBoC,EAAKhH,KAAKI,cAA2B,IAAP4G,OAAgB,EAASA,EAAGmC,OAASnJ,KAAKI,OAAO+I,MAAQ,KAAMb,EAAI1D,IAChJqE,EAAMtH,OAAO4E,GACb,MAAMuC,EAAUxI,SAASC,cAAc,OACvCgG,EAAIwC,QAAQD,GACZA,EAAQnI,UAAUC,IAAI,kBACtB,MAAMwH,EAAS9H,SAASC,cAAc,OACtC6H,EAAOzH,UAAUC,IAAI,iBACrBwH,EAAOlF,UAAY,IACnBkF,EAAOY,QAAU,KACb,IAAIlJ,EACJ,MAAM0F,EAAM,IAAIxF,KAAK4C,YACjB4C,EAAIX,UAAmC,QAAtB/E,EAAKE,KAAKI,cAA2B,IAAPN,OAAgB,EAASA,EAAGyJ,YAE/E/D,EAAIgE,OAAOF,EAAK,GAChBtJ,KAAKsE,oBAAoBkB,GACzBxF,KAAK2E,gBAAe,EAExBmE,EAAQnH,OAAOyG,GACf,MAAMqB,EAAKnJ,SAASC,cAAc,OAClCkJ,EAAG9I,UAAUC,IAAI,iBACjB6I,EAAGvG,UAAY,IACfuG,EAAGT,QAAU,KACT,IAAIxD,EAAM,IAAIxF,KAAK4C,YACnB,MAAMhD,EAAU4F,EAAIgE,OAAOF,EAAK,GAChC9D,EAAMA,EAAIkE,MAAM,EAAGJ,EAAM,GAAGK,OAAO/J,GAAS+J,OAAOnE,EAAIkE,MAAMJ,EAAM,IACnEtJ,KAAKsE,oBAAoBkB,GACzBxF,KAAK2E,eAAe,EAExBmE,EAAQnH,OAAO8H,GACf,MAAMG,EAAOtJ,SAASC,cAAc,OACpCqJ,EAAKjJ,UAAUC,IAAI,iBACnBgJ,EAAK1G,UAAY,IACjB0G,EAAKZ,QAAU,KACX,IAAIxD,EAAM,IAAIxF,KAAK4C,YACnB,MAAMhD,EAAU4F,EAAIgE,OAAOF,EAAK,GAChC9D,EAAMA,EAAIkE,MAAM,EAAGJ,EAAM,GAAGK,OAAO/J,GAAS+J,OAAOnE,EAAIkE,MAAMJ,EAAM,IACnEtJ,KAAKsE,oBAAoBkB,GACzBxF,KAAK2E,eAAe,EAExBmE,EAAQnH,OAAOiI,EACnB,CACJ,MACK,GAAa,YAATnF,EAAoB,CACzB,MAAMoF,EAAWvJ,SAASC,cAAc,SACxCsJ,EAASpF,KAAO,WAChBoF,EAASC,QAAUxB,EACnBuB,EAASpB,SAAW,KAChBzI,KAAKsE,oBAAoBuF,EAASC,QAAQ,EAE9C9J,KAAKJ,QAAQ+B,OAAOkI,EACxB,MACK,GAAa,WAATpF,EACL,GAA2B,QAAtBwC,EAAKjH,KAAKI,cAA2B,IAAP6G,OAAgB,EAASA,EAAGd,KAAM,CACjE,MAAMoC,EAASjI,SAASC,cAAc,UACtC,IAAK,MAAMd,IAAS,IAAI,IAAIiF,IAAI1E,KAAKI,OAAO+F,KAAKwD,OAAOrB,KAAQ,CAC5D,MAAME,EAASlI,SAASC,cAAc,UACtCiI,EAAOtF,UAAYzD,EACnB+I,EAAO/I,MAAQA,EACf8I,EAAO5G,OAAO6G,EAClB,CACAD,EAAO9I,MAAQ6I,EACfC,EAAOE,SAAW,KACdzI,KAAKsE,oBAAoBiE,EAAO9I,MAAM,EAE1CO,KAAKJ,QAAQ+B,OAAO4G,EACxB,MACK,GAA4E,cAAhD,QAAtBrB,EAAKlH,KAAKI,cAA2B,IAAP8G,OAAgB,EAASA,EAAGd,QAAwB,CACzF,MAAM2D,EAAQzJ,SAASC,cAAc,YACrCwJ,EAAMtK,MAAQ6I,EACdyB,EAAMC,UAA4F,QAA/E5C,EAA4B,QAAtBD,EAAKnH,KAAKI,cAA2B,IAAP+G,OAAgB,EAASA,EAAG6C,iBAA8B,IAAP5C,EAAgBA,EAAK,EAC/H2C,EAAME,UAA4F,QAA/E3C,EAA4B,QAAtBD,EAAKrH,KAAKI,cAA2B,IAAPiH,OAAgB,EAASA,EAAG4C,iBAA8B,IAAP3C,EAAgBA,EAAK,eAC/HyC,EAAMtB,SAAW,KACbzI,KAAKsE,oBAAoByF,EAAMtK,MAAM,EAEzCO,KAAKJ,QAAQ+B,OAAOoI,EACxB,MACK,GAA4E,UAAhD,QAAtBxC,EAAKvH,KAAKI,cAA2B,IAAPmH,OAAgB,EAASA,EAAGnB,QAAoB,CACrF,MAAM2D,EAAQzJ,SAASC,cAAc,SACrCwJ,EAAMtF,KAAO,OACbsF,EAAMtB,SAAW,KACb,IAAI3I,EAAIC,EACRC,KAAKsE,oBAA+G,QAA1FvE,EAAkC,QAA5BD,EAAKiK,EAAMG,mBAAgC,IAAPpK,OAAgB,EAASA,EAAGwG,sBAAmC,IAAPvG,EAAgBA,EAAK,GAAG,EAExJC,KAAKJ,QAAQ+B,OAAOoI,GACpBA,EAAMG,YAAc,IAAI7D,KAAKiC,EACjC,KACK,CACD,MAAMyB,EAAQzJ,SAASC,cAAc,SACrCwJ,EAAMtF,KAAO,QACe,QAAtB+C,EAAKxH,KAAKI,cAA2B,IAAPoH,OAAgB,EAASA,EAAGpB,SAAW,CAAC,WAAY,QAAS,QAAS,OAAOX,SAASzF,KAAKI,OAAOgG,UAClI2D,EAAMtF,KAAOzE,KAAKI,OAAOgG,QAC7B2D,EAAMtK,MAAQ6I,EACdyB,EAAMC,UAA4F,QAA/EtC,EAA4B,QAAtBD,EAAKzH,KAAKI,cAA2B,IAAPqH,OAAgB,EAASA,EAAGuC,iBAA8B,IAAPtC,EAAgBA,EAAK,EAC/HqC,EAAME,UAA4F,QAA/ErC,EAA4B,QAAtBD,EAAK3H,KAAKI,cAA2B,IAAPuH,OAAgB,EAASA,EAAGsC,iBAA8B,IAAPrC,EAAgBA,EAAK,eAC/HmC,EAAMtB,SAAW,KACbzI,KAAKsE,oBAAoByF,EAAMtK,MAAM,EAEzCO,KAAKJ,QAAQ+B,OAAOoI,EACxB,MAEC,GAAa,SAATtF,EACLzE,KAAKJ,QAAQ+B,OAAO,aAEnB,GAAa,WAAT8C,EAAmB,CACxB,MAAMsF,EAAQzJ,SAASC,cAAc,SACrCwJ,EAAMtF,KAAO,SACbsF,EAAMtK,MAAQ6I,EAAInF,WAClB4G,EAAMI,IAA8I,QAAvIpC,EAAmF,QAA7ED,EAA4B,QAAtBD,EAAK7H,KAAKI,cAA2B,IAAPyH,OAAgB,EAASA,EAAG3B,eAA4B,IAAP4B,OAAgB,EAASA,EAAG3E,kBAA+B,IAAP4E,EAAgBA,EAAK,GACjLgC,EAAMK,IAA8I,QAAvIlC,EAAmF,QAA7ED,EAA4B,QAAtBD,EAAKhI,KAAKI,cAA2B,IAAP4H,OAAgB,EAASA,EAAGqC,eAA4B,IAAPpC,OAAgB,EAASA,EAAG9E,kBAA+B,IAAP+E,EAAgBA,EAAK,GAC7K7F,EAAY0D,UAAU/F,KAAKI,UAC3B2J,EAAMO,KAAO,KACjBP,EAAMtB,SAAW,KACbzI,KAAKsE,oBAAoBiG,WAAWR,EAAMtK,OAAO,EAErDO,KAAKJ,QAAQ+B,OAAOoI,EACxB,MAEI/J,KAAKJ,QAAQ+B,OAAO,IAAI8C,QAAW6D,KAEvCtI,KAAK6C,QACT,CACAwF,iBAAiBmC,GAAiB,GAC9B,MAAMC,EAAanK,SAASC,cAAc,OAI1C,OAHAkK,EAAW9J,UAAUC,IAAI,eACrB4J,IACAC,EAAWjK,MAAMkK,UAAY,KAC1BD,CACX,CACAE,WACI,IAAI7K,EACJ,OAAgE,QAAxDA,EAAKE,KAAK0D,OAAO3B,WAAW,GAAG/B,KAAK2D,sBAAmC,IAAP7D,GAAgBA,CAC5F,CACAuJ,YAAYuB,GACR5K,KAAK0D,OAAO3B,WAAW,GAAG/B,KAAK2D,eAAiBiH,CACpD,CACAhC,cACI,MAAMiC,EAAQvK,SAASC,cAAc,OACrCsK,EAAMlK,UAAUC,IAAI,mBACpBiK,EAAMrK,MAAMsK,YAAc,OAC1BD,EAAMrK,MAAMuK,WAAa,mBACzBF,EAAMrK,MAAME,WAAa,MACzB,MAAMsK,EAAW1K,SAASC,cAAc,OACtB,SAAdP,KAAK2D,MACLkH,EAAMlJ,OAAOqJ,GACjBA,EAASrK,UAAUC,IAAI,iBACvB,MAAMqK,EAAgBC,IAClBF,EAAS9H,UAAYgI,EAAS,IAAM,IACpCL,EAAMlK,UAAUyH,OAAO,SAAU,UACjCyC,EAAMlK,UAAUC,IAAIsK,EAAS,SAAW,SAAS,EASrD,OAFAF,EAAShC,QALM,KACX,MAAMkC,GAAUlL,KAAK2K,WACrB3K,KAAKqJ,YAAY6B,GACjBD,EAAaC,EAAO,EAGxBD,EAAajL,KAAK2K,YACXE,CACX,CACAhC,yBAAyB/D,EAAK1E,EAAQX,EAAO0L,GAAU,GACnD,IAAIrL,EACJ,MAAM4D,EAASpD,SAASC,cAAc,OAChC6K,EAActG,EAEhBA,EADe,iBAARA,GACA1E,aAAuC,EAASA,EAAO+B,OAAS,GAAG/B,EAAO+B,SAAS2C,IAAQA,EAGpB,QAAvEhF,EAAKM,aAAuC,EAASA,EAAO+B,aAA0B,IAAPrC,EAAgBA,EAAKgF,EAE/G,MAAM3C,EAAQ7B,SAASC,cAAc,QAMrC,GALA4B,EAAMe,UAAY4B,EAAI3B,WACtBd,EAAYC,eAAeH,EAAO/B,aAAuC,EAASA,EAAOmC,YAAanC,aAAuC,EAASA,EAAOoC,UAC7JkB,EAAO/B,OAAOQ,GACduB,EAAO/C,UAAUC,IAAI,iBACrB8C,EAAO/B,OAAO,OACTwJ,EAAS,CACV,MAAME,EAAe/K,SAASC,cAAc,OACtCX,EAAU,IAAIyC,EAAY,GAAGrC,KAAK2D,QAAQyH,IAAeC,EAAcjL,EAAQX,EAAOO,MACnE,UAArBA,KAAKoE,YACLpE,KAAK4D,cAAcS,KAAKzE,GACE,WAArBI,KAAKoE,cACVpE,KAAK6D,eAAeuH,GAAexL,GACvC8D,EAAO/B,OAAO0J,EAClB,CACA,OAAO3H,CACX,CACAgF,WAAWjE,GACP,IAAI3E,EACJE,KAAKoE,YAAcK,EACdzE,KAAK+D,cAAc2C,eAAejC,UACiD,KAAjD,QAAtB3E,EAAKE,KAAKI,cAA2B,IAAPN,OAAgB,EAASA,EAAG8F,UAA4BvD,EAAY8B,QAAQnE,KAAKI,OAAOwF,WAAanB,EAC5IzE,KAAKsE,oBAAoBtE,KAAKI,OAAOwF,SAErC5F,KAAKsE,oBAAoBjC,EAAYwD,uBAAuB7F,KAAKI,OAAQqE,KAEjFzE,KAAK2E,eACT,CACAb,WACI9D,KAAKJ,QAAQY,MAAM8K,WAAa,MAChCtL,KAAKJ,QAAQe,UAAUC,IAAI,kBAC/B,CACAgC,WACI,IAAI9C,EACJ,IAAIwI,EACJ,GAAyB,UAArBtI,KAAKoE,YACLkE,EAAMtI,KAAK4D,cAAcL,KAAIN,GAAKA,EAAEL,kBAEnC,GAAyB,WAArB5C,KAAKoE,YAA0B,CACpC,MAAMmC,EAAM,CAAC,EACb,IAAK,MAAMzB,KAAO9E,KAAK6D,eACnB0C,EAAIzB,GAAO9E,KAAK6D,eAAeiB,GAAKlC,WAExC0F,EAAM/B,CACV,MAEI+B,EAAsD,QAA/CxI,EAAKE,KAAK+D,cAAc/D,KAAKoE,oBAAiC,IAAPtE,EAAgBA,EAAKuC,EAAYwD,uBAAuB7F,KAAKI,OAAQJ,KAAKoE,aAG5I,OADApE,KAAK+D,cAAc/D,KAAKoE,aAAekE,EAChCA,CACX,E,GClqBAiD,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBvG,IAAjBwG,EACH,OAAOA,EAAalM,QAGrB,IAAImM,EAASJ,EAAyBE,GAAY,CAGjDjM,QAAS,CAAC,GAOX,OAHAoM,EAAoBH,GAAUE,EAAQA,EAAOnM,QAASgM,GAG/CG,EAAOnM,OACf,C,MCpBA,MAAMqM,EAAa,EAAQ,KAC3BzI,OAAO1D,SAAWmM,EAAWnM,Q","sources":["webpack://@wanieru/json-tool/./js/JsonTool.js","webpack://@wanieru/json-tool/webpack/bootstrap","webpack://@wanieru/json-tool/./js/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonTool = void 0;\nclass JsonTool {\n    constructor(element, validator = null) {\n        var _a, _b;\n        this.elementState = {};\n        this.containerElement = element;\n        this.validator = validator !== null && validator !== void 0 ? validator : (() => { return { valid: true }; });\n        this.schema = null;\n        this.root = document.createElement(\"div\");\n        this.root.style.fontFamily = \"monospace\";\n        this.root.style.marginLeft = \"30px\";\n        this.root.classList.add(\"json-tool\");\n        this.rootObject = null;\n        this.rootElement = null;\n        this.errorMessages = document.createElement(\"div\");\n        this.errorMessages.classList.add(\"json-tool-errors\");\n        const iframe = document.createElement(\"iframe\");\n        iframe.style.width = \"100%\";\n        iframe.style.height = \"100%\";\n        iframe.style.overflow = \"scroll\";\n        iframe.style.border = \"0\";\n        element.innerHTML = \"\";\n        element.appendChild(iframe);\n        this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n        this.iframeBody.append(this.root);\n        this.createCss(this.iframeBody);\n        iframe.onload = () => {\n            var _a, _b;\n            this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n            this.iframeBody.append(this.root);\n            this.createCss(this.iframeBody);\n            this.iframeBody.appendChild(this.errorMessages);\n        };\n    }\n    getPath(element) {\n        return \"root\";\n    }\n    getState() {\n        console.log(this.elementState);\n        return this.elementState;\n    }\n    load(schema, value, validator) {\n        this.validator = validator !== null && validator !== void 0 ? validator : this.validator;\n        this.schema = schema;\n        this.root.innerHTML = \"\";\n        if (schema.title) {\n            const title = document.createElement(\"h3\");\n            title.textContent = schema.title;\n            JsonElement.addDescription(title, schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n            this.root.appendChild(title);\n        }\n        this.rootObject = document.createElement(\"div\");\n        this.root.appendChild(this.rootObject);\n        this.rootElement = new JsonElement(\"root\", this.rootObject, schema, value, this);\n        this.validate();\n    }\n    hide() {\n        this.containerElement.innerHTML = \"\";\n    }\n    setValidator(validator) {\n        this.validator = validator;\n    }\n    getValue() {\n        var _a;\n        return (_a = this.rootElement) === null || _a === void 0 ? void 0 : _a.getValue();\n    }\n    update() {\n        var _a;\n        if (!this.rootObject)\n            return;\n        let number = 1;\n        (_a = this.rootObject) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\".line-number\").forEach(e => {\n            e.innerText = number.toString();\n            number++;\n        });\n        this.validate();\n    }\n    validate() {\n        window.setTimeout(() => {\n            var _a;\n            if (this.schema && this.errorMessages) {\n                const valid = this.validator(this.getValue(), this.schema);\n                this.errorMessages.innerHTML = \"\";\n                if (!valid.valid) {\n                    this.errorMessages.innerHTML = ((_a = valid.errors) !== null && _a !== void 0 ? _a : []).map(e => typeof e === \"string\" ? e : e.message).join(\"\\n\");\n                }\n            }\n        }, 1);\n    }\n    createCss(parent) {\n        const style = document.createElement(\"style\");\n        parent.appendChild(style);\n        style.innerHTML =\n            `\n            .json-tool-btn\n             {\n                border: 1px black solid;\n                cursor: pointer;\n                display: block;\n             }\n              .json-tool-block > .json-tool-btn {\n                margin-top: -17px;\n                margin-left: -40px;\n                position: absolute;\n                opacity: 0;\n              }\n              .json-tool-block:hover > .json-tool-btn\n              {\n                opacity: 1;\n              }\n              .json-tool-value > .json-tool-btn {\n                margin-left: 10px;\n                display: inline-block;\n                position: absolute;\n                opacity :0;\n              }\n              .json-tool-value:hover > .json-tool-btn\n              {\n                opacity :1;\n              }\n              .json-tool-key > .json-tool-btns {\n                margin-left: -32px;\n                display: inline-block;\n                position: absolute;\n                width: 32px;\n                text-align: right;\n                opacity: 0;\n              }\n              .json-tool-key:hover > .json-tool-btns\n              {\n                opacity: 1;\n              }\n\n              .json-tool-key > .json-tool-btns > .json-tool-btn {\n                display: inline-block;\n                margin-right: 2px;\n              }\n              .json-tool-value > .json-tool-type\n              {\n                float:right;\n                opacity: 0;\n                padding:0;\n                margin:0;\n                border:0;\n              }\n              .json-tool-value.json-tool-object > .json-tool-type\n              {\n                float:none;\n                position: absolute;\n                margin-left: 15px;\n              }\n              .json-tool-value:hover > .json-tool-type\n              {\n                opacity: 1;\n              }\n\n              .json-tool-block.opened > .json-tool-key {display: block}\n              .json-tool-block.closed > .json-tool-key {display: none}\n\n              .line-number\n              {\n                position: absolute;\n                left: 0;\n                text-align: right;\n                width: 20px;\n              }\n              .json-tool-value.json-tool-object > .line-number\n              {\n                margin-top: -15px;\n              }\n              .json-tool input, .json-tool select, .json-tool textarea\n              {\n                border: 0;\n                background-color: #ece9e9;\n                padding: 0;\n                margin: 1px;\n              }\n\n                .json-tool-errors {\n                    color: red;\n                    white-space: pre;\n                    font-family: monospace;\n                    line-height: 2em;\n                    font-weight: bold;\n                    font-size: 1.2em;\n                }\n`;\n    }\n}\nexports.JsonTool = JsonTool;\nclass JsonElement {\n    constructor(path, element, schema, value, parent) {\n        this.arrayElements = [];\n        this.objectElements = {};\n        this.element = element;\n        this.setStyle();\n        this.schema = schema;\n        this.parent = parent;\n        this.path = path;\n        this.currentValues = {};\n        this.types = schema ? JsonElement.getDefaultAvailableTypes(schema) : [];\n        const actualType = JsonElement.getType(value);\n        this.currentType = \"\";\n        if (actualType !== \"undefined\") {\n            this.currentType = actualType;\n            this.types.push(actualType);\n            this.setCurrentTypeValue(value);\n        }\n        else if (this.schema) {\n            const def = JsonElement.getDefaultValue(this.schema);\n            this.currentType = def.type;\n            this.setCurrentTypeValue(def.value);\n        }\n        this.types = [...new Set(this.types)];\n        this.updateElement();\n    }\n    update() {\n        this.parent.update();\n    }\n    validate() {\n        this.parent.validate();\n    }\n    getPath(element) {\n        for (let i = 0; i < this.arrayElements.length; i++) {\n            if (this.arrayElements[i] === element)\n                return `${this.path}.${i}`;\n        }\n        for (const key in this.objectElements) {\n            if (this.objectElements[key] === element)\n                return `${this.path}.${key}`;\n        }\n        return `${this.path}.?`;\n    }\n    getState() {\n        return this.parent.getState();\n    }\n    setCurrentTypeValue(value) {\n        this.currentValues[this.currentType] = typeof value !== \"undefined\" ? JSON.parse(JSON.stringify(value)) : undefined;\n        if (this.validate)\n            this.validate();\n    }\n    static addDescription(element, description, examples) {\n        if (examples) {\n            description = `${description ? `${description}\\n` : \"\"}Examples:\\n${examples.map(e => JSON.stringify(e)).join(\",\\n\")}`;\n        }\n        if (description) {\n            element.title = description;\n            element.style.textDecoration = \"underline dotted\";\n            element.style.cursor = \"help\";\n        }\n    }\n    static getType(value) {\n        if (typeof value === \"undefined\")\n            return \"undefined\";\n        if (Array.isArray(value)) {\n            return \"array\";\n        }\n        else if (value === null) {\n            return \"null\";\n        }\n        else {\n            return typeof value;\n        }\n    }\n    static isInteger(schema) {\n        if (!schema)\n            return false;\n        const arr = Array.isArray(schema.type) ? schema.type : [schema.type];\n        return arr.includes(\"integer\") && !arr.includes(\"number\");\n    }\n    static getDefaultAvailableTypes(schema) {\n        let types = Array.isArray(schema.type) ? [...schema.type] : [schema.type];\n        types = types.map(t => {\n            if (t === \"integer\")\n                return \"number\";\n            return t;\n        });\n        return types;\n    }\n    static getDefaultValue(schema) {\n        const availableTypes = this.getDefaultAvailableTypes(schema);\n        if (typeof schema.default !== \"undefined\") {\n            return { type: this.getType(schema.default), value: schema.default };\n        }\n        else if (schema.examples && schema.examples.length > 0) {\n            return { type: this.getType(schema.examples[0]), value: schema.examples[0] };\n        }\n        else {\n            return { type: availableTypes[0], value: this.getDefaultValueForType(schema, availableTypes[0]) };\n        }\n    }\n    static getDefaultValueForType(schema, type) {\n        var _a, _b, _c;\n        if (type === \"null\") {\n            return null;\n        }\n        else if (type === \"number\") {\n            return this.isInteger(schema) ? Math.ceil((_a = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _a !== void 0 ? _a : 0) : (_b = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _b !== void 0 ? _b : 0;\n        }\n        else if (type === \"string\") {\n            if (schema === null || schema === void 0 ? void 0 : schema.enum)\n                return schema.enum[0];\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"color\")\n                return \"#000000\";\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"date\")\n                return new Date().toDateString();\n            return \"\";\n        }\n        else if (type === \"boolean\") {\n            return false;\n        }\n        else if (type === \"array\") {\n            return [];\n        }\n        else if (type === \"object\") {\n            const obj = {};\n            if (schema === null || schema === void 0 ? void 0 : schema.properties) {\n                for (const required of (_c = schema.required) !== null && _c !== void 0 ? _c : []) {\n                    if (!schema.properties.hasOwnProperty(required))\n                        continue;\n                    const def = this.getDefaultValue(schema.properties[required]);\n                    obj[required] = def.value;\n                }\n            }\n            return obj;\n        }\n    }\n    updateElement() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\n        this.objectElements = {};\n        this.arrayElements = [];\n        this.element.innerHTML = \"\";\n        this.element.style.display = \"inline-block\";\n        this.element.classList.remove(\"json-tool-object\");\n        this.element.append(this.createLineNumber());\n        const type = this.currentType;\n        const val = (_a = this.currentValues[type]) !== null && _a !== void 0 ? _a : (this.currentValues[type] = JsonElement.getDefaultValueForType(this.schema, type));\n        if (this.types.length > 1) {\n            const select = document.createElement(\"select\");\n            select.classList.add(\"json-tool-type\");\n            for (const t of this.types) {\n                const option = document.createElement(\"option\");\n                option.innerText = t;\n                option.value = t;\n                select.append(option);\n            }\n            select.value = this.currentType;\n            select.onchange = () => {\n                this.changeType(select.value);\n            };\n            this.element.append(select);\n        }\n        if (type === \"object\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"{\");\n            const object = this.createBlock();\n            this.element.append(object);\n            this.element.append(\"}\");\n            this.element.append(this.createLineNumber());\n            for (const key in val !== null && val !== void 0 ? val : {}) {\n                const obj = this.createObjectKeyValuePair(key, ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.properties) ? this.schema.properties[key] : null, val[key]);\n                object.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                if (((_c = this.schema) === null || _c === void 0 ? void 0 : _c.properties) && !this.schema.properties.hasOwnProperty(key)) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"X\";\n                    remove.onclick = () => {\n                        const val = this.getValue();\n                        delete val[key];\n                        this.setCurrentTypeValue(val);\n                        this.updateElement();\n                    };\n                    buttons.append(remove);\n                }\n                else if (!((_e = (_d = this.schema) === null || _d === void 0 ? void 0 : _d.required) === null || _e === void 0 ? void 0 : _e.includes(key))) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"∽\";\n                    remove.onclick = () => {\n                        const val = this.getValue();\n                        delete val[key];\n                        this.setCurrentTypeValue(val);\n                        this.updateElement();\n                    };\n                    buttons.append(remove);\n                }\n            }\n            if ((_f = this.schema) === null || _f === void 0 ? void 0 : _f.properties) {\n                for (const key in this.schema.properties) {\n                    if (val === null || val === void 0 ? void 0 : val.hasOwnProperty(key))\n                        continue;\n                    if ((_h = (_g = this.schema) === null || _g === void 0 ? void 0 : _g.required) === null || _h === void 0 ? void 0 : _h.includes(key)) {\n                        const obj = this.createObjectKeyValuePair(key, this.schema.properties[key]);\n                        object.append(obj);\n                    }\n                    else {\n                        const obj = this.createObjectKeyValuePair(key, this.schema.properties[key], undefined, true);\n                        object.append(obj);\n                        obj.style.textDecoration = \"line-through 2px\";\n                        const buttons = document.createElement(\"div\");\n                        obj.prepend(buttons);\n                        buttons.classList.add(\"json-tool-btns\");\n                        const add = document.createElement(\"div\");\n                        add.classList.add(\"json-tool-btn\");\n                        add.innerText = \"≁\";\n                        add.onclick = () => {\n                            var _a;\n                            if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.properties) {\n                                const val = this.getValue();\n                                val[key] = JsonElement.getDefaultValue(this.schema.properties[key]).value;\n                                this.setCurrentTypeValue(val);\n                                this.updateElement();\n                            }\n                        };\n                        buttons.append(add);\n                    }\n                }\n            }\n        }\n        else if (type === \"array\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"[\");\n            const array = this.createBlock();\n            this.element.append(array);\n            const add = document.createElement(\"div\");\n            add.classList.add(\"json-tool-btn\");\n            add.innerText = \"+\";\n            this.element.append(add);\n            add.onclick = () => {\n                var _a, _b;\n                const val = [...this.getValue()];\n                if (val.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.maxItems))\n                    return;\n                if ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.items) {\n                    const defaultValue = JsonElement.getDefaultValue(this.schema.items).value;\n                    val.push(defaultValue);\n                    this.currentType = type;\n                    this.setCurrentTypeValue(val);\n                    this.setIsOpened(true);\n                    this.updateElement();\n                }\n            };\n            this.element.append(\"]\");\n            this.element.append(this.createLineNumber());\n            const arr = val !== null && val !== void 0 ? val : [];\n            for (let i = 0; i < arr.length; i++) {\n                const idx = i;\n                const obj = this.createObjectKeyValuePair(i, ((_j = this.schema) === null || _j === void 0 ? void 0 : _j.items) ? this.schema.items : null, val[i]);\n                array.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                const remove = document.createElement(\"div\");\n                remove.classList.add(\"json-tool-btn\");\n                remove.innerText = \"X\";\n                remove.onclick = () => {\n                    var _a;\n                    const arr = [...this.getValue()];\n                    if (arr.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.minItems))\n                        return;\n                    arr.splice(idx, 1);\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(remove);\n                const up = document.createElement(\"div\");\n                up.classList.add(\"json-tool-btn\");\n                up.innerText = \"ᐃ\";\n                up.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx - 1).concat(element).concat(arr.slice(idx - 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(up);\n                const down = document.createElement(\"div\");\n                down.classList.add(\"json-tool-btn\");\n                down.innerText = \"ᐁ\";\n                down.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx + 1).concat(element).concat(arr.slice(idx + 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(down);\n            }\n        }\n        else if (type === \"boolean\") {\n            const checkbox = document.createElement(\"input\");\n            checkbox.type = \"checkbox\";\n            checkbox.checked = val;\n            checkbox.onchange = () => {\n                this.setCurrentTypeValue(checkbox.checked);\n            };\n            this.element.append(checkbox);\n        }\n        else if (type === \"string\") {\n            if ((_k = this.schema) === null || _k === void 0 ? void 0 : _k.enum) {\n                const select = document.createElement(\"select\");\n                for (const value of [...new Set(this.schema.enum.concat(val))]) {\n                    const option = document.createElement(\"option\");\n                    option.innerText = value;\n                    option.value = value;\n                    select.append(option);\n                }\n                select.value = val;\n                select.onchange = () => {\n                    this.setCurrentTypeValue(select.value);\n                };\n                this.element.append(select);\n            }\n            else if (((_l = this.schema) === null || _l === void 0 ? void 0 : _l.format) === \"textarea\") {\n                const input = document.createElement(\"textarea\");\n                input.value = val;\n                input.minLength = (_o = (_m = this.schema) === null || _m === void 0 ? void 0 : _m.minLength) !== null && _o !== void 0 ? _o : 0;\n                input.maxLength = (_q = (_p = this.schema) === null || _p === void 0 ? void 0 : _p.maxLength) !== null && _q !== void 0 ? _q : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n            else if (((_r = this.schema) === null || _r === void 0 ? void 0 : _r.format) === \"date\") {\n                const input = document.createElement(\"input\");\n                input.type = \"date\";\n                input.onchange = () => {\n                    var _a, _b;\n                    this.setCurrentTypeValue((_b = (_a = input.valueAsDate) === null || _a === void 0 ? void 0 : _a.toDateString()) !== null && _b !== void 0 ? _b : \"\");\n                };\n                this.element.append(input);\n                input.valueAsDate = new Date(val);\n            }\n            else {\n                const input = document.createElement(\"input\");\n                input.type = \"text\";\n                if (((_s = this.schema) === null || _s === void 0 ? void 0 : _s.format) && [\"password\", \"email\", \"color\", \"url\"].includes(this.schema.format))\n                    input.type = this.schema.format;\n                input.value = val;\n                input.minLength = (_u = (_t = this.schema) === null || _t === void 0 ? void 0 : _t.minLength) !== null && _u !== void 0 ? _u : 0;\n                input.maxLength = (_w = (_v = this.schema) === null || _v === void 0 ? void 0 : _v.maxLength) !== null && _w !== void 0 ? _w : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n        }\n        else if (type === \"null\") {\n            this.element.append(\"null\");\n        }\n        else if (type === \"number\") {\n            const input = document.createElement(\"input\");\n            input.type = \"number\";\n            input.value = val.toString();\n            input.min = (_z = (_y = (_x = this.schema) === null || _x === void 0 ? void 0 : _x.minimum) === null || _y === void 0 ? void 0 : _y.toString()) !== null && _z !== void 0 ? _z : \"\";\n            input.max = (_2 = (_1 = (_0 = this.schema) === null || _0 === void 0 ? void 0 : _0.maximum) === null || _1 === void 0 ? void 0 : _1.toString()) !== null && _2 !== void 0 ? _2 : \"\";\n            if (JsonElement.isInteger(this.schema))\n                input.step = \"1\";\n            input.onchange = () => {\n                this.setCurrentTypeValue(parseFloat(input.value));\n            };\n            this.element.append(input);\n        }\n        else {\n            this.element.append(`[${type}] : ${val}`);\n        }\n        this.update();\n    }\n    createLineNumber(overrideMargin = false) {\n        const lineNumber = document.createElement(\"div\");\n        lineNumber.classList.add(\"line-number\");\n        if (overrideMargin)\n            lineNumber.style.marginTop = \"0\";\n        return lineNumber;\n    }\n    isOpened() {\n        var _a;\n        return (_a = this.parent.getState()[`${this.path}_opened`]) !== null && _a !== void 0 ? _a : true;\n    }\n    setIsOpened(state) {\n        this.parent.getState()[`${this.path}_opened`] = state;\n    }\n    createBlock() {\n        const block = document.createElement(\"div\");\n        block.classList.add(\"json-tool-block\");\n        block.style.paddingLeft = \"25px\";\n        block.style.borderLeft = \"1px dashed black\";\n        block.style.marginLeft = \"3px\";\n        const collapse = document.createElement(\"div\");\n        if (this.path !== \"root\")\n            block.append(collapse);\n        collapse.classList.add(\"json-tool-btn\");\n        const updateOpened = (opened) => {\n            collapse.innerText = opened ? \"ᐯ\" : \"ᐳ\";\n            block.classList.remove(\"opened\", \"closed\");\n            block.classList.add(opened ? \"opened\" : \"closed\");\n        };\n        const toggle = () => {\n            const opened = !this.isOpened();\n            this.setIsOpened(opened);\n            updateOpened(opened);\n        };\n        collapse.onclick = toggle;\n        updateOpened(this.isOpened());\n        return block;\n    }\n    createObjectKeyValuePair(key, schema, value, noValue = false) {\n        var _a;\n        const parent = document.createElement(\"div\");\n        const originalKey = key;\n        if (typeof key === \"number\") {\n            key = (schema === null || schema === void 0 ? void 0 : schema.title) ? `${schema.title} ${key}` : key;\n        }\n        else {\n            key = (_a = schema === null || schema === void 0 ? void 0 : schema.title) !== null && _a !== void 0 ? _a : key;\n        }\n        const title = document.createElement(\"span\");\n        title.innerText = key.toString();\n        JsonElement.addDescription(title, schema === null || schema === void 0 ? void 0 : schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n        parent.append(title);\n        parent.classList.add(\"json-tool-key\");\n        parent.append(\": \");\n        if (!noValue) {\n            const valueElement = document.createElement(\"div\");\n            const element = new JsonElement(`${this.path}.${originalKey}`, valueElement, schema, value, this);\n            if (this.currentType === \"array\")\n                this.arrayElements.push(element);\n            else if (this.currentType === \"object\")\n                this.objectElements[originalKey] = element;\n            parent.append(valueElement);\n        }\n        return parent;\n    }\n    changeType(type) {\n        var _a;\n        this.currentType = type;\n        if (!this.currentValues.hasOwnProperty(type)) {\n            if (typeof ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.default) !== \"undefined\" && JsonElement.getType(this.schema.default) === type)\n                this.setCurrentTypeValue(this.schema.default);\n            else\n                this.setCurrentTypeValue(JsonElement.getDefaultValueForType(this.schema, type));\n        }\n        this.updateElement();\n    }\n    setStyle() {\n        this.element.style.whiteSpace = \"pre\";\n        this.element.classList.add(\"json-tool-value\");\n    }\n    getValue() {\n        var _a;\n        let val;\n        if (this.currentType === \"array\") {\n            val = this.arrayElements.map(e => e.getValue());\n        }\n        else if (this.currentType === \"object\") {\n            const obj = {};\n            for (const key in this.objectElements) {\n                obj[key] = this.objectElements[key].getValue();\n            }\n            val = obj;\n        }\n        else {\n            val = (_a = this.currentValues[this.currentType]) !== null && _a !== void 0 ? _a : JsonElement.getDefaultValueForType(this.schema, this.currentType);\n        }\n        this.currentValues[this.currentType] = val;\n        return val;\n    }\n}\n//# sourceMappingURL=JsonTool.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst JsonTool_1 = require(\"./JsonTool\");\nwindow.JsonTool = JsonTool_1.JsonTool;\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","exports","value","JsonTool","constructor","element","validator","_a","_b","this","elementState","containerElement","valid","schema","root","document","createElement","style","fontFamily","marginLeft","classList","add","rootObject","rootElement","errorMessages","iframe","width","height","overflow","border","innerHTML","appendChild","iframeBody","contentDocument","contentWindow","querySelector","append","createCss","onload","getPath","getState","console","log","load","title","textContent","JsonElement","addDescription","description","examples","validate","hide","setValidator","getValue","update","number","querySelectorAll","forEach","e","innerText","toString","window","setTimeout","errors","map","message","join","parent","path","arrayElements","objectElements","setStyle","currentValues","types","getDefaultAvailableTypes","actualType","getType","currentType","push","setCurrentTypeValue","def","getDefaultValue","type","Set","updateElement","i","length","key","JSON","parse","stringify","undefined","static","textDecoration","cursor","Array","isArray","arr","includes","t","availableTypes","default","getDefaultValueForType","_c","isInteger","Math","ceil","minimum","enum","format","Date","toDateString","obj","properties","required","hasOwnProperty","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","_1","_2","display","remove","createLineNumber","val","select","option","onchange","changeType","object","createBlock","createObjectKeyValuePair","buttons","prepend","onclick","array","maxItems","items","defaultValue","setIsOpened","idx","minItems","splice","up","slice","concat","down","checkbox","checked","input","minLength","maxLength","valueAsDate","min","max","maximum","step","parseFloat","overrideMargin","lineNumber","marginTop","isOpened","state","block","paddingLeft","borderLeft","collapse","updateOpened","opened","noValue","originalKey","valueElement","whiteSpace","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","JsonTool_1"],"sourceRoot":""}