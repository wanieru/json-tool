{"version":3,"file":"www/js/main.js","mappings":"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","sources":["webpack://@wanieru/json-tool/./js/JsonTool.js","webpack://@wanieru/json-tool/./node_modules/tsch/dist/TschType.js","webpack://@wanieru/json-tool/./node_modules/tsch/dist/index.js","webpack://@wanieru/json-tool/./node_modules/tsch/dist/tsch.js","webpack://@wanieru/json-tool/webpack/bootstrap","webpack://@wanieru/json-tool/./js/www.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonTool = void 0;\nclass JsonTool {\n    constructor(element, validator = null) {\n        var _a, _b;\n        this.elementState = {};\n        this.containerElement = element;\n        this.validator = validator !== null && validator !== void 0 ? validator : (() => { return { valid: true }; });\n        this.schema = null;\n        this.root = document.createElement(\"div\");\n        this.root.style.fontFamily = \"monospace\";\n        this.root.style.marginLeft = \"30px\";\n        this.root.classList.add(\"json-tool\");\n        this.rootObject = null;\n        this.rootElement = null;\n        this.errorMessages = document.createElement(\"div\");\n        this.errorMessages.classList.add(\"json-tool-errors\");\n        const iframe = document.createElement(\"iframe\");\n        iframe.style.width = \"100%\";\n        iframe.style.height = \"100%\";\n        iframe.style.overflow = \"scroll\";\n        iframe.style.border = \"0\";\n        element.innerHTML = \"\";\n        element.appendChild(iframe);\n        this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n        this.iframeBody.append(this.root);\n        this.createCss(this.iframeBody);\n        iframe.onload = () => {\n            var _a, _b;\n            this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n            this.iframeBody.append(this.root);\n            this.createCss(this.iframeBody);\n            this.iframeBody.appendChild(this.errorMessages);\n        };\n    }\n    getPath(element) {\n        return \"root\";\n    }\n    getState() {\n        console.log(this.elementState);\n        return this.elementState;\n    }\n    load(schema, value, validator) {\n        this.validator = validator !== null && validator !== void 0 ? validator : this.validator;\n        this.schema = schema;\n        this.root.innerHTML = \"\";\n        if (schema.title) {\n            const title = document.createElement(\"h3\");\n            title.textContent = schema.title;\n            JsonElement.addDescription(title, schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n            this.root.appendChild(title);\n        }\n        this.rootObject = document.createElement(\"div\");\n        this.root.appendChild(this.rootObject);\n        this.rootElement = new JsonElement(\"root\", this.rootObject, schema, value, this);\n        this.validate();\n    }\n    hide() {\n        this.containerElement.innerHTML = \"\";\n    }\n    setValidator(validator) {\n        this.validator = validator;\n    }\n    getValue() {\n        var _a;\n        return (_a = this.rootElement) === null || _a === void 0 ? void 0 : _a.getValue();\n    }\n    update() {\n        var _a;\n        if (!this.rootObject)\n            return;\n        let number = 1;\n        (_a = this.rootObject) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\".line-number\").forEach(e => {\n            e.innerText = number.toString();\n            number++;\n        });\n        this.validate();\n    }\n    validate() {\n        window.setTimeout(() => {\n            var _a;\n            if (this.schema && this.errorMessages) {\n                const valid = this.validator(this.getValue(), this.schema);\n                this.errorMessages.innerHTML = \"\";\n                if (!valid.valid) {\n                    this.errorMessages.innerHTML = ((_a = valid.errors) !== null && _a !== void 0 ? _a : []).map(e => typeof e === \"string\" ? e : e.message).join(\"\\n\");\n                }\n            }\n        }, 1);\n    }\n    createCss(parent) {\n        const style = document.createElement(\"style\");\n        parent.appendChild(style);\n        style.innerHTML =\n            `\n            .json-tool-btn\n             {\n                border: 1px black solid;\n                cursor: pointer;\n                display: block;\n             }\n              .json-tool-block > .json-tool-btn {\n                margin-top: -17px;\n                margin-left: -40px;\n                position: absolute;\n                opacity: 0;\n              }\n              .json-tool-block:hover > .json-tool-btn\n              {\n                opacity: 1;\n              }\n              .json-tool-value > .json-tool-btn {\n                margin-left: 10px;\n                display: inline-block;\n                position: absolute;\n                opacity :0;\n              }\n              .json-tool-value:hover > .json-tool-btn\n              {\n                opacity :1;\n              }\n              .json-tool-key > .json-tool-btns {\n                margin-left: -32px;\n                display: inline-block;\n                position: absolute;\n                width: 32px;\n                text-align: right;\n                opacity: 0;\n              }\n              .json-tool-key:hover > .json-tool-btns\n              {\n                opacity: 1;\n              }\n\n              .json-tool-key > .json-tool-btns > .json-tool-btn {\n                display: inline-block;\n                margin-right: 2px;\n              }\n              .json-tool-value > .json-tool-type\n              {\n                float:right;\n                opacity: 0;\n                padding:0;\n                margin:0;\n                border:0;\n              }\n              .json-tool-value.json-tool-object > .json-tool-type\n              {\n                float:none;\n                position: absolute;\n                margin-left: 15px;\n              }\n              .json-tool-value:hover > .json-tool-type\n              {\n                opacity: 1;\n              }\n\n              .json-tool-block.opened > .json-tool-key {display: block}\n              .json-tool-block.closed > .json-tool-key {display: none}\n\n              .line-number\n              {\n                position: absolute;\n                left: 0;\n                text-align: right;\n                width: 20px;\n              }\n              .json-tool-value.json-tool-object > .line-number\n              {\n                margin-top: -15px;\n              }\n              .json-tool input, .json-tool select, .json-tool textarea\n              {\n                border: 0;\n                background-color: #ece9e9;\n                padding: 0;\n                margin: 1px;\n              }\n\n                .json-tool-errors {\n                    color: red;\n                    white-space: pre;\n                    font-family: monospace;\n                    line-height: 2em;\n                    font-weight: bold;\n                    font-size: 1.2em;\n                }\n`;\n    }\n}\nexports.JsonTool = JsonTool;\nclass JsonElement {\n    constructor(path, element, schema, value, parent) {\n        this.arrayElements = [];\n        this.objectElements = {};\n        this.element = element;\n        this.setStyle();\n        this.schema = schema;\n        this.parent = parent;\n        this.path = path;\n        this.currentValues = {};\n        this.types = schema ? JsonElement.getDefaultAvailableTypes(schema) : [];\n        const actualType = JsonElement.getType(value);\n        this.currentType = \"\";\n        if (actualType !== \"undefined\") {\n            this.currentType = actualType;\n            this.types.push(actualType);\n            this.setCurrentTypeValue(value);\n        }\n        else if (this.schema) {\n            const def = JsonElement.getDefaultValue(this.schema);\n            this.currentType = def.type;\n            this.setCurrentTypeValue(def.value);\n        }\n        this.types = [...new Set(this.types)];\n        this.updateElement();\n    }\n    update() {\n        this.parent.update();\n    }\n    validate() {\n        this.parent.validate();\n    }\n    getPath(element) {\n        for (let i = 0; i < this.arrayElements.length; i++) {\n            if (this.arrayElements[i] === element)\n                return `${this.path}.${i}`;\n        }\n        for (const key in this.objectElements) {\n            if (this.objectElements[key] === element)\n                return `${this.path}.${key}`;\n        }\n        return `${this.path}.?`;\n    }\n    getState() {\n        return this.parent.getState();\n    }\n    setCurrentTypeValue(value) {\n        this.currentValues[this.currentType] = typeof value !== \"undefined\" ? JSON.parse(JSON.stringify(value)) : undefined;\n        if (this.validate)\n            this.validate();\n    }\n    static addDescription(element, description, examples) {\n        if (examples) {\n            description = `${description ? `${description}\\n` : \"\"}Examples:\\n${examples.map(e => JSON.stringify(e)).join(\",\\n\")}`;\n        }\n        if (description) {\n            element.title = description;\n            element.style.textDecoration = \"underline dotted\";\n            element.style.cursor = \"help\";\n        }\n    }\n    static getType(value) {\n        if (typeof value === \"undefined\")\n            return \"undefined\";\n        if (Array.isArray(value)) {\n            return \"array\";\n        }\n        else if (value === null) {\n            return \"null\";\n        }\n        else {\n            return typeof value;\n        }\n    }\n    static isInteger(schema) {\n        if (!schema)\n            return false;\n        const arr = Array.isArray(schema.type) ? schema.type : [schema.type];\n        return arr.includes(\"integer\") && !arr.includes(\"number\");\n    }\n    static getDefaultAvailableTypes(schema) {\n        let types = Array.isArray(schema.type) ? [...schema.type] : [schema.type];\n        types = types.map(t => {\n            if (t === \"integer\")\n                return \"number\";\n            return t;\n        });\n        return types;\n    }\n    static getDefaultValue(schema) {\n        const availableTypes = this.getDefaultAvailableTypes(schema);\n        if (typeof schema.default !== \"undefined\") {\n            return { type: this.getType(schema.default), value: schema.default };\n        }\n        else if (schema.examples && schema.examples.length > 0) {\n            return { type: this.getType(schema.examples[0]), value: schema.examples[0] };\n        }\n        else {\n            return { type: availableTypes[0], value: this.getDefaultValueForType(schema, availableTypes[0]) };\n        }\n    }\n    static getDefaultValueForType(schema, type) {\n        var _a, _b, _c;\n        if (type === \"null\") {\n            return null;\n        }\n        else if (type === \"number\") {\n            return this.isInteger(schema) ? Math.ceil((_a = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _a !== void 0 ? _a : 0) : (_b = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _b !== void 0 ? _b : 0;\n        }\n        else if (type === \"string\") {\n            if (schema === null || schema === void 0 ? void 0 : schema.enum)\n                return schema.enum[0];\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"color\")\n                return \"#000000\";\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"date\")\n                return new Date().toDateString();\n            return \"\";\n        }\n        else if (type === \"boolean\") {\n            return false;\n        }\n        else if (type === \"array\") {\n            return [];\n        }\n        else if (type === \"object\") {\n            const obj = {};\n            if (schema === null || schema === void 0 ? void 0 : schema.properties) {\n                for (const required of (_c = schema.required) !== null && _c !== void 0 ? _c : []) {\n                    if (!schema.properties.hasOwnProperty(required))\n                        continue;\n                    const def = this.getDefaultValue(schema.properties[required]);\n                    obj[required] = def.value;\n                }\n            }\n            return obj;\n        }\n    }\n    updateElement() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\n        this.objectElements = {};\n        this.arrayElements = [];\n        this.element.innerHTML = \"\";\n        this.element.style.display = \"inline-block\";\n        this.element.classList.remove(\"json-tool-object\");\n        this.element.append(this.createLineNumber());\n        const type = this.currentType;\n        const val = (_a = this.currentValues[type]) !== null && _a !== void 0 ? _a : (this.currentValues[type] = JsonElement.getDefaultValueForType(this.schema, type));\n        if (this.types.length > 1) {\n            const select = document.createElement(\"select\");\n            select.classList.add(\"json-tool-type\");\n            for (const t of this.types) {\n                const option = document.createElement(\"option\");\n                option.innerText = t;\n                option.value = t;\n                select.append(option);\n            }\n            select.value = this.currentType;\n            select.onchange = () => {\n                this.changeType(select.value);\n            };\n            this.element.append(select);\n        }\n        if (type === \"object\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"{\");\n            const object = this.createBlock();\n            this.element.append(object);\n            this.element.append(\"}\");\n            this.element.append(this.createLineNumber());\n            for (const key in val !== null && val !== void 0 ? val : {}) {\n                const obj = this.createObjectKeyValuePair(key, ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.properties) ? this.schema.properties[key] : null, val[key]);\n                object.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                if (((_c = this.schema) === null || _c === void 0 ? void 0 : _c.properties) && !this.schema.properties.hasOwnProperty(key)) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"X\";\n                    remove.onclick = () => {\n                        const val = this.getValue();\n                        delete val[key];\n                        this.setCurrentTypeValue(val);\n                        this.updateElement();\n                    };\n                    buttons.append(remove);\n                }\n                else if (!((_e = (_d = this.schema) === null || _d === void 0 ? void 0 : _d.required) === null || _e === void 0 ? void 0 : _e.includes(key))) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"∽\";\n                    remove.onclick = () => {\n                        const val = this.getValue();\n                        delete val[key];\n                        this.setCurrentTypeValue(val);\n                        this.updateElement();\n                    };\n                    buttons.append(remove);\n                }\n            }\n            if ((_f = this.schema) === null || _f === void 0 ? void 0 : _f.properties) {\n                for (const key in this.schema.properties) {\n                    if (val === null || val === void 0 ? void 0 : val.hasOwnProperty(key))\n                        continue;\n                    if ((_h = (_g = this.schema) === null || _g === void 0 ? void 0 : _g.required) === null || _h === void 0 ? void 0 : _h.includes(key)) {\n                        const obj = this.createObjectKeyValuePair(key, this.schema.properties[key]);\n                        object.append(obj);\n                    }\n                    else {\n                        const obj = this.createObjectKeyValuePair(key, this.schema.properties[key], undefined, true);\n                        object.append(obj);\n                        obj.style.textDecoration = \"line-through 2px\";\n                        const buttons = document.createElement(\"div\");\n                        obj.prepend(buttons);\n                        buttons.classList.add(\"json-tool-btns\");\n                        const add = document.createElement(\"div\");\n                        add.classList.add(\"json-tool-btn\");\n                        add.innerText = \"≁\";\n                        add.onclick = () => {\n                            var _a;\n                            if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.properties) {\n                                const val = this.getValue();\n                                val[key] = JsonElement.getDefaultValue(this.schema.properties[key]).value;\n                                this.setCurrentTypeValue(val);\n                                this.updateElement();\n                            }\n                        };\n                        buttons.append(add);\n                    }\n                }\n            }\n        }\n        else if (type === \"array\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"[\");\n            const array = this.createBlock();\n            this.element.append(array);\n            const add = document.createElement(\"div\");\n            add.classList.add(\"json-tool-btn\");\n            add.innerText = \"+\";\n            this.element.append(add);\n            add.onclick = () => {\n                var _a, _b;\n                const val = [...this.getValue()];\n                if (val.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.maxItems))\n                    return;\n                if ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.items) {\n                    const defaultValue = JsonElement.getDefaultValue(this.schema.items).value;\n                    val.push(defaultValue);\n                    this.currentType = type;\n                    this.setCurrentTypeValue(val);\n                    this.setIsOpened(true);\n                    this.updateElement();\n                }\n            };\n            this.element.append(\"]\");\n            this.element.append(this.createLineNumber());\n            const arr = val !== null && val !== void 0 ? val : [];\n            for (let i = 0; i < arr.length; i++) {\n                const idx = i;\n                const obj = this.createObjectKeyValuePair(i, ((_j = this.schema) === null || _j === void 0 ? void 0 : _j.items) ? this.schema.items : null, val[i]);\n                array.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                const remove = document.createElement(\"div\");\n                remove.classList.add(\"json-tool-btn\");\n                remove.innerText = \"X\";\n                remove.onclick = () => {\n                    var _a;\n                    const arr = [...this.getValue()];\n                    if (arr.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.minItems))\n                        return;\n                    arr.splice(idx, 1);\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(remove);\n                const up = document.createElement(\"div\");\n                up.classList.add(\"json-tool-btn\");\n                up.innerText = \"ᐃ\";\n                up.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx - 1).concat(element).concat(arr.slice(idx - 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(up);\n                const down = document.createElement(\"div\");\n                down.classList.add(\"json-tool-btn\");\n                down.innerText = \"ᐁ\";\n                down.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx + 1).concat(element).concat(arr.slice(idx + 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(down);\n            }\n        }\n        else if (type === \"boolean\") {\n            const checkbox = document.createElement(\"input\");\n            checkbox.type = \"checkbox\";\n            checkbox.checked = val;\n            checkbox.onchange = () => {\n                this.setCurrentTypeValue(checkbox.checked);\n            };\n            this.element.append(checkbox);\n        }\n        else if (type === \"string\") {\n            if ((_k = this.schema) === null || _k === void 0 ? void 0 : _k.enum) {\n                const select = document.createElement(\"select\");\n                for (const value of [...new Set(this.schema.enum.concat(val))]) {\n                    const option = document.createElement(\"option\");\n                    option.innerText = value;\n                    option.value = value;\n                    select.append(option);\n                }\n                select.value = val;\n                select.onchange = () => {\n                    this.setCurrentTypeValue(select.value);\n                };\n                this.element.append(select);\n            }\n            else if (((_l = this.schema) === null || _l === void 0 ? void 0 : _l.format) === \"textarea\") {\n                const input = document.createElement(\"textarea\");\n                input.value = val;\n                input.minLength = (_o = (_m = this.schema) === null || _m === void 0 ? void 0 : _m.minLength) !== null && _o !== void 0 ? _o : 0;\n                input.maxLength = (_q = (_p = this.schema) === null || _p === void 0 ? void 0 : _p.maxLength) !== null && _q !== void 0 ? _q : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n            else if (((_r = this.schema) === null || _r === void 0 ? void 0 : _r.format) === \"date\") {\n                const input = document.createElement(\"input\");\n                input.type = \"date\";\n                input.onchange = () => {\n                    var _a, _b;\n                    this.setCurrentTypeValue((_b = (_a = input.valueAsDate) === null || _a === void 0 ? void 0 : _a.toDateString()) !== null && _b !== void 0 ? _b : \"\");\n                };\n                this.element.append(input);\n                input.valueAsDate = new Date(val);\n            }\n            else {\n                const input = document.createElement(\"input\");\n                input.type = \"text\";\n                if (((_s = this.schema) === null || _s === void 0 ? void 0 : _s.format) && [\"password\", \"email\", \"color\", \"url\"].includes(this.schema.format))\n                    input.type = this.schema.format;\n                input.value = val;\n                input.minLength = (_u = (_t = this.schema) === null || _t === void 0 ? void 0 : _t.minLength) !== null && _u !== void 0 ? _u : 0;\n                input.maxLength = (_w = (_v = this.schema) === null || _v === void 0 ? void 0 : _v.maxLength) !== null && _w !== void 0 ? _w : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n        }\n        else if (type === \"null\") {\n            this.element.append(\"null\");\n        }\n        else if (type === \"number\") {\n            const input = document.createElement(\"input\");\n            input.type = \"number\";\n            input.value = val.toString();\n            input.min = (_z = (_y = (_x = this.schema) === null || _x === void 0 ? void 0 : _x.minimum) === null || _y === void 0 ? void 0 : _y.toString()) !== null && _z !== void 0 ? _z : \"\";\n            input.max = (_2 = (_1 = (_0 = this.schema) === null || _0 === void 0 ? void 0 : _0.maximum) === null || _1 === void 0 ? void 0 : _1.toString()) !== null && _2 !== void 0 ? _2 : \"\";\n            if (JsonElement.isInteger(this.schema))\n                input.step = \"1\";\n            input.onchange = () => {\n                this.setCurrentTypeValue(parseFloat(input.value));\n            };\n            this.element.append(input);\n        }\n        else {\n            this.element.append(`[${type}] : ${val}`);\n        }\n        this.update();\n    }\n    createLineNumber(overrideMargin = false) {\n        const lineNumber = document.createElement(\"div\");\n        lineNumber.classList.add(\"line-number\");\n        if (overrideMargin)\n            lineNumber.style.marginTop = \"0\";\n        return lineNumber;\n    }\n    isOpened() {\n        var _a;\n        return (_a = this.parent.getState()[`${this.path}_opened`]) !== null && _a !== void 0 ? _a : true;\n    }\n    setIsOpened(state) {\n        this.parent.getState()[`${this.path}_opened`] = state;\n    }\n    createBlock() {\n        const block = document.createElement(\"div\");\n        block.classList.add(\"json-tool-block\");\n        block.style.paddingLeft = \"25px\";\n        block.style.borderLeft = \"1px dashed black\";\n        block.style.marginLeft = \"3px\";\n        const collapse = document.createElement(\"div\");\n        if (this.path !== \"root\")\n            block.append(collapse);\n        collapse.classList.add(\"json-tool-btn\");\n        const updateOpened = (opened) => {\n            collapse.innerText = opened ? \"ᐯ\" : \"ᐳ\";\n            block.classList.remove(\"opened\", \"closed\");\n            block.classList.add(opened ? \"opened\" : \"closed\");\n        };\n        const toggle = () => {\n            const opened = !this.isOpened();\n            this.setIsOpened(opened);\n            updateOpened(opened);\n        };\n        collapse.onclick = toggle;\n        updateOpened(this.isOpened());\n        return block;\n    }\n    createObjectKeyValuePair(key, schema, value, noValue = false) {\n        var _a;\n        const parent = document.createElement(\"div\");\n        const originalKey = key;\n        if (typeof key === \"number\") {\n            key = (schema === null || schema === void 0 ? void 0 : schema.title) ? `${schema.title} ${key}` : key;\n        }\n        else {\n            key = (_a = schema === null || schema === void 0 ? void 0 : schema.title) !== null && _a !== void 0 ? _a : key;\n        }\n        const title = document.createElement(\"span\");\n        title.innerText = key.toString();\n        JsonElement.addDescription(title, schema === null || schema === void 0 ? void 0 : schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n        parent.append(title);\n        parent.classList.add(\"json-tool-key\");\n        parent.append(\": \");\n        if (!noValue) {\n            const valueElement = document.createElement(\"div\");\n            const element = new JsonElement(`${this.path}.${originalKey}`, valueElement, schema, value, this);\n            if (this.currentType === \"array\")\n                this.arrayElements.push(element);\n            else if (this.currentType === \"object\")\n                this.objectElements[originalKey] = element;\n            parent.append(valueElement);\n        }\n        return parent;\n    }\n    changeType(type) {\n        var _a;\n        this.currentType = type;\n        if (!this.currentValues.hasOwnProperty(type)) {\n            if (typeof ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.default) !== \"undefined\" && JsonElement.getType(this.schema.default) === type)\n                this.setCurrentTypeValue(this.schema.default);\n            else\n                this.setCurrentTypeValue(JsonElement.getDefaultValueForType(this.schema, type));\n        }\n        this.updateElement();\n    }\n    setStyle() {\n        this.element.style.whiteSpace = \"pre\";\n        this.element.classList.add(\"json-tool-value\");\n    }\n    getValue() {\n        var _a;\n        let val;\n        if (this.currentType === \"array\") {\n            val = this.arrayElements.map(e => e.getValue());\n        }\n        else if (this.currentType === \"object\") {\n            const obj = {};\n            for (const key in this.objectElements) {\n                obj[key] = this.objectElements[key].getValue();\n            }\n            val = obj;\n        }\n        else {\n            val = (_a = this.currentValues[this.currentType]) !== null && _a !== void 0 ? _a : JsonElement.getDefaultValueForType(this.schema, this.currentType);\n        }\n        this.currentValues[this.currentType] = val;\n        return val;\n    }\n}\n//# sourceMappingURL=JsonTool.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TschArray = exports.TschObject = exports.TschUnion = exports.TschUndefined = exports.TschNull = exports.TschBoolean = exports.TschNumber = exports.TschString = exports.TschType = void 0;\nclass TschValidationError {\n    constructor(path, message) {\n        this.path = path;\n        this.pathString = TschValidationError.formatPath(path);\n        this.rawMessage = message;\n        this.message = `${this.pathString}: ${message}`;\n    }\n    static formatPath(path) {\n        if (path.length < 1)\n            return \"root\";\n        return path.join(\".\");\n    }\n}\nclass TschType {\n    constructor(type) {\n        this._ts = null; //_ts is only used by Typescript for type inference, and so actually doesn't need to be assigned\n        this._type = type;\n        this._title = null;\n        this._description = null;\n        this._default = null;\n        this._examples = null;\n    }\n    union(other) {\n        return new TschUnion(this, other);\n    }\n    optional() {\n        return new TschUnion(this, new TschUndefined());\n    }\n    nullable() {\n        return new TschUnion(this, new TschNull());\n    }\n    clone() {\n        const clone = this.newInstance();\n        clone._title = this._title;\n        clone._description = this._description;\n        clone._default = this._default;\n        clone._examples = this._examples ? [...this._examples] : null;\n        return clone;\n    }\n    title(title) {\n        const clone = this.clone();\n        clone._title = title;\n        return clone;\n    }\n    description(descriptin) {\n        const clone = this.clone();\n        clone._description = descriptin;\n        return clone;\n    }\n    default(defaultValue) {\n        const clone = this.clone();\n        clone._default = defaultValue;\n        return clone;\n    }\n    examples(examples) {\n        const clone = this.clone();\n        clone._examples = [...examples];\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = {\n            \"type\": this._type\n        };\n        if (this._title)\n            schema.title = this._title;\n        if (this._description)\n            schema.description = this._description;\n        if (this._default)\n            schema.default = this._default;\n        if (this._examples)\n            schema.examples = this._examples;\n        return schema;\n    }\n    validate(input) {\n        const errors = [];\n        this.validateInternal([], input, errors);\n        return { valid: errors.length == 0, errors };\n    }\n    validateInternal(path, input, errors) {\n        if (!this.isCorrectType(input)) {\n            errors.push(new TschValidationError(path, `Value has to be of type ${this.getTypeName()}`));\n            return;\n        }\n        this.validateCorrectType(path, input, errors);\n    }\n    isOptional() { return false; }\n    isNullable() { return false; }\n}\nexports.TschType = TschType;\nclass TschString extends TschType {\n    constructor() {\n        super(\"string\");\n        this._format = null;\n        this._enum = null;\n        this._minLength = null;\n        this._maxLength = null;\n    }\n    newInstance() {\n        return new TschString();\n    }\n    clone() {\n        const clone = super.clone();\n        clone._format = this._format;\n        clone._enum = this._enum;\n        clone._minLength = this._minLength;\n        clone._maxLength = this._maxLength;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        if (this._format)\n            schema.format = this._format;\n        if (this._enum)\n            schema.enum = this._enum;\n        if (this._minLength)\n            schema.minLength = this._minLength;\n        if (this._maxLength)\n            schema.maxLength = this._maxLength;\n        return schema;\n    }\n    minLength(min) {\n        const clone = this.clone();\n        clone._minLength = min;\n        return clone;\n    }\n    maxLength(max) {\n        const clone = this.clone();\n        clone._maxLength = max;\n        return clone;\n    }\n    enumeration(enumeration) {\n        const clone = this.clone();\n        clone._enum = [...enumeration];\n        return clone;\n    }\n    format(format) {\n        const clone = this.clone();\n        clone._format = format;\n        return clone;\n    }\n    color() {\n        return this.format(\"color\");\n    }\n    date() {\n        return this.format(\"date\");\n    }\n    email() {\n        return this.format(\"email\");\n    }\n    password() {\n        return this.format(\"password\");\n    }\n    textarea() {\n        return this.format(\"textarea\");\n    }\n    url() {\n        return this.format(\"url\");\n    }\n    isCorrectType(input) {\n        return typeof input === \"string\";\n    }\n    getTypeName() { return \"string\"; }\n    validateCorrectType(path, input, errors) {\n        if (!!this._enum && !this._enum.includes(input)) {\n            errors.push(new TschValidationError(path, `Value has to be one of the following: ${this._enum.join(\", \")}`));\n        }\n        if (typeof this._minLength === \"number\" && input.length < this._minLength) {\n            errors.push(new TschValidationError(path, `Value must be longer than ${this._minLength} characters.`));\n        }\n        if (typeof this._maxLength === \"number\" && input.length > this._maxLength) {\n            errors.push(new TschValidationError(path, `Value must be shorter than ${this._maxLength} characters.`));\n        }\n        if (this._format === \"color\" && !/^#?[0-9a-f]{3,6}$/i.test(input)) {\n            errors.push(new TschValidationError(path, `Value must be a color hex code.`));\n        }\n        if (this._format === \"date\" && Number.isNaN(Date.parse(input))) {\n            errors.push(new TschValidationError(path, `Value must be a date.`));\n        }\n        if (this._format === \"email\" && !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(input)) {\n            errors.push(new TschValidationError(path, `Value must be an email.`));\n        }\n        if (this._format === \"url\" && !/^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/.test(input)) {\n            errors.push(new TschValidationError(path, `Value must be a URL.`));\n        }\n    }\n}\nexports.TschString = TschString;\nclass TschNumber extends TschType {\n    constructor() {\n        super(\"number\");\n        this._integer = false;\n        this._min = null;\n        this._max = null;\n    }\n    newInstance() {\n        return new TschNumber();\n    }\n    clone() {\n        const clone = super.clone();\n        clone._integer = this._integer;\n        clone._min = this._min;\n        clone._max = this._max;\n        return clone;\n    }\n    integer() {\n        const clone = this.clone();\n        clone._integer = true;\n        return clone;\n    }\n    min(min) {\n        const clone = this.clone();\n        clone._min = min;\n        return clone;\n    }\n    max(max) {\n        const clone = this.clone();\n        clone._max = max;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        if (this._integer)\n            schema.type = \"integer\";\n        if (this._min !== null)\n            schema.minimum = this._min;\n        if (this._max !== null)\n            schema.maximum = this._max;\n        return schema;\n    }\n    isCorrectType(input) {\n        return typeof input === \"number\";\n    }\n    getTypeName() { return \"number\"; }\n    validateCorrectType(path, input, errors) {\n        if (this._integer && !Number.isInteger(input)) {\n            errors.push(new TschValidationError(path, `Value has to be an integer.`));\n        }\n        if (typeof this._min === \"number\" && input < this._min) {\n            errors.push(new TschValidationError(path, `Value must be at least ${this._min}.`));\n        }\n        if (typeof this._max === \"number\" && input > this._max) {\n            errors.push(new TschValidationError(path, `Value must be at less than ${this._max}.`));\n        }\n    }\n}\nexports.TschNumber = TschNumber;\nclass TschBoolean extends TschType {\n    constructor() {\n        super(\"boolean\");\n    }\n    newInstance() {\n        return new TschBoolean();\n    }\n    clone() {\n        const clone = super.clone();\n        return clone;\n    }\n    isCorrectType(input) {\n        return typeof input === \"boolean\";\n    }\n    getTypeName() { return \"boolean\"; }\n    validateCorrectType(path, input, errors) {\n    }\n}\nexports.TschBoolean = TschBoolean;\nclass TschNull extends TschType {\n    constructor() {\n        super(\"null\");\n    }\n    newInstance() {\n        return new TschNull();\n    }\n    clone() {\n        const clone = super.clone();\n        return clone;\n    }\n    isCorrectType(input) {\n        return input === null;\n    }\n    getTypeName() { return \"null\"; }\n    validateCorrectType(path, input, errors) {\n    }\n}\nexports.TschNull = TschNull;\nclass TschUndefined extends TschType {\n    constructor() {\n        super(\"undefined\");\n    }\n    newInstance() {\n        return new TschUndefined();\n    }\n    clone() {\n        const clone = super.clone();\n        return clone;\n    }\n    isCorrectType(input) {\n        return typeof input === \"undefined\";\n    }\n    getTypeName() { return \"undefined\"; }\n    validateCorrectType(path, input, errors) {\n    }\n}\nexports.TschUndefined = TschUndefined;\nclass TschUnion extends TschType {\n    constructor(type1, type2) {\n        super(`union_${type1._type}_${type2._type}`);\n        this.type1 = type1;\n        this.type2 = type2;\n    }\n    Type1Internal() { return this.type1; }\n    Type2Internal() { return this.type2; }\n    newInstance() {\n        return new TschUnion(this.type1.clone(), this.type2.clone());\n    }\n    clone() {\n        const clone = super.clone();\n        clone.type1 = this.Type1Internal().clone();\n        clone.type2 = this.Type2Internal().clone();\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        var _a, _b, _c, _d;\n        const schema1 = this.Type1Internal()._type === \"undefined\" ? {} : this.type1.getJsonSchemaProperty();\n        const schema2 = this.Type2Internal()._type === \"undefined\" ? {} : this.type2.getJsonSchemaProperty();\n        const combined = Object.assign(Object.assign({}, schema1), schema2);\n        combined.type = [...(Array.isArray(schema1.type) ? schema1.type : [schema1.type]), ...(Array.isArray(schema2.type) ? schema2.type : [schema2.type])].filter(t => !!t && t !== \"undefined\");\n        if (combined.type.length < 2)\n            combined.type = combined.type[0];\n        if (schema1.properties && schema2.properties) {\n            combined.properties = Object.assign(Object.assign({}, ((_a = schema1.properties) !== null && _a !== void 0 ? _a : {})), ((_b = schema2.properties) !== null && _b !== void 0 ? _b : {}));\n            if (!!schema1.required && !!schema2.required)\n                combined.required = schema1.required.filter((f) => { var _a; return (_a = schema2.required) === null || _a === void 0 ? void 0 : _a.includes(f); });\n            else\n                combined.required = (_d = (_c = schema1.required) !== null && _c !== void 0 ? _c : schema2.required) !== null && _d !== void 0 ? _d : [];\n        }\n        if (this._title)\n            combined.title = this._title;\n        if (this._description)\n            combined.description = this._description;\n        if (this._default)\n            combined.default = this._default;\n        return combined;\n    }\n    isNullable() {\n        return this.Type1Internal()._type === \"null\" || this.Type2Internal()._type === \"null\" || this.Type1Internal().isNullable() || this.Type2Internal().isNullable();\n    }\n    isOptional() {\n        return this.Type1Internal()._type === \"undefined\" || this.Type2Internal()._type === \"undefined\" || this.Type1Internal().isOptional() || this.Type2Internal().isOptional();\n    }\n    isCorrectType(input) {\n        return this.Type1Internal().isCorrectType(input) || this.Type2Internal().isCorrectType(input);\n    }\n    getTypeName() { return `${this.type1.getTypeName()} or ${this.type2.getTypeName()}`; }\n    validateCorrectType(path, input, errors) {\n        if (this.Type1Internal().isCorrectType(input)) {\n            this.Type1Internal().validateInternal(path, input, errors);\n        }\n        if (this.Type2Internal().isCorrectType(input)) {\n            this.Type2Internal().validateInternal(path, input, errors);\n        }\n    }\n}\nexports.TschUnion = TschUnion;\nclass TschObject extends TschType {\n    constructor(shape) {\n        super(\"object\");\n        this.shape = shape;\n    }\n    newInstance() {\n        return new TschObject(this.shape);\n    }\n    clone() {\n        const clone = super.clone();\n        clone.shape = this.shape;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        schema.required = Object.keys(this.shape).filter(k => !this.shape[k].isOptional());\n        schema.properties = {};\n        for (const key in this.shape) {\n            schema.properties[key] = this.shape[key].getJsonSchemaProperty();\n        }\n        return schema;\n    }\n    isCorrectType(input) {\n        return typeof input === \"object\" && input !== null && !Array.isArray(input);\n    }\n    getTypeName() {\n        return \"object\";\n    }\n    validateCorrectType(path, input, errors) {\n        for (const key in this.shape) {\n            const child = this.shape[key];\n            const childInternal = child;\n            if (!childInternal.isOptional() && !input.hasOwnProperty(key)) {\n                errors.push(new TschValidationError(path, `Property ${key} of type ${childInternal.getTypeName()} is required.`));\n            }\n            if (input.hasOwnProperty(key)) {\n                childInternal.validateInternal([...path, key], input[key], errors);\n            }\n        }\n    }\n}\nexports.TschObject = TschObject;\nclass TschArray extends TschType {\n    constructor(elementType) {\n        super(\"array\");\n        this.elementType = elementType;\n        this._format = null;\n        this._minElementCount = null;\n        this._maxElementCount = null;\n        this._unique = false;\n    }\n    newInstance() {\n        return new TschArray(this.elementType);\n    }\n    clone() {\n        const clone = super.clone();\n        clone.elementType = this.elementType;\n        clone._format = this._format;\n        clone._unique = this._unique;\n        clone._minElementCount = this._minElementCount;\n        clone._maxElementCount = this._maxElementCount;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        schema.items = this.elementType.getJsonSchemaProperty();\n        if (this._format)\n            schema.format = this._format;\n        if (this._unique)\n            schema.uniqueItems = this._unique;\n        if (this._minElementCount)\n            schema.minItems = this._minElementCount;\n        if (this._maxElementCount)\n            schema.maxItems = this._maxElementCount;\n        return schema;\n    }\n    table() {\n        const clone = this.clone();\n        clone._format = \"table\";\n        return clone;\n    }\n    minElements(count) {\n        const clone = this.clone();\n        clone._minElementCount = count;\n        return clone;\n    }\n    maxElements(count) {\n        const clone = this.clone();\n        clone._maxElementCount = count;\n        return clone;\n    }\n    unique() {\n        const clone = this.clone();\n        clone._unique = true;\n        return clone;\n    }\n    isCorrectType(input) {\n        return typeof input === \"object\" && input !== null && Array.isArray(input);\n    }\n    getTypeName() {\n        return `array of ${this.elementType.getTypeName()}`;\n    }\n    validateCorrectType(path, input, errors) {\n        const elementTypeInternal = this.elementType;\n        const used = new Set();\n        if (typeof this._minElementCount === \"number\" && input.length < this._minElementCount) {\n            errors.push(new TschValidationError(path, `Array must contain at least ${this._minElementCount} elements.`));\n        }\n        if (typeof this._maxElementCount === \"number\" && input.length > this._maxElementCount) {\n            errors.push(new TschValidationError(path, `Array must contain at most ${this._maxElementCount} elements.`));\n        }\n        for (let i = 0; i < input.length; i++) {\n            const element = input[i];\n            elementTypeInternal.validateInternal([...path, i.toString()], element, errors);\n            if (this._unique) {\n                const json = JSON.stringify(element);\n                if (used.has(json)) {\n                    errors.push(new TschValidationError(path, \"All values have to be unique.\"));\n                }\n                used.add(json);\n            }\n        }\n    }\n}\nexports.TschArray = TschArray;\n//# sourceMappingURL=TschType.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tsch = void 0;\nconst tsch = __importStar(require(\"./tsch\"));\nexports.tsch = tsch;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.array = exports.object = exports.boolean = exports.number = exports.string = void 0;\nconst TschType_1 = require(\"./TschType\");\nfunction string() { return new TschType_1.TschString(); }\nexports.string = string;\nfunction number() { return new TschType_1.TschNumber(); }\nexports.number = number;\nfunction boolean() { return new TschType_1.TschBoolean(); }\nexports.boolean = boolean;\nfunction object(shape) {\n    return new TschType_1.TschObject(shape);\n}\nexports.object = object;\nfunction array(elementType) {\n    return new TschType_1.TschArray(elementType);\n}\nexports.array = array;\n//# sourceMappingURL=tsch.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tsch_1 = require(\"tsch\");\nconst JsonTool_1 = require(\"./JsonTool\");\nconst person = tsch_1.tsch.object({\n    name: tsch_1.tsch.string().description(\"First and Last Name\").minLength(4).maxLength(6).default(\"Jeremy Dorn\").nullable(),\n    age: tsch_1.tsch.number().integer().default(25).min(18).max(99).optional().title(\"Age\").union(tsch_1.tsch.string()),\n    favorite_color: tsch_1.tsch.string().color().title(\"favorite color\").default(\"#ffa500\").examples([\"#ff0000\", \"#00ff00\"]),\n    gender: tsch_1.tsch.string().enumeration([\"male\", \"female\", \"other\"]),\n    date: tsch_1.tsch.string().date(),\n    alive: tsch_1.tsch.boolean().default(true).nullable().title(\"Alive\").description(\"If checked, this person is still alive\"),\n    description: tsch_1.tsch.string().textarea(),\n    password: tsch_1.tsch.string().password(),\n    website: tsch_1.tsch.string().url(),\n    email: tsch_1.tsch.string().email(),\n    location: tsch_1.tsch.object({\n        city: tsch_1.tsch.string().default(\"San Francisco\"),\n        state: tsch_1.tsch.string().default(\"CA\")\n    }).title(\"Location\"),\n    pets: tsch_1.tsch.array(tsch_1.tsch.object({\n        type: tsch_1.tsch.string().enumeration([\"cat\", \"dog\", \"bird\", \"reptile\", \"other\"]).default(\"dog\"),\n        name: tsch_1.tsch.string()\n    }).title(\"Pet\")).unique().table().default([{ type: \"dog\", name: \"Walter\" }])\n}).title(\"Person\");\nconst personJsonSchema = person.getJsonSchemaProperty();\nconst rootElement = document.querySelector(\"#root\");\nif (rootElement) {\n    const tool = new JsonTool_1.JsonTool(rootElement);\n    tool.load(personJsonSchema, { test: 123 }, v => person.validate(v));\n    window.getValue = () => tool.getValue();\n}\n//# sourceMappingURL=www.js.map"],"names":["Object","defineProperty","exports","value","JsonTool","constructor","element","validator","_a","_b","this","elementState","containerElement","valid","schema","root","document","createElement","style","fontFamily","marginLeft","classList","add","rootObject","rootElement","errorMessages","iframe","width","height","overflow","border","innerHTML","appendChild","iframeBody","contentDocument","contentWindow","querySelector","append","createCss","onload","getPath","getState","console","log","load","title","textContent","JsonElement","addDescription","description","examples","validate","hide","setValidator","getValue","update","number","querySelectorAll","forEach","e","innerText","toString","window","setTimeout","errors","map","message","join","parent","path","arrayElements","objectElements","setStyle","currentValues","types","getDefaultAvailableTypes","actualType","getType","currentType","push","setCurrentTypeValue","def","getDefaultValue","type","Set","updateElement","i","length","key","JSON","parse","stringify","undefined","static","textDecoration","cursor","Array","isArray","arr","includes","t","availableTypes","default","getDefaultValueForType","_c","isInteger","Math","ceil","minimum","enum","format","Date","toDateString","obj","properties","required","hasOwnProperty","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","_1","_2","display","remove","createLineNumber","val","select","option","onchange","changeType","object","createBlock","createObjectKeyValuePair","buttons","prepend","onclick","array","maxItems","items","defaultValue","setIsOpened","idx","minItems","splice","up","slice","concat","down","checkbox","checked","input","minLength","maxLength","valueAsDate","min","max","maximum","step","parseFloat","overrideMargin","lineNumber","marginTop","isOpened","state","block","paddingLeft","borderLeft","collapse","updateOpened","opened","noValue","originalKey","valueElement","whiteSpace","TschArray","TschObject","TschUnion","TschUndefined","TschNull","TschBoolean","TschNumber","TschString","TschType","TschValidationError","pathString","formatPath","rawMessage","_ts","_type","_title","_description","_default","_examples","union","other","optional","nullable","clone","newInstance","descriptin","getJsonSchemaProperty","validateInternal","isCorrectType","validateCorrectType","getTypeName","isOptional","isNullable","super","_format","_enum","_minLength","_maxLength","enumeration","color","date","email","password","textarea","url","test","Number","isNaN","_integer","_min","_max","integer","type1","type2","Type1Internal","Type2Internal","schema1","schema2","combined","assign","filter","f","shape","keys","k","childInternal","elementType","_minElementCount","_maxElementCount","_unique","uniqueItems","table","minElements","count","maxElements","unique","elementTypeInternal","used","json","has","__createBinding","create","o","m","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","call","tsch","boolean","string","TschType_1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","tsch_1","JsonTool_1","person","name","age","favorite_color","gender","alive","website","location","city","pets","personJsonSchema","tool"],"sourceRoot":""}