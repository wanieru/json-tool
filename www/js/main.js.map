{"version":3,"file":"www/js/main.js","mappings":"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","sources":["webpack://@wanieru/json-tool/./js/JsonTool.js","webpack://@wanieru/json-tool/./node_modules/tsch/dist/TschType.js","webpack://@wanieru/json-tool/./node_modules/tsch/dist/index.js","webpack://@wanieru/json-tool/./node_modules/tsch/dist/tsch.js","webpack://@wanieru/json-tool/webpack/bootstrap","webpack://@wanieru/json-tool/./js/www.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonTool = void 0;\nclass JsonTool {\n    constructor(element, validator = null) {\n        var _a, _b;\n        this.validator = validator !== null && validator !== void 0 ? validator : (() => { return { valid: true }; });\n        this.schema = null;\n        this.root = document.createElement(\"div\");\n        this.root.style.fontFamily = \"monospace\";\n        this.root.style.marginLeft = \"30px\";\n        this.root.classList.add(\"json-tool\");\n        this.rootObject = null;\n        this.rootElement = null;\n        this.errorMessages = document.createElement(\"div\");\n        this.errorMessages.classList.add(\"json-tool-errors\");\n        const iframe = document.createElement(\"iframe\");\n        iframe.style.width = \"100%\";\n        iframe.style.height = \"100%\";\n        iframe.style.overflow = \"scroll\";\n        iframe.style.border = \"0\";\n        element.appendChild(iframe);\n        this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n        this.iframeBody.append(this.root);\n        this.createCss(this.iframeBody);\n        iframe.onload = () => {\n            var _a, _b;\n            this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n            this.iframeBody.append(this.root);\n            this.createCss(this.iframeBody);\n            this.iframeBody.appendChild(this.errorMessages);\n        };\n    }\n    load(schema, value, validator) {\n        this.validator = validator !== null && validator !== void 0 ? validator : this.validator;\n        this.schema = schema;\n        this.root.innerHTML = \"\";\n        if (schema.title) {\n            const title = document.createElement(\"h3\");\n            title.textContent = schema.title;\n            JsonElement.addDescription(title, schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n            this.root.appendChild(title);\n        }\n        this.rootObject = document.createElement(\"div\");\n        this.root.appendChild(this.rootObject);\n        this.rootElement = new JsonElement(this.rootObject, schema, value, () => this.onUpdate(), () => this.validate());\n        this.validate();\n    }\n    setValidator(validator) {\n        this.validator = validator;\n    }\n    getValue() {\n        var _a;\n        return (_a = this.rootElement) === null || _a === void 0 ? void 0 : _a.getValue();\n    }\n    onUpdate() {\n        var _a;\n        if (!this.rootObject)\n            return;\n        let number = 1;\n        (_a = this.rootObject) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\".line-number\").forEach(e => {\n            e.innerText = number.toString();\n            number++;\n        });\n        this.validate();\n    }\n    validate() {\n        window.setTimeout(() => {\n            var _a;\n            if (this.schema && this.errorMessages) {\n                const valid = this.validator(this.getValue(), this.schema);\n                this.errorMessages.innerHTML = \"\";\n                if (!valid.valid) {\n                    this.errorMessages.innerHTML = ((_a = valid.errors) !== null && _a !== void 0 ? _a : []).map(e => typeof e === \"string\" ? e : e.message).join(\"\\n\");\n                }\n            }\n        }, 1);\n    }\n    createCss(parent) {\n        const style = document.createElement(\"style\");\n        parent.appendChild(style);\n        style.innerHTML =\n            `\n            .json-tool-btn\n             {\n                border: 1px black solid;\n                cursor: pointer;\n                display: block;\n             }\n              .json-tool-block > .json-tool-btn {\n                margin-top: -17px;\n                margin-left: -40px;\n                position: absolute;\n                opacity: 0;\n              }\n              .json-tool-block:hover > .json-tool-btn\n              {\n                opacity: 1;\n              }\n              .json-tool-value > .json-tool-btn {\n                margin-left: 10px;\n                display: inline-block;\n                position: absolute;\n                opacity :0;\n              }\n              .json-tool-value:hover > .json-tool-btn\n              {\n                opacity :1;\n              }\n              .json-tool-key > .json-tool-btns {\n                margin-left: -32px;\n                display: inline-block;\n                position: absolute;\n                width: 32px;\n                text-align: right;\n                opacity: 0;\n              }\n              .json-tool-key:hover > .json-tool-btns\n              {\n                opacity: 1;\n              }\n\n              .json-tool-key > .json-tool-btns > .json-tool-btn {\n                display: inline-block;\n                margin-right: 2px;\n              }\n              .json-tool-value > .json-tool-type\n              {\n                float:right;\n                opacity: 0;\n                padding:0;\n                margin:0;\n                border:0;\n              }\n              .json-tool-value.json-tool-object > .json-tool-type\n              {\n                float:none;\n                position: absolute;\n                margin-left: 15px;\n              }\n              .json-tool-value:hover > .json-tool-type\n              {\n                opacity: 1;\n              }\n\n              .json-tool-block.opened > .json-tool-key {display: block}\n              .json-tool-block.closed > .json-tool-key {display: none}\n\n              .line-number\n              {\n                position: absolute;\n                left: 0;\n                text-align: right;\n                width: 20px;\n              }\n              .json-tool-value.json-tool-object > .line-number\n              {\n                margin-top: -15px;\n              }\n              .json-tool input, .json-tool select, .json-tool textarea\n              {\n                border: 0;\n                background-color: #ece9e9;\n                padding: 0;\n                margin: 1px;\n              }\n\n                .json-tool-errors {\n                    color: red;\n                    white-space: pre;\n                    font-family: monospace;\n                    line-height: 2em;\n                    font-weight: bold;\n                    font-size: 1.2em;\n                }\n`;\n    }\n}\nexports.JsonTool = JsonTool;\nclass JsonElement {\n    constructor(element, schema, value, onUpdate, validate) {\n        this.arrayElements = [];\n        this.objectElements = {};\n        this.element = element;\n        this.setStyle();\n        this.schema = schema;\n        this.onUpdate = onUpdate;\n        this.validate = validate;\n        this.currentValues = {};\n        this.types = schema ? JsonElement.getDefaultAvailableTypes(schema) : [];\n        const actualType = JsonElement.getType(value);\n        this.currentType = \"\";\n        if (actualType !== \"undefined\") {\n            this.currentType = actualType;\n            this.types.push(actualType);\n            this.setCurrentTypeValue(value);\n        }\n        else if (this.schema) {\n            const def = JsonElement.getDefaultValue(this.schema);\n            this.currentType = def.type;\n            this.setCurrentTypeValue(def.value);\n        }\n        this.types = [...new Set(this.types)];\n        this.updateElement();\n    }\n    setCurrentTypeValue(value) {\n        this.currentValues[this.currentType] = typeof value !== \"undefined\" ? JSON.parse(JSON.stringify(value)) : undefined;\n        if (this.validate)\n            this.validate();\n    }\n    static addDescription(element, description, examples) {\n        if (examples) {\n            description = `${description ? `${description}\\n` : \"\"}Examples:\\n${examples.map(e => JSON.stringify(e)).join(\",\\n\")}`;\n        }\n        if (description) {\n            element.title = description;\n            element.style.textDecoration = \"underline dotted\";\n            element.style.cursor = \"help\";\n        }\n    }\n    static getType(value) {\n        if (typeof value === \"undefined\")\n            return \"undefined\";\n        if (Array.isArray(value)) {\n            return \"array\";\n        }\n        else if (value === null) {\n            return \"null\";\n        }\n        else {\n            return typeof value;\n        }\n    }\n    static isInteger(schema) {\n        if (!schema)\n            return false;\n        const arr = Array.isArray(schema.type) ? schema.type : [schema.type];\n        return arr.includes(\"integer\") && !arr.includes(\"number\");\n    }\n    static getDefaultAvailableTypes(schema) {\n        let types = Array.isArray(schema.type) ? [...schema.type] : [schema.type];\n        types = types.map(t => {\n            if (t === \"integer\")\n                return \"number\";\n            return t;\n        });\n        return types;\n    }\n    static getDefaultValue(schema) {\n        const availableTypes = this.getDefaultAvailableTypes(schema);\n        if (typeof schema.default !== \"undefined\") {\n            return { type: this.getType(schema.default), value: schema.default };\n        }\n        else if (schema.examples && schema.examples.length > 0) {\n            return { type: this.getType(schema.examples[0]), value: schema.examples[0] };\n        }\n        else {\n            return { type: availableTypes[0], value: this.getDefaultValueForType(schema, availableTypes[0]) };\n        }\n    }\n    static getDefaultValueForType(schema, type) {\n        var _a, _b, _c;\n        if (type === \"null\") {\n            return null;\n        }\n        else if (type === \"number\") {\n            return this.isInteger(schema) ? Math.ceil((_a = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _a !== void 0 ? _a : 0) : (_b = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _b !== void 0 ? _b : 0;\n        }\n        else if (type === \"string\") {\n            if (schema === null || schema === void 0 ? void 0 : schema.enum)\n                return schema.enum[0];\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"color\")\n                return \"#000000\";\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"date\")\n                return new Date().toDateString();\n            return \"\";\n        }\n        else if (type === \"boolean\") {\n            return false;\n        }\n        else if (type === \"array\") {\n            return [];\n        }\n        else if (type === \"object\") {\n            const obj = {};\n            if (schema === null || schema === void 0 ? void 0 : schema.properties) {\n                for (const required of (_c = schema.required) !== null && _c !== void 0 ? _c : []) {\n                    if (!schema.properties.hasOwnProperty(required))\n                        continue;\n                    const def = this.getDefaultValue(schema.properties[required]);\n                    obj[required] = def.value;\n                }\n            }\n            return obj;\n        }\n    }\n    updateElement() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2;\n        this.objectElements = {};\n        this.arrayElements = [];\n        this.element.innerHTML = \"\";\n        this.element.style.display = \"inline-block\";\n        this.element.classList.remove(\"json-tool-object\");\n        this.element.append(this.createLineNumber());\n        const type = this.currentType;\n        const val = (_a = this.currentValues[type]) !== null && _a !== void 0 ? _a : (this.currentValues[type] = JsonElement.getDefaultValueForType(this.schema, type));\n        if (this.types.length > 1) {\n            const select = document.createElement(\"select\");\n            select.classList.add(\"json-tool-type\");\n            for (const t of this.types) {\n                const option = document.createElement(\"option\");\n                option.innerText = t;\n                option.value = t;\n                select.append(option);\n            }\n            select.value = this.currentType;\n            select.onchange = () => {\n                this.changeType(select.value);\n            };\n            this.element.append(select);\n        }\n        if (type === \"object\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"{\");\n            const object = this.createBlock();\n            this.element.append(object);\n            this.element.append(\"}\");\n            this.element.append(this.createLineNumber());\n            for (const key in val !== null && val !== void 0 ? val : {}) {\n                const obj = this.createObjectKeyValuePair(key, ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.properties) ? this.schema.properties[key] : null, val[key]);\n                object.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                if (((_c = this.schema) === null || _c === void 0 ? void 0 : _c.properties) && !this.schema.properties.hasOwnProperty(key)) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"X\";\n                    remove.onclick = () => {\n                        const val = this.getValue();\n                        delete val[key];\n                        this.setCurrentTypeValue(val);\n                        this.updateElement();\n                    };\n                    buttons.append(remove);\n                }\n                else if (!((_e = (_d = this.schema) === null || _d === void 0 ? void 0 : _d.required) === null || _e === void 0 ? void 0 : _e.includes(key))) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"∽\";\n                    remove.onclick = () => {\n                        const val = this.getValue();\n                        delete val[key];\n                        this.setCurrentTypeValue(val);\n                        this.updateElement();\n                    };\n                    buttons.append(remove);\n                }\n            }\n            if ((_f = this.schema) === null || _f === void 0 ? void 0 : _f.properties) {\n                for (const key in this.schema.properties) {\n                    if (val === null || val === void 0 ? void 0 : val.hasOwnProperty(key))\n                        continue;\n                    if ((_h = (_g = this.schema) === null || _g === void 0 ? void 0 : _g.required) === null || _h === void 0 ? void 0 : _h.includes(key)) {\n                        const obj = this.createObjectKeyValuePair(key, this.schema.properties[key]);\n                        object.append(obj);\n                    }\n                    else {\n                        const obj = this.createObjectKeyValuePair(key, this.schema.properties[key], undefined, true);\n                        object.append(obj);\n                        obj.style.textDecoration = \"line-through 2px\";\n                        const buttons = document.createElement(\"div\");\n                        obj.prepend(buttons);\n                        buttons.classList.add(\"json-tool-btns\");\n                        const add = document.createElement(\"div\");\n                        add.classList.add(\"json-tool-btn\");\n                        add.innerText = \"≁\";\n                        add.onclick = () => {\n                            var _a;\n                            if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.properties) {\n                                const val = this.getValue();\n                                val[key] = JsonElement.getDefaultValue(this.schema.properties[key]).value;\n                                this.setCurrentTypeValue(val);\n                                this.updateElement();\n                            }\n                        };\n                        buttons.append(add);\n                    }\n                }\n            }\n        }\n        else if (type === \"array\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"[\");\n            const array = this.createBlock();\n            this.element.append(array);\n            const add = document.createElement(\"div\");\n            add.classList.add(\"json-tool-btn\");\n            add.innerText = \"+\";\n            this.element.append(add);\n            add.onclick = () => {\n                var _a, _b;\n                const val = [...this.getValue()];\n                if (val.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.maxItems))\n                    return;\n                if ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.items) {\n                    const defaultValue = JsonElement.getDefaultValue(this.schema.items).value;\n                    val.push(defaultValue);\n                    this.currentType = type;\n                    this.setCurrentTypeValue(val);\n                    this.updateElement();\n                }\n            };\n            this.element.append(\"]\");\n            this.element.append(this.createLineNumber());\n            const arr = val !== null && val !== void 0 ? val : [];\n            for (let i = 0; i < arr.length; i++) {\n                const idx = i;\n                const obj = this.createObjectKeyValuePair(i, ((_j = this.schema) === null || _j === void 0 ? void 0 : _j.items) ? this.schema.items : null, val[i]);\n                array.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                const remove = document.createElement(\"div\");\n                remove.classList.add(\"json-tool-btn\");\n                remove.innerText = \"X\";\n                remove.onclick = () => {\n                    var _a;\n                    const arr = [...this.getValue()];\n                    if (arr.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.minItems))\n                        return;\n                    arr.splice(idx, 1);\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(remove);\n                const up = document.createElement(\"div\");\n                up.classList.add(\"json-tool-btn\");\n                up.innerText = \"ᐃ\";\n                up.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx - 1).concat(element).concat(arr.slice(idx - 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(up);\n                const down = document.createElement(\"div\");\n                down.classList.add(\"json-tool-btn\");\n                down.innerText = \"ᐁ\";\n                down.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx + 1).concat(element).concat(arr.slice(idx + 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(down);\n            }\n        }\n        else if (type === \"boolean\") {\n            const checkbox = document.createElement(\"input\");\n            checkbox.type = \"checkbox\";\n            checkbox.checked = val;\n            checkbox.onchange = () => {\n                this.setCurrentTypeValue(checkbox.checked);\n            };\n            this.element.append(checkbox);\n        }\n        else if (type === \"string\") {\n            if ((_k = this.schema) === null || _k === void 0 ? void 0 : _k.enum) {\n                const select = document.createElement(\"select\");\n                for (const value of [...new Set(this.schema.enum.concat(val))]) {\n                    const option = document.createElement(\"option\");\n                    option.innerText = value;\n                    option.value = value;\n                    select.append(option);\n                }\n                select.value = val;\n                select.onchange = () => {\n                    this.setCurrentTypeValue(select.value);\n                };\n                this.element.append(select);\n            }\n            else if (((_l = this.schema) === null || _l === void 0 ? void 0 : _l.format) === \"textarea\") {\n                const input = document.createElement(\"textarea\");\n                input.value = val;\n                input.minLength = (_o = (_m = this.schema) === null || _m === void 0 ? void 0 : _m.minLength) !== null && _o !== void 0 ? _o : 0;\n                input.maxLength = (_q = (_p = this.schema) === null || _p === void 0 ? void 0 : _p.maxLength) !== null && _q !== void 0 ? _q : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n            else if (((_r = this.schema) === null || _r === void 0 ? void 0 : _r.format) === \"date\") {\n                const input = document.createElement(\"input\");\n                input.type = \"date\";\n                input.onchange = () => {\n                    var _a, _b;\n                    this.setCurrentTypeValue((_b = (_a = input.valueAsDate) === null || _a === void 0 ? void 0 : _a.toDateString()) !== null && _b !== void 0 ? _b : \"\");\n                };\n                this.element.append(input);\n                input.valueAsDate = new Date(val);\n            }\n            else {\n                const input = document.createElement(\"input\");\n                input.type = \"text\";\n                if (((_s = this.schema) === null || _s === void 0 ? void 0 : _s.format) && [\"password\", \"email\", \"color\", \"url\"].includes(this.schema.format))\n                    input.type = this.schema.format;\n                input.value = val;\n                input.minLength = (_u = (_t = this.schema) === null || _t === void 0 ? void 0 : _t.minLength) !== null && _u !== void 0 ? _u : 0;\n                input.maxLength = (_w = (_v = this.schema) === null || _v === void 0 ? void 0 : _v.maxLength) !== null && _w !== void 0 ? _w : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n        }\n        else if (type === \"null\") {\n            this.element.append(\"null\");\n        }\n        else if (type === \"number\") {\n            const input = document.createElement(\"input\");\n            input.type = \"number\";\n            input.value = val.toString();\n            input.min = (_z = (_y = (_x = this.schema) === null || _x === void 0 ? void 0 : _x.minimum) === null || _y === void 0 ? void 0 : _y.toString()) !== null && _z !== void 0 ? _z : \"\";\n            input.max = (_2 = (_1 = (_0 = this.schema) === null || _0 === void 0 ? void 0 : _0.maximum) === null || _1 === void 0 ? void 0 : _1.toString()) !== null && _2 !== void 0 ? _2 : \"\";\n            if (JsonElement.isInteger(this.schema))\n                input.step = \"1\";\n            input.onchange = () => {\n                this.setCurrentTypeValue(parseFloat(input.value));\n            };\n            this.element.append(input);\n        }\n        else {\n            this.element.append(`[${type}] : ${val}`);\n        }\n        if (this.onUpdate)\n            this.onUpdate();\n    }\n    createLineNumber(overrideMargin = false) {\n        const lineNumber = document.createElement(\"div\");\n        lineNumber.classList.add(\"line-number\");\n        if (overrideMargin)\n            lineNumber.style.marginTop = \"0\";\n        return lineNumber;\n    }\n    createBlock() {\n        const block = document.createElement(\"div\");\n        block.classList.add(\"json-tool-block\");\n        block.style.paddingLeft = \"25px\";\n        block.style.borderLeft = \"1px dashed black\";\n        block.style.marginLeft = \"3px\";\n        let opened = false;\n        const collapse = document.createElement(\"div\");\n        block.append(collapse);\n        collapse.classList.add(\"json-tool-btn\");\n        const toggle = () => {\n            opened = !opened;\n            collapse.innerText = opened ? \"ᐯ\" : \"ᐳ\";\n            block.classList.remove(\"opened\", \"closed\");\n            block.classList.add(opened ? \"opened\" : \"closed\");\n        };\n        collapse.onclick = toggle;\n        toggle();\n        return block;\n    }\n    createObjectKeyValuePair(key, schema, value, noValue = false) {\n        var _a;\n        const parent = document.createElement(\"div\");\n        const originalKey = key;\n        if (typeof key === \"number\") {\n            key = (schema === null || schema === void 0 ? void 0 : schema.title) ? `${schema.title} ${key}` : key;\n        }\n        else {\n            key = (_a = schema === null || schema === void 0 ? void 0 : schema.title) !== null && _a !== void 0 ? _a : key;\n        }\n        const title = document.createElement(\"span\");\n        title.innerText = key.toString();\n        JsonElement.addDescription(title, schema === null || schema === void 0 ? void 0 : schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n        parent.append(title);\n        parent.classList.add(\"json-tool-key\");\n        parent.append(\": \");\n        if (!noValue) {\n            const valueElement = document.createElement(\"div\");\n            const element = new JsonElement(valueElement, schema, value, () => this.onUpdate && this.onUpdate(), () => this.validate && this.validate());\n            if (this.currentType === \"array\")\n                this.arrayElements.push(element);\n            else if (this.currentType === \"object\")\n                this.objectElements[originalKey] = element;\n            parent.append(valueElement);\n        }\n        return parent;\n    }\n    changeType(type) {\n        var _a;\n        this.currentType = type;\n        if (!this.currentValues.hasOwnProperty(type)) {\n            if (typeof ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.default) !== \"undefined\" && JsonElement.getType(this.schema.default) === type)\n                this.setCurrentTypeValue(this.schema.default);\n            else\n                this.setCurrentTypeValue(JsonElement.getDefaultValueForType(this.schema, type));\n        }\n        this.updateElement();\n    }\n    setStyle() {\n        this.element.style.whiteSpace = \"pre\";\n        this.element.classList.add(\"json-tool-value\");\n    }\n    getValue() {\n        var _a;\n        let val;\n        if (this.currentType === \"array\") {\n            val = this.arrayElements.map(e => e.getValue());\n        }\n        else if (this.currentType === \"object\") {\n            const obj = {};\n            for (const key in this.objectElements) {\n                obj[key] = this.objectElements[key].getValue();\n            }\n            val = obj;\n        }\n        else {\n            val = (_a = this.currentValues[this.currentType]) !== null && _a !== void 0 ? _a : JsonElement.getDefaultValueForType(this.schema, this.currentType);\n        }\n        this.currentValues[this.currentType] = val;\n        return val;\n    }\n}\n//# sourceMappingURL=JsonTool.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TschArray = exports.TschObject = exports.TschUnion = exports.TschUndefined = exports.TschNull = exports.TschBoolean = exports.TschNumber = exports.TschString = exports.TschType = void 0;\nclass TschValidationError {\n    constructor(path, message) {\n        this.path = path;\n        this.pathString = TschValidationError.formatPath(path);\n        this.rawMessage = message;\n        this.message = `${this.pathString}: ${message}`;\n    }\n    static formatPath(path) {\n        if (path.length < 1)\n            return \"root\";\n        return path.join(\".\");\n    }\n}\nclass TschType {\n    constructor(type) {\n        this._ts = null; //_ts is only used by Typescript for type inference, and so actually doesn't need to be assigned\n        this._type = type;\n        this._title = null;\n        this._description = null;\n        this._default = null;\n        this._examples = null;\n    }\n    union(other) {\n        return new TschUnion(this, other);\n    }\n    optional() {\n        return new TschUnion(this, new TschUndefined());\n    }\n    nullable() {\n        return new TschUnion(this, new TschNull());\n    }\n    clone() {\n        const clone = this.newInstance();\n        clone._title = this._title;\n        clone._description = this._description;\n        clone._default = this._default;\n        clone._examples = this._examples ? [...this._examples] : null;\n        return clone;\n    }\n    title(title) {\n        const clone = this.clone();\n        clone._title = title;\n        return clone;\n    }\n    description(descriptin) {\n        const clone = this.clone();\n        clone._description = descriptin;\n        return clone;\n    }\n    default(defaultValue) {\n        const clone = this.clone();\n        clone._default = defaultValue;\n        return clone;\n    }\n    examples(examples) {\n        const clone = this.clone();\n        clone._examples = [...examples];\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = {\n            \"type\": this._type\n        };\n        if (this._title)\n            schema.title = this._title;\n        if (this._description)\n            schema.description = this._description;\n        if (this._default)\n            schema.default = this._default;\n        if (this._examples)\n            schema.examples = this._examples;\n        return schema;\n    }\n    validate(input) {\n        const errors = [];\n        this.validateInternal([], input, errors);\n        return { valid: errors.length == 0, errors };\n    }\n    validateInternal(path, input, errors) {\n        if (!this.isCorrectType(input)) {\n            errors.push(new TschValidationError(path, `Value has to be of type ${this.getTypeName()}`));\n            return;\n        }\n        this.validateCorrectType(path, input, errors);\n    }\n    isOptional() { return false; }\n    isNullable() { return false; }\n}\nexports.TschType = TschType;\nclass TschString extends TschType {\n    constructor() {\n        super(\"string\");\n        this._format = null;\n        this._enum = null;\n        this._minLength = null;\n        this._maxLength = null;\n    }\n    newInstance() {\n        return new TschString();\n    }\n    clone() {\n        const clone = super.clone();\n        clone._format = this._format;\n        clone._enum = this._enum;\n        clone._minLength = this._minLength;\n        clone._maxLength = this._maxLength;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        if (this._format)\n            schema.format = this._format;\n        if (this._enum)\n            schema.enum = this._enum;\n        if (this._minLength)\n            schema.minLength = this._minLength;\n        if (this._maxLength)\n            schema.maxLength = this._maxLength;\n        return schema;\n    }\n    minLength(min) {\n        const clone = this.clone();\n        clone._minLength = min;\n        return clone;\n    }\n    maxLength(max) {\n        const clone = this.clone();\n        clone._maxLength = max;\n        return clone;\n    }\n    enumeration(enumeration) {\n        const clone = this.clone();\n        clone._enum = [...enumeration];\n        return clone;\n    }\n    format(format) {\n        const clone = this.clone();\n        clone._format = format;\n        return clone;\n    }\n    color() {\n        return this.format(\"color\");\n    }\n    date() {\n        return this.format(\"date\");\n    }\n    email() {\n        return this.format(\"email\");\n    }\n    password() {\n        return this.format(\"password\");\n    }\n    textarea() {\n        return this.format(\"textarea\");\n    }\n    url() {\n        return this.format(\"url\");\n    }\n    isCorrectType(input) {\n        return typeof input === \"string\";\n    }\n    getTypeName() { return \"string\"; }\n    validateCorrectType(path, input, errors) {\n        if (!!this._enum && !this._enum.includes(input)) {\n            errors.push(new TschValidationError(path, `Value has to be one of the following: ${this._enum.join(\", \")}`));\n        }\n        if (typeof this._minLength === \"number\" && input.length < this._minLength) {\n            errors.push(new TschValidationError(path, `Value must be longer than ${this._minLength} characters.`));\n        }\n        if (typeof this._maxLength === \"number\" && input.length > this._maxLength) {\n            errors.push(new TschValidationError(path, `Value must be shorter than ${this._maxLength} characters.`));\n        }\n        if (this._format === \"color\" && !/^#?[0-9a-f]{3,6}$/i.test(input)) {\n            errors.push(new TschValidationError(path, `Value must be a color hex code.`));\n        }\n        if (this._format === \"date\" && Number.isNaN(Date.parse(input))) {\n            errors.push(new TschValidationError(path, `Value must be a date.`));\n        }\n        if (this._format === \"email\" && !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(input)) {\n            errors.push(new TschValidationError(path, `Value must be an email.`));\n        }\n        if (this._format === \"url\" && !/^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/.test(input)) {\n            errors.push(new TschValidationError(path, `Value must be a URL.`));\n        }\n    }\n}\nexports.TschString = TschString;\nclass TschNumber extends TschType {\n    constructor() {\n        super(\"number\");\n        this._integer = false;\n        this._min = null;\n        this._max = null;\n    }\n    newInstance() {\n        return new TschNumber();\n    }\n    clone() {\n        const clone = super.clone();\n        clone._integer = this._integer;\n        clone._min = this._min;\n        clone._max = this._max;\n        return clone;\n    }\n    integer() {\n        const clone = this.clone();\n        clone._integer = true;\n        return clone;\n    }\n    min(min) {\n        const clone = this.clone();\n        clone._min = min;\n        return clone;\n    }\n    max(max) {\n        const clone = this.clone();\n        clone._max = max;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        if (this._integer)\n            schema.type = \"integer\";\n        if (this._min !== null)\n            schema.minimum = this._min;\n        if (this._max !== null)\n            schema.maximum = this._max;\n        return schema;\n    }\n    isCorrectType(input) {\n        return typeof input === \"number\";\n    }\n    getTypeName() { return \"number\"; }\n    validateCorrectType(path, input, errors) {\n        if (this._integer && !Number.isInteger(input)) {\n            errors.push(new TschValidationError(path, `Value has to be an integer.`));\n        }\n        if (typeof this._min === \"number\" && input < this._min) {\n            errors.push(new TschValidationError(path, `Value must be at least ${this._min}.`));\n        }\n        if (typeof this._max === \"number\" && input > this._max) {\n            errors.push(new TschValidationError(path, `Value must be at less than ${this._max}.`));\n        }\n    }\n}\nexports.TschNumber = TschNumber;\nclass TschBoolean extends TschType {\n    constructor() {\n        super(\"boolean\");\n    }\n    newInstance() {\n        return new TschBoolean();\n    }\n    clone() {\n        const clone = super.clone();\n        return clone;\n    }\n    isCorrectType(input) {\n        return typeof input === \"boolean\";\n    }\n    getTypeName() { return \"boolean\"; }\n    validateCorrectType(path, input, errors) {\n    }\n}\nexports.TschBoolean = TschBoolean;\nclass TschNull extends TschType {\n    constructor() {\n        super(\"null\");\n    }\n    newInstance() {\n        return new TschNull();\n    }\n    clone() {\n        const clone = super.clone();\n        return clone;\n    }\n    isCorrectType(input) {\n        return input === null;\n    }\n    getTypeName() { return \"null\"; }\n    validateCorrectType(path, input, errors) {\n    }\n}\nexports.TschNull = TschNull;\nclass TschUndefined extends TschType {\n    constructor() {\n        super(\"undefined\");\n    }\n    newInstance() {\n        return new TschUndefined();\n    }\n    clone() {\n        const clone = super.clone();\n        return clone;\n    }\n    isCorrectType(input) {\n        return typeof input === \"undefined\";\n    }\n    getTypeName() { return \"undefined\"; }\n    validateCorrectType(path, input, errors) {\n    }\n}\nexports.TschUndefined = TschUndefined;\nclass TschUnion extends TschType {\n    constructor(type1, type2) {\n        super(`union_${type1._type}_${type2._type}`);\n        this.type1 = type1;\n        this.type2 = type2;\n    }\n    Type1Internal() { return this.type1; }\n    Type2Internal() { return this.type2; }\n    newInstance() {\n        return new TschUnion(this.type1.clone(), this.type2.clone());\n    }\n    clone() {\n        const clone = super.clone();\n        clone.type1 = this.Type1Internal().clone();\n        clone.type2 = this.Type2Internal().clone();\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        var _a, _b, _c, _d;\n        const schema1 = this.Type1Internal()._type === \"undefined\" ? {} : this.type1.getJsonSchemaProperty();\n        const schema2 = this.Type2Internal()._type === \"undefined\" ? {} : this.type2.getJsonSchemaProperty();\n        const combined = Object.assign(Object.assign({}, schema1), schema2);\n        combined.type = [...(Array.isArray(schema1.type) ? schema1.type : [schema1.type]), ...(Array.isArray(schema2.type) ? schema2.type : [schema2.type])].filter(t => !!t && t !== \"undefined\");\n        if (combined.type.length < 2)\n            combined.type = combined.type[0];\n        if (schema1.properties && schema2.properties) {\n            combined.properties = Object.assign(Object.assign({}, ((_a = schema1.properties) !== null && _a !== void 0 ? _a : {})), ((_b = schema2.properties) !== null && _b !== void 0 ? _b : {}));\n            if (!!schema1.required && !!schema2.required)\n                combined.required = schema1.required.filter((f) => { var _a; return (_a = schema2.required) === null || _a === void 0 ? void 0 : _a.includes(f); });\n            else\n                combined.required = (_d = (_c = schema1.required) !== null && _c !== void 0 ? _c : schema2.required) !== null && _d !== void 0 ? _d : [];\n        }\n        if (this._title)\n            combined.title = this._title;\n        if (this._description)\n            combined.description = this._description;\n        if (this._default)\n            combined.default = this._default;\n        return combined;\n    }\n    isNullable() {\n        return this.Type1Internal()._type === \"null\" || this.Type2Internal()._type === \"null\" || this.Type1Internal().isNullable() || this.Type2Internal().isNullable();\n    }\n    isOptional() {\n        return this.Type1Internal()._type === \"undefined\" || this.Type2Internal()._type === \"undefined\" || this.Type1Internal().isOptional() || this.Type2Internal().isOptional();\n    }\n    isCorrectType(input) {\n        return this.Type1Internal().isCorrectType(input) || this.Type2Internal().isCorrectType(input);\n    }\n    getTypeName() { return `${this.type1.getTypeName()} or ${this.type2.getTypeName()}`; }\n    validateCorrectType(path, input, errors) {\n        if (this.Type1Internal().isCorrectType(input)) {\n            this.Type1Internal().validateInternal(path, input, errors);\n        }\n        if (this.Type2Internal().isCorrectType(input)) {\n            this.Type2Internal().validateInternal(path, input, errors);\n        }\n    }\n}\nexports.TschUnion = TschUnion;\nclass TschObject extends TschType {\n    constructor(shape) {\n        super(\"object\");\n        this.shape = shape;\n    }\n    newInstance() {\n        return new TschObject(this.shape);\n    }\n    clone() {\n        const clone = super.clone();\n        clone.shape = this.shape;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        schema.required = Object.keys(this.shape).filter(k => !this.shape[k].isOptional());\n        schema.properties = {};\n        for (const key in this.shape) {\n            schema.properties[key] = this.shape[key].getJsonSchemaProperty();\n        }\n        return schema;\n    }\n    isCorrectType(input) {\n        return typeof input === \"object\" && input !== null && !Array.isArray(input);\n    }\n    getTypeName() {\n        return \"object\";\n    }\n    validateCorrectType(path, input, errors) {\n        for (const key in this.shape) {\n            const child = this.shape[key];\n            const childInternal = child;\n            if (!childInternal.isOptional() && !input.hasOwnProperty(key)) {\n                errors.push(new TschValidationError(path, `Property ${key} of type ${childInternal.getTypeName()} is required.`));\n            }\n            if (input.hasOwnProperty(key)) {\n                childInternal.validateInternal([...path, key], input[key], errors);\n            }\n        }\n    }\n}\nexports.TschObject = TschObject;\nclass TschArray extends TschType {\n    constructor(elementType) {\n        super(\"array\");\n        this.elementType = elementType;\n        this._format = null;\n        this._minElementCount = null;\n        this._maxElementCount = null;\n        this._unique = false;\n    }\n    newInstance() {\n        return new TschArray(this.elementType);\n    }\n    clone() {\n        const clone = super.clone();\n        clone.elementType = this.elementType;\n        clone._format = this._format;\n        clone._unique = this._unique;\n        clone._minElementCount = this._minElementCount;\n        clone._maxElementCount = this._maxElementCount;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        schema.items = this.elementType.getJsonSchemaProperty();\n        if (this._format)\n            schema.format = this._format;\n        if (this._unique)\n            schema.uniqueItems = this._unique;\n        if (this._minElementCount)\n            schema.minItems = this._minElementCount;\n        if (this._maxElementCount)\n            schema.maxItems = this._maxElementCount;\n        return schema;\n    }\n    table() {\n        const clone = this.clone();\n        clone._format = \"table\";\n        return clone;\n    }\n    minElements(count) {\n        const clone = this.clone();\n        clone._minElementCount = count;\n        return clone;\n    }\n    maxElements(count) {\n        const clone = this.clone();\n        clone._maxElementCount = count;\n        return clone;\n    }\n    unique() {\n        const clone = this.clone();\n        clone._unique = true;\n        return clone;\n    }\n    isCorrectType(input) {\n        return typeof input === \"object\" && input !== null && Array.isArray(input);\n    }\n    getTypeName() {\n        return `array of ${this.elementType.getTypeName()}`;\n    }\n    validateCorrectType(path, input, errors) {\n        const elementTypeInternal = this.elementType;\n        const used = new Set();\n        if (typeof this._minElementCount === \"number\" && input.length < this._minElementCount) {\n            errors.push(new TschValidationError(path, `Array must contain at least ${this._minElementCount} elements.`));\n        }\n        if (typeof this._maxElementCount === \"number\" && input.length > this._maxElementCount) {\n            errors.push(new TschValidationError(path, `Array must contain at most ${this._maxElementCount} elements.`));\n        }\n        for (let i = 0; i < input.length; i++) {\n            const element = input[i];\n            elementTypeInternal.validateInternal([...path, i.toString()], element, errors);\n            if (this._unique) {\n                const json = JSON.stringify(element);\n                if (used.has(json)) {\n                    errors.push(new TschValidationError(path, \"All values have to be unique.\"));\n                }\n                used.add(json);\n            }\n        }\n    }\n}\nexports.TschArray = TschArray;\n//# sourceMappingURL=TschType.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tsch = void 0;\nconst tsch = __importStar(require(\"./tsch\"));\nexports.tsch = tsch;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.array = exports.object = exports.boolean = exports.number = exports.string = void 0;\nconst TschType_1 = require(\"./TschType\");\nfunction string() { return new TschType_1.TschString(); }\nexports.string = string;\nfunction number() { return new TschType_1.TschNumber(); }\nexports.number = number;\nfunction boolean() { return new TschType_1.TschBoolean(); }\nexports.boolean = boolean;\nfunction object(shape) {\n    return new TschType_1.TschObject(shape);\n}\nexports.object = object;\nfunction array(elementType) {\n    return new TschType_1.TschArray(elementType);\n}\nexports.array = array;\n//# sourceMappingURL=tsch.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tsch_1 = require(\"tsch\");\nconst JsonTool_1 = require(\"./JsonTool\");\nconst person = tsch_1.tsch.object({\n    name: tsch_1.tsch.string().description(\"First and Last Name\").minLength(4).maxLength(6).default(\"Jeremy Dorn\").nullable(),\n    age: tsch_1.tsch.number().integer().default(25).min(18).max(99).optional().title(\"Age\").union(tsch_1.tsch.string()),\n    favorite_color: tsch_1.tsch.string().color().title(\"favorite color\").default(\"#ffa500\").examples([\"#ff0000\", \"#00ff00\"]),\n    gender: tsch_1.tsch.string().enumeration([\"male\", \"female\", \"other\"]),\n    date: tsch_1.tsch.string().date(),\n    alive: tsch_1.tsch.boolean().default(true).nullable().title(\"Alive\").description(\"If checked, this person is still alive\"),\n    description: tsch_1.tsch.string().textarea(),\n    password: tsch_1.tsch.string().password(),\n    website: tsch_1.tsch.string().url(),\n    email: tsch_1.tsch.string().email(),\n    location: tsch_1.tsch.object({\n        city: tsch_1.tsch.string().default(\"San Francisco\"),\n        state: tsch_1.tsch.string().default(\"CA\")\n    }).title(\"Location\"),\n    pets: tsch_1.tsch.array(tsch_1.tsch.object({\n        type: tsch_1.tsch.string().enumeration([\"cat\", \"dog\", \"bird\", \"reptile\", \"other\"]).default(\"dog\"),\n        name: tsch_1.tsch.string()\n    }).title(\"Pet\")).unique().table().default([{ type: \"dog\", name: \"Walter\" }])\n}).title(\"Person\");\nconst personJsonSchema = person.getJsonSchemaProperty();\nconst rootElement = document.querySelector(\"#root\");\nif (rootElement) {\n    const tool = new JsonTool_1.JsonTool(rootElement);\n    tool.load(personJsonSchema, { test: 123 }, v => person.validate(v));\n    window.getValue = () => tool.getValue();\n}\n//# sourceMappingURL=www.js.map"],"names":["Object","defineProperty","exports","value","JsonTool","constructor","element","validator","_a","_b","this","valid","schema","root","document","createElement","style","fontFamily","marginLeft","classList","add","rootObject","rootElement","errorMessages","iframe","width","height","overflow","border","appendChild","iframeBody","contentDocument","contentWindow","querySelector","append","createCss","onload","load","innerHTML","title","textContent","JsonElement","addDescription","description","examples","onUpdate","validate","setValidator","getValue","number","querySelectorAll","forEach","e","innerText","toString","window","setTimeout","errors","map","message","join","parent","arrayElements","objectElements","setStyle","currentValues","types","getDefaultAvailableTypes","actualType","getType","currentType","push","setCurrentTypeValue","def","getDefaultValue","type","Set","updateElement","JSON","parse","stringify","undefined","static","textDecoration","cursor","Array","isArray","arr","includes","t","availableTypes","default","length","getDefaultValueForType","_c","isInteger","Math","ceil","minimum","enum","format","Date","toDateString","obj","properties","required","hasOwnProperty","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","_1","_2","display","remove","createLineNumber","val","select","option","onchange","changeType","object","createBlock","key","createObjectKeyValuePair","buttons","prepend","onclick","array","maxItems","items","defaultValue","i","idx","minItems","splice","up","slice","concat","down","checkbox","checked","input","minLength","maxLength","valueAsDate","min","max","maximum","step","parseFloat","overrideMargin","lineNumber","marginTop","block","paddingLeft","borderLeft","opened","collapse","toggle","noValue","originalKey","valueElement","whiteSpace","TschArray","TschObject","TschUnion","TschUndefined","TschNull","TschBoolean","TschNumber","TschString","TschType","TschValidationError","path","pathString","formatPath","rawMessage","_ts","_type","_title","_description","_default","_examples","union","other","optional","nullable","clone","newInstance","descriptin","getJsonSchemaProperty","validateInternal","isCorrectType","validateCorrectType","getTypeName","isOptional","isNullable","super","_format","_enum","_minLength","_maxLength","enumeration","color","date","email","password","textarea","url","test","Number","isNaN","_integer","_min","_max","integer","type1","type2","Type1Internal","Type2Internal","schema1","schema2","combined","assign","filter","f","shape","keys","k","childInternal","elementType","_minElementCount","_maxElementCount","_unique","uniqueItems","table","minElements","count","maxElements","unique","elementTypeInternal","used","json","has","__createBinding","create","o","m","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","result","prototype","call","tsch","boolean","string","TschType_1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","tsch_1","JsonTool_1","person","name","age","favorite_color","gender","alive","website","location","city","state","pets","personJsonSchema","tool"],"sourceRoot":""}