{"version":3,"file":"www/js/main.js","mappings":"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","sources":["webpack://@wanieru/json-tool/./js/JsonTool.js","webpack://@wanieru/json-tool/./node_modules/tsch/dist/TschType.js","webpack://@wanieru/json-tool/./node_modules/tsch/dist/index.js","webpack://@wanieru/json-tool/./node_modules/tsch/dist/tsch.js","webpack://@wanieru/json-tool/webpack/bootstrap","webpack://@wanieru/json-tool/./js/www.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonTool = void 0;\nclass JsonTool {\n    constructor(element, validator = null) {\n        var _a, _b;\n        this.elementState = {};\n        this.undoStack = [];\n        this.redoStack = [];\n        this.undoing = false;\n        this.loadState();\n        this.containerElement = element;\n        this.validator = validator !== null && validator !== void 0 ? validator : (() => { return { valid: true }; });\n        this.schema = null;\n        this.root = document.createElement(\"div\");\n        this.root.style.fontFamily = \"monospace\";\n        this.root.style.marginLeft = \"30px\";\n        this.root.classList.add(\"json-tool\");\n        this.rootObject = null;\n        this.rootElement = null;\n        this.errorMessages = document.createElement(\"div\");\n        this.errorMessages.classList.add(\"json-tool-errors\");\n        const controlButtons = document.createElement(\"div\");\n        this.undoButton = document.createElement(\"button\");\n        this.undoButton.innerText = \"⤶ Undo\";\n        this.undoButton.onclick = () => this.undo();\n        controlButtons.appendChild(this.undoButton);\n        this.redoButton = document.createElement(\"button\");\n        this.redoButton.innerText = \"⤷ Redo\";\n        this.redoButton.style.marginLeft = \"5px\";\n        this.redoButton.onclick = () => this.redo();\n        controlButtons.appendChild(this.redoButton);\n        const collapseExpandAll = document.createElement(\"button\");\n        let collapse = true;\n        collapseExpandAll.innerText = \"Collapse all\";\n        collapseExpandAll.onclick = () => {\n            var _a, _b;\n            ((_b = (_a = this.rootObject) === null || _a === void 0 ? void 0 : _a.querySelectorAll(`.json-tool-block.${collapse ? \"opened\" : \"closed\"} .json-tool-btn.collapse`)) !== null && _b !== void 0 ? _b : []).forEach(e => e.click());\n            collapse = !collapse;\n            collapseExpandAll.innerText = collapse ? \"Collapse all\" : \"Expand all\";\n        };\n        collapseExpandAll.style.marginLeft = \"5px\";\n        controlButtons.appendChild(collapseExpandAll);\n        const iframe = document.createElement(\"iframe\");\n        iframe.style.width = \"100%\";\n        iframe.style.height = \"100%\";\n        iframe.style.overflow = \"scroll\";\n        iframe.style.border = \"0\";\n        element.innerHTML = \"\";\n        element.appendChild(iframe);\n        this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n        this.iframeBody.append(this.root);\n        this.createCss(this.iframeBody);\n        iframe.onload = () => {\n            var _a, _b;\n            this.iframeBody = (_b = (iframe.contentDocument || ((_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document))) === null || _b === void 0 ? void 0 : _b.querySelector(\"body\");\n            this.iframeBody.append(controlButtons);\n            this.iframeBody.append(this.root);\n            this.createCss(this.iframeBody);\n            this.iframeBody.appendChild(this.errorMessages);\n        };\n    }\n    deleteChild(key) {\n    }\n    getState() {\n        return this.elementState;\n    }\n    saveState() {\n        if (!(window === null || window === void 0 ? void 0 : window.localStorage))\n            return;\n        window.localStorage.setItem(`saved_json_tool_state`, JSON.stringify(this.elementState));\n    }\n    loadState() {\n        var _a;\n        if (!(window === null || window === void 0 ? void 0 : window.localStorage))\n            return;\n        this.elementState = JSON.parse((_a = window.localStorage.getItem(`saved_json_tool_state`)) !== null && _a !== void 0 ? _a : \"{}\");\n    }\n    load(schema, value, validator) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validator = validator !== null && validator !== void 0 ? validator : this.validator;\n            this.schema = schema;\n            this.root.innerHTML = \"\";\n            if (schema.title) {\n                const title = document.createElement(\"h3\");\n                title.textContent = schema.title;\n                JsonElement.addDescription(title, schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n                this.root.appendChild(title);\n            }\n            this.rootObject = document.createElement(\"div\");\n            this.root.appendChild(this.rootObject);\n            this.rootElement = new JsonElement(\"\", \"root\", this.rootObject, this.schema, value, this);\n            yield this.validate();\n        });\n    }\n    hide() {\n        this.containerElement.innerHTML = \"\";\n    }\n    setValidator(validator) {\n        this.validator = validator;\n    }\n    getValue() {\n        var _a;\n        return (_a = this.rootElement) === null || _a === void 0 ? void 0 : _a.getValue();\n    }\n    update() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.rootObject)\n                return;\n            let number = 1;\n            (_a = this.rootObject) === null || _a === void 0 ? void 0 : _a.querySelectorAll(\".line-number\").forEach(e => {\n                e.innerText = number.toString();\n                number++;\n            });\n            yield this.validate();\n        });\n    }\n    validate() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield new Promise(resolve => window.setTimeout(resolve, 1));\n            if (!this.schema || !this.errorMessages)\n                return;\n            const valid = this.validator(this.getValue(), this.schema);\n            this.errorMessages.innerHTML = \"\";\n            if (!valid.valid) {\n                this.errorMessages.innerHTML = ((_a = valid.errors) !== null && _a !== void 0 ? _a : []).map(e => typeof e === \"string\" ? e : e.message).join(\"\\n\");\n            }\n            yield this.pushUndoState();\n        });\n    }\n    pushUndoState() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.undoing)\n                return;\n            this.undoing = true;\n            yield new Promise(resolve => window.setTimeout(resolve, 1));\n            const value = this.getValue();\n            if (this.undoStack.length > 0 && JSON.stringify(value) === JSON.stringify(this.undoStack[0])) {\n                this.undoing = false;\n                return;\n            }\n            this.undoStack.unshift(value);\n            this.redoStack = [];\n            this.undoing = false;\n            this.updateUndoRedoButtons();\n        });\n    }\n    undo() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.undoStack.length < 2 || this.undoing || !this.schema)\n                return;\n            this.undoing = true;\n            this.redoStack.unshift(this.getValue());\n            this.undoStack.splice(0, 1);\n            const value = this.undoStack[0];\n            yield this.load(this.schema, value, this.validator);\n            this.undoing = false;\n            this.updateUndoRedoButtons();\n        });\n    }\n    redo() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.redoStack.length < 1 || this.undoing || !this.schema)\n                return;\n            this.undoing = true;\n            const value = this.redoStack.splice(0, 1)[0];\n            this.undoStack.unshift(value);\n            yield this.load(this.schema, value, this.validator);\n            this.undoing = false;\n            this.updateUndoRedoButtons();\n        });\n    }\n    updateUndoRedoButtons() {\n        this.undoButton.disabled = this.undoStack.length < 2;\n        this.redoButton.disabled = this.redoStack.length < 1;\n    }\n    createCss(parent) {\n        const style = document.createElement(\"style\");\n        parent.appendChild(style);\n        style.innerHTML =\n            `\n            .json-tool-btn\n             {\n                border: 1px black solid;\n                cursor: pointer;\n                display: block;\n             }\n              .json-tool-block > .json-tool-btn {\n                margin-top: -17px;\n                margin-left: -40px;\n                position: absolute;\n                opacity: 0;\n              }\n              .json-tool-block:hover > .json-tool-btn\n              {\n                opacity: 1;\n              }\n              .json-tool-value > .json-tool-btn {\n                margin-left: 10px;\n                display: inline-block;\n                position: absolute;\n                opacity :0;\n              }\n              .json-tool-value:hover > .json-tool-btn\n              {\n                opacity :1;\n              }\n              .json-tool-key > .json-tool-btns {\n                margin-left: -36px;\n                display: inline-block;\n                position: absolute;\n                width: 32px;\n                text-align: right;\n                opacity: 0;\n              }\n              .json-tool-key:hover > .json-tool-btns\n              {\n                opacity: 1;\n              }\n\n              .json-tool-key > .json-tool-btns > .json-tool-btn {\n                display: inline-block;\n                margin-right: 2px;\n              }\n              .json-tool-types > .json-tool-type\n              {\n                padding:0;\n                margin:0;\n                border:0;\n              }\n              .json-tool-value > .json-tool-types\n              {\n                float:right;\n                opacity: 0;\n              }\n              .json-tool-value.json-tool-object > .json-tool-types\n              {\n                float:none;\n                position: absolute;\n                margin-left: 15px;\n              }\n              .json-tool-value:hover > .json-tool-types\n              {\n                opacity: 1;\n              }\n\n              .json-tool-block.opened > .json-tool-key {display: block}\n              .json-tool-block.closed > .json-tool-key {display: none}\n\n              .line-number\n              {\n                position: absolute;\n                left: 0;\n                text-align: right;\n                width: 20px;\n              }\n              .json-tool-value.json-tool-object > .line-number\n              {\n                margin-top: -15px;\n              }\n              .json-tool input, .json-tool select, .json-tool textarea\n              {\n                border: 0;\n                background-color: #ece9e9;\n                padding: 0;\n                margin: 1px;\n              }\n\n                .json-tool-errors {\n                    color: red;\n                    white-space: pre;\n                    font-family: monospace;\n                    line-height: 2em;\n                    font-weight: bold;\n                    font-size: 1.2em;\n                }\n`;\n    }\n}\nexports.JsonTool = JsonTool;\nclass JsonElement {\n    constructor(key, path, element, schema, value, parent) {\n        this.arrayElements = [];\n        this.objectElements = {};\n        this.element = element;\n        this.setStyle();\n        this.schema = schema;\n        this.parent = parent;\n        this.key = key;\n        this.path = path;\n        this.currentValues = {};\n        this.types = schema ? JsonElement.getDefaultAvailableTypes(schema) : [];\n        const actualType = JsonElement.getType(value);\n        this.currentType = \"\";\n        if (actualType !== \"undefined\") {\n            this.currentType = actualType;\n            this.types.push(actualType);\n            this.setCurrentTypeValue(value);\n        }\n        else if (this.schema) {\n            const def = JsonElement.getDefaultValue(this.schema);\n            this.currentType = def.type;\n            this.setCurrentTypeValue(def.value);\n        }\n        this.types = [...new Set(this.types)];\n        this.updateElement();\n    }\n    update() {\n        this.parent.update();\n    }\n    validate() {\n        this.parent.validate();\n    }\n    getPath(element) {\n        for (let i = 0; i < this.arrayElements.length; i++) {\n            if (this.arrayElements[i] === element)\n                return `${this.path}.${i}`;\n        }\n        for (const key in this.objectElements) {\n            if (this.objectElements[key] === element)\n                return `${this.path}.${key}`;\n        }\n        return `${this.path}.?`;\n    }\n    getState() {\n        return this.parent.getState();\n    }\n    saveState() {\n        this.parent.saveState();\n    }\n    deleteChild(key) {\n        if (typeof key === \"string\") {\n            const val = this.getValue();\n            delete val[key];\n            this.setCurrentTypeValue(val);\n            this.updateElement();\n        }\n        else if (typeof key === \"number\") {\n            const arr = [...this.getValue()];\n            arr.splice(key, 1);\n            this.setCurrentTypeValue(arr);\n            this.updateElement();\n        }\n    }\n    setCurrentTypeValue(value) {\n        this.currentValues[this.currentType] = typeof value !== \"undefined\" ? JSON.parse(JSON.stringify(value)) : undefined;\n        if (this.validate)\n            this.validate();\n    }\n    static addDescription(element, description, examples) {\n        if (examples) {\n            description = `${description ? `${description}\\n` : \"\"}Examples:\\n${examples.map(e => JSON.stringify(e)).join(\",\\n\")}`;\n        }\n        if (description) {\n            element.title = description;\n            element.style.textDecoration = \"underline dotted\";\n            element.style.cursor = \"help\";\n        }\n    }\n    static getType(value) {\n        if (typeof value === \"undefined\")\n            return \"undefined\";\n        if (Array.isArray(value)) {\n            return \"array\";\n        }\n        else if (value === null) {\n            return \"null\";\n        }\n        else {\n            return typeof value;\n        }\n    }\n    static isInteger(schema) {\n        if (!schema)\n            return false;\n        const arr = Array.isArray(schema.type) ? schema.type : [schema.type];\n        return arr.includes(\"integer\") && !arr.includes(\"number\");\n    }\n    static getDefaultAvailableTypes(schema) {\n        let types = Array.isArray(schema.type) ? [...schema.type] : [schema.type];\n        types = types.map(t => {\n            if (t === \"integer\")\n                return \"number\";\n            return t;\n        });\n        return types;\n    }\n    static getDefaultValue(schema) {\n        const availableTypes = this.getDefaultAvailableTypes(schema);\n        if (typeof schema.default !== \"undefined\") {\n            return { type: this.getType(schema.default), value: schema.default };\n        }\n        else if (schema.examples && schema.examples.length > 0) {\n            return { type: this.getType(schema.examples[0]), value: schema.examples[0] };\n        }\n        else if (availableTypes.length > 0) {\n            return { type: availableTypes[0], value: this.getDefaultValueForType(schema, availableTypes[0]) };\n        }\n        else {\n            return { type: \"null\", value: this.getDefaultValueForType(schema, \"null\") };\n        }\n    }\n    static getDefaultValueForType(schema, type) {\n        var _a, _b, _c;\n        if (type === \"json\") {\n            return null;\n        }\n        else if (type === \"null\") {\n            return null;\n        }\n        else if (type === \"number\") {\n            return this.isInteger(schema) ? Math.ceil((_a = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _a !== void 0 ? _a : 0) : (_b = schema === null || schema === void 0 ? void 0 : schema.minimum) !== null && _b !== void 0 ? _b : 0;\n        }\n        else if (type === \"string\") {\n            if (schema === null || schema === void 0 ? void 0 : schema.enum)\n                return schema.enum[0];\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"color\")\n                return \"#000000\";\n            if ((schema === null || schema === void 0 ? void 0 : schema.format) === \"date\")\n                return new Date().toDateString();\n            return \"\";\n        }\n        else if (type === \"boolean\") {\n            return false;\n        }\n        else if (type === \"array\") {\n            return [];\n        }\n        else if (type === \"object\") {\n            const obj = {};\n            if (schema === null || schema === void 0 ? void 0 : schema.properties) {\n                for (const required of (_c = schema.required) !== null && _c !== void 0 ? _c : []) {\n                    if (!schema.properties.hasOwnProperty(required))\n                        continue;\n                    const def = this.getDefaultValue(schema.properties[required]);\n                    obj[required] = def.value;\n                }\n            }\n            return obj;\n        }\n    }\n    updateElement() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6;\n        this.objectElements = {};\n        this.arrayElements = [];\n        this.element.innerHTML = \"\";\n        this.element.style.display = \"inline-block\";\n        this.element.classList.remove(\"json-tool-object\");\n        if (this.path !== \"root\")\n            this.element.append(this.createLineNumber());\n        const type = this.currentType;\n        const val = (_a = this.currentValues[type]) !== null && _a !== void 0 ? _a : (this.currentValues[type] = JsonElement.getDefaultValueForType(this.schema, type));\n        const typeDiv = document.createElement(\"div\");\n        typeDiv.classList.add(\"json-tool-types\");\n        this.element.append(typeDiv);\n        if (this.types.length > 1 || type !== this.types[0]) {\n            const select = document.createElement(\"select\");\n            select.classList.add(\"json-tool-type\");\n            for (const t of this.types) {\n                const option = document.createElement(\"option\");\n                option.innerText = t;\n                option.value = t;\n                select.append(option);\n            }\n            select.value = this.currentType;\n            select.onchange = () => {\n                this.changeType(select.value);\n            };\n            typeDiv.append(select);\n        }\n        const changeTypeButton = document.createElement(\"div\");\n        changeTypeButton.classList.add(\"json-tool-btn\");\n        changeTypeButton.style.display = \"inline-block\";\n        changeTypeButton.style.marginLeft = \"5px\";\n        changeTypeButton.innerText = \"*\";\n        changeTypeButton.onclick = () => {\n            var _a;\n            const validTypes = [\"object\", \"array\", \"boolean\", \"string\", \"number\", \"null\", \"undefined\", \"json\"];\n            const newType = (_a = window.prompt(`Enter new type:\\n${validTypes.join(\", \")}`)) !== null && _a !== void 0 ? _a : \"\";\n            if (validTypes.includes(newType)) {\n                if (newType === \"undefined\") {\n                    this.parent.deleteChild(this.key);\n                }\n                else {\n                    this.changeType(newType);\n                }\n            }\n        };\n        typeDiv.append(changeTypeButton);\n        if (type === \"object\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"{\");\n            const object = this.createBlock();\n            this.element.append(object);\n            const add = document.createElement(\"div\");\n            add.classList.add(\"json-tool-btn\");\n            add.innerText = \"+\";\n            this.element.append(add);\n            add.onclick = () => {\n                const key = prompt(\"Add new key?\");\n                if (!!key) {\n                    const val = this.getValue();\n                    val[key] = null;\n                    this.setCurrentTypeValue(val);\n                    this.updateElement();\n                }\n            };\n            this.element.append(\"}\");\n            this.element.append(this.createLineNumber());\n            const keyOrder = [];\n            for (const key in (_c = (_b = this.schema) === null || _b === void 0 ? void 0 : _b.properties) !== null && _c !== void 0 ? _c : {}) {\n                if (val.hasOwnProperty(key))\n                    keyOrder.push(key);\n            }\n            ;\n            for (const key in val !== null && val !== void 0 ? val : {}) {\n                if (!keyOrder.includes(key))\n                    keyOrder.push(key);\n            }\n            ;\n            for (const key of keyOrder) {\n                const obj = this.createObjectKeyValuePair(key, ((_d = this.schema) === null || _d === void 0 ? void 0 : _d.properties) ? this.schema.properties[key] : null, val[key]);\n                object.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                if (((_e = this.schema) === null || _e === void 0 ? void 0 : _e.properties) && !this.schema.properties.hasOwnProperty(key)) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"X\";\n                    remove.onclick = () => {\n                        if (!confirm(`Are you sure you want to delete the key ${key}?`))\n                            return;\n                        this.deleteChild(key);\n                    };\n                    buttons.append(remove);\n                }\n                else if (!((_g = (_f = this.schema) === null || _f === void 0 ? void 0 : _f.required) === null || _g === void 0 ? void 0 : _g.includes(key))) {\n                    const remove = document.createElement(\"div\");\n                    remove.classList.add(\"json-tool-btn\");\n                    remove.innerText = \"∽\";\n                    remove.onclick = () => {\n                        if (!confirm(`Are you sure you want to delete the key ${key}?`))\n                            return;\n                        this.deleteChild(key);\n                    };\n                    buttons.append(remove);\n                }\n            }\n            if ((_h = this.schema) === null || _h === void 0 ? void 0 : _h.properties) {\n                for (const key in this.schema.properties) {\n                    if (val === null || val === void 0 ? void 0 : val.hasOwnProperty(key))\n                        continue;\n                    const obj = this.createObjectKeyValuePair(key, this.schema.properties[key], undefined, true);\n                    object.append(obj);\n                    obj.style.textDecoration = \"line-through 2px\";\n                    const buttons = document.createElement(\"div\");\n                    obj.prepend(buttons);\n                    buttons.classList.add(\"json-tool-btns\");\n                    const add = document.createElement(\"div\");\n                    add.classList.add(\"json-tool-btn\");\n                    add.innerText = \"≁\";\n                    add.onclick = () => {\n                        var _a;\n                        if ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.properties) {\n                            const val = this.getValue();\n                            val[key] = JsonElement.getDefaultValue(this.schema.properties[key]).value;\n                            this.setCurrentTypeValue(val);\n                            this.updateElement();\n                        }\n                    };\n                    buttons.append(add);\n                }\n            }\n        }\n        else if (type === \"array\") {\n            this.element.append(this.createLineNumber(true));\n            this.element.style.display = \"block\";\n            this.element.classList.add(\"json-tool-object\");\n            this.element.append(\"[\");\n            const array = this.createBlock();\n            this.element.append(array);\n            const add = document.createElement(\"div\");\n            add.classList.add(\"json-tool-btn\");\n            add.innerText = \"+\";\n            this.element.append(add);\n            add.onclick = () => {\n                var _a, _b;\n                const val = [...this.getValue()];\n                if (val.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.maxItems) && !confirm(`This array is at max capacity - really add more?`))\n                    return;\n                const defaultValue = ((_b = this.schema) === null || _b === void 0 ? void 0 : _b.items) ? JsonElement.getDefaultValue(this.schema.items).value : null;\n                val.push(defaultValue);\n                this.currentType = type;\n                this.setCurrentTypeValue(val);\n                this.setIsOpened(true);\n                this.updateElement();\n            };\n            this.element.append(\"]\");\n            this.element.append(this.createLineNumber());\n            const arr = val !== null && val !== void 0 ? val : [];\n            for (let i = 0; i < arr.length; i++) {\n                const idx = i;\n                const obj = this.createObjectKeyValuePair(i, ((_j = this.schema) === null || _j === void 0 ? void 0 : _j.items) ? this.schema.items : null, val[i]);\n                array.append(obj);\n                const buttons = document.createElement(\"div\");\n                obj.prepend(buttons);\n                buttons.classList.add(\"json-tool-btns\");\n                const remove = document.createElement(\"div\");\n                remove.classList.add(\"json-tool-btn\");\n                remove.innerText = \"X\";\n                remove.onclick = () => {\n                    var _a;\n                    const arr = [...this.getValue()];\n                    if (arr.length === ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.minItems)) {\n                        alert(`${this.path} needs at least ${arr.length} elements.`);\n                        return;\n                    }\n                    if (!confirm(`Are you sure you want to delete element ${idx}?`))\n                        return;\n                    this.deleteChild(idx);\n                };\n                buttons.append(remove);\n                const up = document.createElement(\"div\");\n                up.classList.add(\"json-tool-btn\");\n                up.innerText = \"ᐃ\";\n                up.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx - 1).concat(element).concat(arr.slice(idx - 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(up);\n                const down = document.createElement(\"div\");\n                down.classList.add(\"json-tool-btn\");\n                down.innerText = \"ᐁ\";\n                down.onclick = () => {\n                    let arr = [...this.getValue()];\n                    const element = arr.splice(idx, 1);\n                    arr = arr.slice(0, idx + 1).concat(element).concat(arr.slice(idx + 1));\n                    this.setCurrentTypeValue(arr);\n                    this.updateElement();\n                };\n                buttons.append(down);\n            }\n        }\n        else if (type === \"boolean\") {\n            const checkbox = document.createElement(\"input\");\n            checkbox.type = \"checkbox\";\n            checkbox.checked = val;\n            checkbox.onchange = () => {\n                this.setCurrentTypeValue(checkbox.checked);\n            };\n            this.element.append(checkbox);\n        }\n        else if (type === \"string\") {\n            if ((_k = this.schema) === null || _k === void 0 ? void 0 : _k.enum) {\n                const select = document.createElement(\"select\");\n                for (const value of [...new Set(this.schema.enum.concat(val))]) {\n                    const option = document.createElement(\"option\");\n                    option.innerText = value;\n                    option.value = value;\n                    select.append(option);\n                }\n                select.value = val;\n                select.onchange = () => {\n                    this.setCurrentTypeValue(select.value);\n                };\n                this.element.append(select);\n            }\n            else if (((_l = this.schema) === null || _l === void 0 ? void 0 : _l.format) === \"textarea\") {\n                const input = document.createElement(\"textarea\");\n                input.value = val;\n                input.minLength = (_o = (_m = this.schema) === null || _m === void 0 ? void 0 : _m.minLength) !== null && _o !== void 0 ? _o : 0;\n                input.maxLength = (_q = (_p = this.schema) === null || _p === void 0 ? void 0 : _p.maxLength) !== null && _q !== void 0 ? _q : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n            else if (((_r = this.schema) === null || _r === void 0 ? void 0 : _r.format) === \"date\") {\n                const input = document.createElement(\"input\");\n                input.type = \"date\";\n                input.onchange = () => {\n                    var _a, _b;\n                    this.setCurrentTypeValue((_b = (_a = input.valueAsDate) === null || _a === void 0 ? void 0 : _a.toDateString()) !== null && _b !== void 0 ? _b : \"\");\n                };\n                this.element.append(input);\n                input.valueAsDate = new Date(val);\n            }\n            else {\n                const input = document.createElement(\"input\");\n                input.type = \"text\";\n                if (((_s = this.schema) === null || _s === void 0 ? void 0 : _s.format) && [\"password\", \"email\", \"color\", \"url\"].includes(this.schema.format))\n                    input.type = this.schema.format;\n                input.value = val;\n                input.minLength = (_u = (_t = this.schema) === null || _t === void 0 ? void 0 : _t.minLength) !== null && _u !== void 0 ? _u : 0;\n                input.maxLength = (_w = (_v = this.schema) === null || _v === void 0 ? void 0 : _v.maxLength) !== null && _w !== void 0 ? _w : 99999999999999;\n                input.onchange = () => {\n                    this.setCurrentTypeValue(input.value);\n                };\n                this.element.append(input);\n            }\n        }\n        else if (type === \"null\") {\n            this.element.append(\"null\");\n        }\n        else if (type === \"number\") {\n            const input = document.createElement(\"input\");\n            input.type = \"number\";\n            input.value = val.toString();\n            input.min = (_z = (_y = (_x = this.schema) === null || _x === void 0 ? void 0 : _x.minimum) === null || _y === void 0 ? void 0 : _y.toString()) !== null && _z !== void 0 ? _z : \"\";\n            input.max = (_2 = (_1 = (_0 = this.schema) === null || _0 === void 0 ? void 0 : _0.maximum) === null || _1 === void 0 ? void 0 : _1.toString()) !== null && _2 !== void 0 ? _2 : \"\";\n            if (JsonElement.isInteger(this.schema))\n                input.step = \"1\";\n            input.onchange = () => {\n                this.setCurrentTypeValue(parseFloat(input.value));\n            };\n            this.element.append(input);\n        }\n        else if (type === \"json\") {\n            const input = document.createElement(\"textarea\");\n            input.value = JSON.stringify(val, null, 3);\n            input.minLength = (_4 = (_3 = this.schema) === null || _3 === void 0 ? void 0 : _3.minLength) !== null && _4 !== void 0 ? _4 : 0;\n            input.maxLength = (_6 = (_5 = this.schema) === null || _5 === void 0 ? void 0 : _5.maxLength) !== null && _6 !== void 0 ? _6 : 99999999999999;\n            input.onchange = () => {\n                const json = input.value;\n                let value = null;\n                try {\n                    value = JSON.parse(json);\n                    this.setCurrentTypeValue(value);\n                    const actualType = JsonElement.getType(value);\n                    this.currentValues[actualType] = value;\n                }\n                catch (e) {\n                    alert(\"Couldn't parse JSON: \" + e);\n                }\n            };\n            this.element.append(input);\n        }\n        else {\n            this.element.append(`[${type}] : ${val}`);\n        }\n        this.update();\n    }\n    createLineNumber(overrideMargin = false) {\n        const lineNumber = document.createElement(\"div\");\n        lineNumber.classList.add(\"line-number\");\n        if (overrideMargin)\n            lineNumber.style.marginTop = \"0\";\n        return lineNumber;\n    }\n    isOpened() {\n        var _a;\n        return (_a = this.parent.getState()[`${this.path}_opened`]) !== null && _a !== void 0 ? _a : true;\n    }\n    setIsOpened(state) {\n        this.parent.getState()[`${this.path}_opened`] = state;\n        this.parent.saveState();\n    }\n    recursiveSetOpened(state) {\n        this.setIsOpened(state);\n        for (const child of [...this.arrayElements, ...Object.values(this.objectElements)])\n            child.recursiveSetOpened(state);\n    }\n    createBlock() {\n        const block = document.createElement(\"div\");\n        block.classList.add(\"json-tool-block\");\n        block.style.paddingLeft = \"25px\";\n        block.style.borderLeft = \"1px dashed black\";\n        block.style.marginLeft = \"3px\";\n        const collapse = document.createElement(\"div\");\n        if (this.path !== \"root\")\n            block.append(collapse);\n        collapse.classList.add(\"json-tool-btn\");\n        collapse.classList.add(\"collapse\");\n        const updateOpened = (opened) => {\n            collapse.innerText = opened ? \"ᐯ\" : \"ᐳ\";\n            block.classList.remove(\"opened\", \"closed\");\n            block.classList.add(opened ? \"opened\" : \"closed\");\n        };\n        const toggle = () => {\n            const opened = !this.isOpened();\n            this.setIsOpened(opened);\n            updateOpened(opened);\n        };\n        collapse.onclick = toggle;\n        updateOpened(this.isOpened());\n        return block;\n    }\n    createObjectKeyValuePair(key, schema, value, noValue = false) {\n        var _a;\n        const parent = document.createElement(\"div\");\n        const originalKey = key;\n        if (typeof key === \"number\") {\n            key = (schema === null || schema === void 0 ? void 0 : schema.title) ? `${schema.title} ${key}` : key;\n        }\n        else {\n            key = (_a = schema === null || schema === void 0 ? void 0 : schema.title) !== null && _a !== void 0 ? _a : key;\n        }\n        const title = document.createElement(\"span\");\n        title.innerText = key.toString();\n        JsonElement.addDescription(title, schema === null || schema === void 0 ? void 0 : schema.description, schema === null || schema === void 0 ? void 0 : schema.examples);\n        parent.append(title);\n        parent.classList.add(\"json-tool-key\");\n        parent.append(\": \");\n        if (!noValue) {\n            const valueElement = document.createElement(\"div\");\n            const element = new JsonElement(originalKey, `${this.path}.${originalKey}`, valueElement, schema, value, this);\n            if (this.currentType === \"array\")\n                this.arrayElements.push(element);\n            else if (this.currentType === \"object\")\n                this.objectElements[originalKey] = element;\n            parent.append(valueElement);\n        }\n        return parent;\n    }\n    changeType(type) {\n        var _a;\n        const prevValue = this.getValue();\n        this.currentType = type;\n        if (type === \"json\") {\n            this.setCurrentTypeValue(prevValue);\n        }\n        else if (!this.currentValues.hasOwnProperty(type)) {\n            if (typeof ((_a = this.schema) === null || _a === void 0 ? void 0 : _a.default) !== \"undefined\" && JsonElement.getType(this.schema.default) === type)\n                this.setCurrentTypeValue(this.schema.default);\n            else\n                this.setCurrentTypeValue(JsonElement.getDefaultValueForType(this.schema, type));\n        }\n        this.updateElement();\n    }\n    setStyle() {\n        this.element.style.whiteSpace = \"pre\";\n        this.element.classList.add(\"json-tool-value\");\n    }\n    getValue() {\n        var _a;\n        let val;\n        if (this.currentType === \"array\") {\n            val = this.arrayElements.map(e => e.getValue());\n        }\n        else if (this.currentType === \"object\") {\n            const obj = {};\n            for (const key in this.objectElements) {\n                obj[key] = this.objectElements[key].getValue();\n            }\n            val = obj;\n        }\n        else {\n            val = (_a = this.currentValues[this.currentType]) !== null && _a !== void 0 ? _a : JsonElement.getDefaultValueForType(this.schema, this.currentType);\n        }\n        this.currentValues[this.currentType] = val;\n        return val;\n    }\n}\n//# sourceMappingURL=JsonTool.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TschArray = exports.TschObject = exports.TschUnion = exports.TschUndefined = exports.TschNull = exports.TschBoolean = exports.TschNumber = exports.TschString = exports.TschType = void 0;\nclass TschValidationError {\n    constructor(path, message) {\n        this.path = path;\n        this.pathString = TschValidationError.formatPath(path);\n        this.rawMessage = message;\n        this.message = `${this.pathString}: ${message}`;\n    }\n    static formatPath(path) {\n        if (path.length < 1)\n            return \"root\";\n        return path.join(\".\");\n    }\n}\nclass TschType {\n    constructor(type) {\n        this._ts = null; //_ts is only used by Typescript for type inference, and so actually doesn't need to be assigned\n        this._type = type;\n        this._title = null;\n        this._description = null;\n        this._default = null;\n        this._examples = null;\n    }\n    union(other) {\n        return new TschUnion(this, other);\n    }\n    optional() {\n        return new TschUnion(this, new TschUndefined());\n    }\n    nullable() {\n        return new TschUnion(this, new TschNull());\n    }\n    clone() {\n        const clone = this.newInstance();\n        clone._title = this._title;\n        clone._description = this._description;\n        clone._default = this._default;\n        clone._examples = this._examples ? [...this._examples] : null;\n        return clone;\n    }\n    title(title) {\n        const clone = this.clone();\n        clone._title = title;\n        return clone;\n    }\n    description(descriptin) {\n        const clone = this.clone();\n        clone._description = descriptin;\n        return clone;\n    }\n    default(defaultValue) {\n        const clone = this.clone();\n        clone._default = defaultValue;\n        return clone;\n    }\n    examples(examples) {\n        const clone = this.clone();\n        clone._examples = [...examples];\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = {\n            \"type\": this._type\n        };\n        if (this._title)\n            schema.title = this._title;\n        if (this._description)\n            schema.description = this._description;\n        if (this._default)\n            schema.default = this._default;\n        if (this._examples)\n            schema.examples = this._examples;\n        return schema;\n    }\n    validate(input) {\n        const errors = [];\n        this.validateInternal([], input, errors);\n        return { valid: errors.length == 0, errors };\n    }\n    validateInternal(path, input, errors) {\n        if (!this.isCorrectType(input)) {\n            errors.push(new TschValidationError(path, `Value has to be of type ${this.getTypeName()}`));\n            return;\n        }\n        this.validateCorrectType(path, input, errors);\n    }\n    isOptional() { return false; }\n    isNullable() { return false; }\n}\nexports.TschType = TschType;\nclass TschString extends TschType {\n    constructor() {\n        super(\"string\");\n        this._format = null;\n        this._enum = null;\n        this._minLength = null;\n        this._maxLength = null;\n    }\n    newInstance() {\n        return new TschString();\n    }\n    clone() {\n        const clone = super.clone();\n        clone._format = this._format;\n        clone._enum = this._enum;\n        clone._minLength = this._minLength;\n        clone._maxLength = this._maxLength;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        if (this._format)\n            schema.format = this._format;\n        if (this._enum)\n            schema.enum = this._enum;\n        if (this._minLength)\n            schema.minLength = this._minLength;\n        if (this._maxLength)\n            schema.maxLength = this._maxLength;\n        return schema;\n    }\n    minLength(min) {\n        const clone = this.clone();\n        clone._minLength = min;\n        return clone;\n    }\n    maxLength(max) {\n        const clone = this.clone();\n        clone._maxLength = max;\n        return clone;\n    }\n    enumeration(enumeration) {\n        const clone = this.clone();\n        clone._enum = [...enumeration];\n        return clone;\n    }\n    format(format) {\n        const clone = this.clone();\n        clone._format = format;\n        return clone;\n    }\n    color() {\n        return this.format(\"color\");\n    }\n    date() {\n        return this.format(\"date\");\n    }\n    email() {\n        return this.format(\"email\");\n    }\n    password() {\n        return this.format(\"password\");\n    }\n    textarea() {\n        return this.format(\"textarea\");\n    }\n    url() {\n        return this.format(\"url\");\n    }\n    isCorrectType(input) {\n        return typeof input === \"string\";\n    }\n    getTypeName() { return \"string\"; }\n    validateCorrectType(path, input, errors) {\n        if (!!this._enum && !this._enum.includes(input)) {\n            errors.push(new TschValidationError(path, `Value has to be one of the following: ${this._enum.join(\", \")}`));\n        }\n        if (typeof this._minLength === \"number\" && input.length < this._minLength) {\n            errors.push(new TschValidationError(path, `Value must be longer than ${this._minLength} characters.`));\n        }\n        if (typeof this._maxLength === \"number\" && input.length > this._maxLength) {\n            errors.push(new TschValidationError(path, `Value must be shorter than ${this._maxLength} characters.`));\n        }\n        if (this._format === \"color\" && !/^#?[0-9a-f]{3,6}$/i.test(input)) {\n            errors.push(new TschValidationError(path, `Value must be a color hex code.`));\n        }\n        if (this._format === \"date\" && Number.isNaN(Date.parse(input))) {\n            errors.push(new TschValidationError(path, `Value must be a date.`));\n        }\n        if (this._format === \"email\" && !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(input)) {\n            errors.push(new TschValidationError(path, `Value must be an email.`));\n        }\n        if (this._format === \"url\" && !/^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b(?:[-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)$/.test(input)) {\n            errors.push(new TschValidationError(path, `Value must be a URL.`));\n        }\n    }\n}\nexports.TschString = TschString;\nclass TschNumber extends TschType {\n    constructor() {\n        super(\"number\");\n        this._integer = false;\n        this._min = null;\n        this._max = null;\n    }\n    newInstance() {\n        return new TschNumber();\n    }\n    clone() {\n        const clone = super.clone();\n        clone._integer = this._integer;\n        clone._min = this._min;\n        clone._max = this._max;\n        return clone;\n    }\n    integer() {\n        const clone = this.clone();\n        clone._integer = true;\n        return clone;\n    }\n    min(min) {\n        const clone = this.clone();\n        clone._min = min;\n        return clone;\n    }\n    max(max) {\n        const clone = this.clone();\n        clone._max = max;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        if (this._integer)\n            schema.type = \"integer\";\n        if (this._min !== null)\n            schema.minimum = this._min;\n        if (this._max !== null)\n            schema.maximum = this._max;\n        return schema;\n    }\n    isCorrectType(input) {\n        return typeof input === \"number\";\n    }\n    getTypeName() { return \"number\"; }\n    validateCorrectType(path, input, errors) {\n        if (this._integer && !Number.isInteger(input)) {\n            errors.push(new TschValidationError(path, `Value has to be an integer.`));\n        }\n        if (typeof this._min === \"number\" && input < this._min) {\n            errors.push(new TschValidationError(path, `Value must be at least ${this._min}.`));\n        }\n        if (typeof this._max === \"number\" && input > this._max) {\n            errors.push(new TschValidationError(path, `Value must be at less than ${this._max}.`));\n        }\n    }\n}\nexports.TschNumber = TschNumber;\nclass TschBoolean extends TschType {\n    constructor() {\n        super(\"boolean\");\n    }\n    newInstance() {\n        return new TschBoolean();\n    }\n    clone() {\n        const clone = super.clone();\n        return clone;\n    }\n    isCorrectType(input) {\n        return typeof input === \"boolean\";\n    }\n    getTypeName() { return \"boolean\"; }\n    validateCorrectType(path, input, errors) {\n    }\n}\nexports.TschBoolean = TschBoolean;\nclass TschNull extends TschType {\n    constructor() {\n        super(\"null\");\n    }\n    newInstance() {\n        return new TschNull();\n    }\n    clone() {\n        const clone = super.clone();\n        return clone;\n    }\n    isCorrectType(input) {\n        return input === null;\n    }\n    getTypeName() { return \"null\"; }\n    validateCorrectType(path, input, errors) {\n    }\n}\nexports.TschNull = TschNull;\nclass TschUndefined extends TschType {\n    constructor() {\n        super(\"undefined\");\n    }\n    newInstance() {\n        return new TschUndefined();\n    }\n    clone() {\n        const clone = super.clone();\n        return clone;\n    }\n    isCorrectType(input) {\n        return typeof input === \"undefined\";\n    }\n    getTypeName() { return \"undefined\"; }\n    validateCorrectType(path, input, errors) {\n    }\n}\nexports.TschUndefined = TschUndefined;\nclass TschUnion extends TschType {\n    constructor(type1, type2) {\n        super(`union_${type1._type}_${type2._type}`);\n        this.type1 = type1;\n        this.type2 = type2;\n    }\n    Type1Internal() { return this.type1; }\n    Type2Internal() { return this.type2; }\n    newInstance() {\n        return new TschUnion(this.type1.clone(), this.type2.clone());\n    }\n    clone() {\n        const clone = super.clone();\n        clone.type1 = this.Type1Internal().clone();\n        clone.type2 = this.Type2Internal().clone();\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        var _a, _b, _c, _d;\n        const schema1 = this.Type1Internal()._type === \"undefined\" ? {} : this.type1.getJsonSchemaProperty();\n        const schema2 = this.Type2Internal()._type === \"undefined\" ? {} : this.type2.getJsonSchemaProperty();\n        const combined = Object.assign(Object.assign({}, schema1), schema2);\n        combined.type = [...(Array.isArray(schema1.type) ? schema1.type : [schema1.type]), ...(Array.isArray(schema2.type) ? schema2.type : [schema2.type])].filter(t => !!t && t !== \"undefined\");\n        if (combined.type.length < 2)\n            combined.type = combined.type[0];\n        if (schema1.properties && schema2.properties) {\n            combined.properties = Object.assign(Object.assign({}, ((_a = schema1.properties) !== null && _a !== void 0 ? _a : {})), ((_b = schema2.properties) !== null && _b !== void 0 ? _b : {}));\n            if (!!schema1.required && !!schema2.required)\n                combined.required = schema1.required.filter((f) => { var _a; return (_a = schema2.required) === null || _a === void 0 ? void 0 : _a.includes(f); });\n            else\n                combined.required = (_d = (_c = schema1.required) !== null && _c !== void 0 ? _c : schema2.required) !== null && _d !== void 0 ? _d : [];\n        }\n        if (this._title)\n            combined.title = this._title;\n        if (this._description)\n            combined.description = this._description;\n        if (this._default)\n            combined.default = this._default;\n        return combined;\n    }\n    isNullable() {\n        return this.Type1Internal()._type === \"null\" || this.Type2Internal()._type === \"null\" || this.Type1Internal().isNullable() || this.Type2Internal().isNullable();\n    }\n    isOptional() {\n        return this.Type1Internal()._type === \"undefined\" || this.Type2Internal()._type === \"undefined\" || this.Type1Internal().isOptional() || this.Type2Internal().isOptional();\n    }\n    isCorrectType(input) {\n        return this.Type1Internal().isCorrectType(input) || this.Type2Internal().isCorrectType(input);\n    }\n    getTypeName() { return `${this.type1.getTypeName()} or ${this.type2.getTypeName()}`; }\n    validateCorrectType(path, input, errors) {\n        if (this.Type1Internal().isCorrectType(input)) {\n            this.Type1Internal().validateInternal(path, input, errors);\n        }\n        if (this.Type2Internal().isCorrectType(input)) {\n            this.Type2Internal().validateInternal(path, input, errors);\n        }\n    }\n}\nexports.TschUnion = TschUnion;\nclass TschObject extends TschType {\n    constructor(shape) {\n        super(\"object\");\n        this.shape = shape;\n    }\n    newInstance() {\n        return new TschObject(this.shape);\n    }\n    clone() {\n        const clone = super.clone();\n        clone.shape = this.shape;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        schema.required = Object.keys(this.shape).filter(k => !this.shape[k].isOptional());\n        schema.properties = {};\n        for (const key in this.shape) {\n            schema.properties[key] = this.shape[key].getJsonSchemaProperty();\n        }\n        return schema;\n    }\n    isCorrectType(input) {\n        return typeof input === \"object\" && input !== null && !Array.isArray(input);\n    }\n    getTypeName() {\n        return \"object\";\n    }\n    validateCorrectType(path, input, errors) {\n        for (const key in this.shape) {\n            const child = this.shape[key];\n            const childInternal = child;\n            if (!childInternal.isOptional() && !input.hasOwnProperty(key)) {\n                errors.push(new TschValidationError(path, `Property ${key} of type ${childInternal.getTypeName()} is required.`));\n            }\n            if (input.hasOwnProperty(key)) {\n                childInternal.validateInternal([...path, key], input[key], errors);\n            }\n        }\n    }\n}\nexports.TschObject = TschObject;\nclass TschArray extends TschType {\n    constructor(elementType) {\n        super(\"array\");\n        this.elementType = elementType;\n        this._format = null;\n        this._minElementCount = null;\n        this._maxElementCount = null;\n        this._unique = false;\n    }\n    newInstance() {\n        return new TschArray(this.elementType);\n    }\n    clone() {\n        const clone = super.clone();\n        clone.elementType = this.elementType;\n        clone._format = this._format;\n        clone._unique = this._unique;\n        clone._minElementCount = this._minElementCount;\n        clone._maxElementCount = this._maxElementCount;\n        return clone;\n    }\n    getJsonSchemaProperty() {\n        const schema = super.getJsonSchemaProperty();\n        schema.items = this.elementType.getJsonSchemaProperty();\n        if (this._format)\n            schema.format = this._format;\n        if (this._unique)\n            schema.uniqueItems = this._unique;\n        if (this._minElementCount)\n            schema.minItems = this._minElementCount;\n        if (this._maxElementCount)\n            schema.maxItems = this._maxElementCount;\n        return schema;\n    }\n    table() {\n        const clone = this.clone();\n        clone._format = \"table\";\n        return clone;\n    }\n    minElements(count) {\n        const clone = this.clone();\n        clone._minElementCount = count;\n        return clone;\n    }\n    maxElements(count) {\n        const clone = this.clone();\n        clone._maxElementCount = count;\n        return clone;\n    }\n    unique() {\n        const clone = this.clone();\n        clone._unique = true;\n        return clone;\n    }\n    isCorrectType(input) {\n        return typeof input === \"object\" && input !== null && Array.isArray(input);\n    }\n    getTypeName() {\n        return `array of ${this.elementType.getTypeName()}`;\n    }\n    validateCorrectType(path, input, errors) {\n        const elementTypeInternal = this.elementType;\n        const used = new Set();\n        if (typeof this._minElementCount === \"number\" && input.length < this._minElementCount) {\n            errors.push(new TschValidationError(path, `Array must contain at least ${this._minElementCount} elements.`));\n        }\n        if (typeof this._maxElementCount === \"number\" && input.length > this._maxElementCount) {\n            errors.push(new TschValidationError(path, `Array must contain at most ${this._maxElementCount} elements.`));\n        }\n        for (let i = 0; i < input.length; i++) {\n            const element = input[i];\n            elementTypeInternal.validateInternal([...path, i.toString()], element, errors);\n            if (this._unique) {\n                const json = JSON.stringify(element);\n                if (used.has(json)) {\n                    errors.push(new TschValidationError(path, \"All values have to be unique.\"));\n                }\n                used.add(json);\n            }\n        }\n    }\n}\nexports.TschArray = TschArray;\n//# sourceMappingURL=TschType.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tsch = void 0;\nconst tsch = __importStar(require(\"./tsch\"));\nexports.tsch = tsch;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.array = exports.object = exports.boolean = exports.number = exports.string = void 0;\nconst TschType_1 = require(\"./TschType\");\nfunction string() { return new TschType_1.TschString(); }\nexports.string = string;\nfunction number() { return new TschType_1.TschNumber(); }\nexports.number = number;\nfunction boolean() { return new TschType_1.TschBoolean(); }\nexports.boolean = boolean;\nfunction object(shape) {\n    return new TschType_1.TschObject(shape);\n}\nexports.object = object;\nfunction array(elementType) {\n    return new TschType_1.TschArray(elementType);\n}\nexports.array = array;\n//# sourceMappingURL=tsch.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tsch_1 = require(\"tsch\");\nconst JsonTool_1 = require(\"./JsonTool\");\nconst person = tsch_1.tsch.object({\n    name: tsch_1.tsch.string().description(\"First and Last Name\").minLength(4).maxLength(6).default(\"Jeremy Dorn\").nullable(),\n    age: tsch_1.tsch.number().integer().default(25).min(18).max(99).optional().title(\"Age\").union(tsch_1.tsch.string()),\n    favorite_color: tsch_1.tsch.string().color().title(\"favorite color\").default(\"#ffa500\").examples([\"#ff0000\", \"#00ff00\"]),\n    gender: tsch_1.tsch.string().enumeration([\"male\", \"female\", \"other\"]),\n    date: tsch_1.tsch.string().date(),\n    alive: tsch_1.tsch.boolean().default(true).nullable().title(\"Alive\").description(\"If checked, this person is still alive\"),\n    description: tsch_1.tsch.string().textarea(),\n    password: tsch_1.tsch.string().password(),\n    website: tsch_1.tsch.string().url(),\n    email: tsch_1.tsch.string().email(),\n    location: tsch_1.tsch.object({\n        city: tsch_1.tsch.string().default(\"San Francisco\"),\n        state: tsch_1.tsch.string().default(\"CA\")\n    }).title(\"Location\"),\n    pets: tsch_1.tsch.array(tsch_1.tsch.object({\n        type: tsch_1.tsch.string().enumeration([\"cat\", \"dog\", \"bird\", \"reptile\", \"other\"]).default(\"dog\"),\n        name: tsch_1.tsch.string()\n    }).title(\"Pet\")).unique().table().default([{ type: \"dog\", name: \"Walter\" }]).minElements(1).maxElements(3)\n}).title(\"Person\");\nconst personJsonSchema = person.getJsonSchemaProperty();\nconst rootElement = document.querySelector(\"#root\");\nif (rootElement) {\n    const tool = new JsonTool_1.JsonTool(rootElement);\n    tool.load(personJsonSchema, { test: 123 }, v => person.validate(v));\n    window.getValue = () => tool.getValue();\n}\n//# sourceMappingURL=www.js.map"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","JsonTool","constructor","element","validator","_a","_b","elementState","undoStack","redoStack","undoing","loadState","containerElement","valid","schema","root","document","createElement","style","fontFamily","marginLeft","classList","add","rootObject","rootElement","errorMessages","controlButtons","undoButton","innerText","onclick","undo","appendChild","redoButton","redo","collapseExpandAll","collapse","querySelectorAll","forEach","click","iframe","width","height","overflow","border","innerHTML","iframeBody","contentDocument","contentWindow","querySelector","append","createCss","onload","deleteChild","key","getState","saveState","window","localStorage","setItem","JSON","stringify","parse","getItem","load","title","textContent","JsonElement","addDescription","description","examples","validate","hide","setValidator","getValue","update","number","toString","setTimeout","errors","map","message","join","pushUndoState","length","unshift","updateUndoRedoButtons","splice","disabled","parent","path","arrayElements","objectElements","setStyle","currentValues","types","getDefaultAvailableTypes","actualType","getType","currentType","push","setCurrentTypeValue","def","getDefaultValue","type","Set","updateElement","getPath","i","val","arr","undefined","static","textDecoration","cursor","Array","isArray","includes","t","availableTypes","default","getDefaultValueForType","_c","isInteger","Math","ceil","minimum","enum","format","Date","toDateString","obj","properties","required","hasOwnProperty","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","_1","_2","_3","_4","_5","_6","display","remove","createLineNumber","typeDiv","select","option","onchange","changeType","changeTypeButton","validTypes","newType","prompt","object","createBlock","keyOrder","createObjectKeyValuePair","buttons","prepend","confirm","array","maxItems","defaultValue","items","setIsOpened","idx","minItems","alert","up","slice","concat","down","checkbox","checked","input","minLength","maxLength","valueAsDate","min","max","maximum","parseFloat","json","overrideMargin","lineNumber","marginTop","isOpened","state","recursiveSetOpened","child","values","block","paddingLeft","borderLeft","updateOpened","opened","noValue","originalKey","valueElement","prevValue","whiteSpace","TschArray","TschObject","TschUnion","TschUndefined","TschNull","TschBoolean","TschNumber","TschString","TschType","TschValidationError","pathString","formatPath","rawMessage","_ts","_type","_title","_description","_default","_examples","union","other","optional","nullable","clone","newInstance","descriptin","getJsonSchemaProperty","validateInternal","isCorrectType","validateCorrectType","getTypeName","isOptional","isNullable","super","_format","_enum","_minLength","_maxLength","enumeration","color","date","email","password","textarea","url","test","Number","isNaN","_integer","_min","_max","integer","type1","type2","Type1Internal","Type2Internal","schema1","schema2","combined","assign","filter","f","shape","keys","k","childInternal","elementType","_minElementCount","_maxElementCount","_unique","uniqueItems","table","minElements","count","maxElements","unique","elementTypeInternal","used","has","__createBinding","create","o","m","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__setModuleDefault","v","__importStar","mod","prototype","call","tsch","boolean","string","TschType_1","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","tsch_1","JsonTool_1","person","name","age","favorite_color","gender","alive","website","location","city","pets","personJsonSchema","tool"],"sourceRoot":""}